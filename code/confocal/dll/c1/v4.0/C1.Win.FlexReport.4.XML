<?xml version="1.0"?>
<doc>
  <assembly>
    <name>C1.Win.FlexReport.4</name>
  </assembly>
  <members>
    <member name="T:C1.Win.FlexReport.BehaviorOptions">
      <summary>
            Specifies compatibility options for a <see cref="T:C1.Win.FlexReport.C1FlexReport" />.
            Properties in this class can be used to control compatibility
            with older versions and with <b>C1Report</b>.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.BehaviorOptions.Reset">
      <summary>
            Resets all properties to their default values.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.BehaviorOptions.AssignFrom(C1.Win.FlexReport.BehaviorOptions)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.FlexReport.BehaviorOptions" /> to the current object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="P:C1.Win.FlexReport.BehaviorOptions.EnableAggregatesOnReportFields">
      <summary>
            Gets or sets a value indicating whether report fields can be used in aggregate functions.
            The default is false. Set this property to true to improve compatibility with C1Report.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BehaviorOptions.AllowHorizontalSplitting">
      <summary>
            Gets or sets a value indicating whether the report content can be split 
            when it is too wide to fit in the horizontal space available on the page.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BehaviorOptions.UseDefaultPrinterPaperSize">
      <summary>
            Gets or sets a value indicating whether the paper size of default printer is used
            when <see cref="!:Layout.PaperKind" /> is <b>Custom</b> and both <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" /> and <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" />
            are <b>0</b> (unspecified).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BehaviorOptions.IgnoreInvisibleFieldsInGrowShrinkSections">
      <summary>
            Gets or sets a value indicating whether invisible fields should be ignored
            when calculating the heights of CanGrow/CanShrink sections.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.IReportScriptContext">
      <summary>
            Represents a local context for script evaluation and execution.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.IReportScriptContext.GetObjectByName(System.String)">
      <summary>
            Retrieves an object by its name.
            </summary>
      <param name="name">The name of the object to get.</param>
      <returns>The named object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.IReportScriptContext.IsNameDefined(System.String)">
      <summary>
            Tests whether the specified name exists in the current context.
            If a certain name is defined by the context (i.e. this method returns true),
            the named object will be retrieved from the context even if a similarly named object
            already exists.
            </summary>
      <param name="name">The name to test.</param>
      <returns>True if the name exists in the context, false otherwise.</returns>
    </member>
    <member name="T:C1.Win.FlexReport.GrowShrinkModeEnum">
      <summary>
            Specifies the logic for handling CanGrow/CanShrink fields.
            </summary>
      <remarks>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.FlexReport.C1FlexReport.GrowShrinkMode" /> property in the <see cref="F:C1.Win.FlexReport.GrowShrinkModeEnum.C1Report" /> class.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.GrowShrinkModeEnum.C1Report">
      <summary>
            Uses the standard C1FlexReport mode, where fields that grow or shrink affect only fields directly below.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.GrowShrinkModeEnum.Access">
      <summary>
            Uses a mode that is similar to MS Access, where fields that grow or shrink affect all fields below, 
            even if they are off to the side of the field that grew or shrank.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportEventHandler">
      <summary>
            Represents the method that will handle <see cref="E:C1.Win.FlexReport.C1FlexReport.StartPage" />, <see cref="E:C1.Win.FlexReport.C1FlexReport.EndPage" />, 
            <see cref="E:C1.Win.FlexReport.C1FlexReport.StartSection" />, <see cref="E:C1.Win.FlexReport.C1FlexReport.PrintSection" />, <see cref="!:C1FlexReport.EndSection" /> events.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportEventArgs">
      <summary>
            Provides data for <see cref="E:C1.Win.FlexReport.C1FlexReport.StartPage" />, <see cref="E:C1.Win.FlexReport.C1FlexReport.EndPage" />, <see cref="E:C1.Win.FlexReport.C1FlexReport.StartSection" />, 
            <see cref="E:C1.Win.FlexReport.C1FlexReport.PrintSection" />, <see cref="!:C1FlexReport.EndSection" /> events.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ReportEventArgs.Page">
      <summary>
            The current page.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ReportEventArgs.Section">
      <summary>
            The current section.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportErrorEventHandler">
      <summary>
            Represents the method that will handle <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" /> event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The <see cref="T:C1.Win.FlexReport.ReportErrorEventArgs" /> object defining event data.</param>
    </member>
    <member name="T:C1.Win.FlexReport.ReportErrorEventArgs">
      <summary>
            Provides data for <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" /> event.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ReportErrorEventArgs.Page">
      <summary>
            The current page.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ReportErrorEventArgs.Exception">
      <summary>
        <see cref="F:C1.Win.FlexReport.ReportErrorEventArgs.Exception" /> that caused the error.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ReportErrorEventArgs.Handled">
      <summary>
            Gets or sets a value that indicates whether the component should throw the <see cref="F:C1.Win.FlexReport.ReportErrorEventArgs.Exception" /> 
            that was detected or whether it should ignore the error and continue rendering the report.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportGetScriptObjectEventHandler">
      <summary>
            Represents the method that will handle <see cref="E:C1.Win.FlexReport.C1FlexReport.GetScriptObject" /> event.
            </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="T:C1.Win.FlexReport.ReportGetScriptObjectEventArgs">
      <summary>
            Provides data for <see cref="E:C1.Win.FlexReport.C1FlexReport.GetScriptObject" /> event.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportGetScriptObjectEventArgs.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.ReportGetScriptObjectEventArgs" /> class.
            </summary>
      <param name="name">The name of the object.</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportGetScriptObjectEventArgs.Name">
      <summary>
            Gets the name of the object used in script.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportGetScriptObjectEventArgs.Object">
      <summary>
            Gets or sets the object associated with name specified in the <see cref="P:C1.Win.FlexReport.ReportGetScriptObjectEventArgs.Name" /> property.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.C1FlexReport">
      <summary>
            Generates data-based banded reports that can be rendered to printer, preview,
            or exported to various portable formats (including XPS, HTML, PDF and other).
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Write(C1.Win.C1Document.Serialization.C1WriterBase)">
      <summary>
            Override in derived classes to provide advanced persistence mechanism.
            Use <see cref="T:C1.Win.C1Document.Serialization.C1WriterBase" /> methods to write additional object properties.
            </summary>
      <param name="writer">
        <see cref="T:C1.Win.C1Document.Serialization.C1WriterBase" /> object provides methods to write additional information.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.ReadProp(C1.Win.C1Document.Serialization.C1ReaderBase)">
      <summary>
            Override in derived classes to provide advanced persistence mechanism.
            Use <see cref="P:C1.Win.C1Document.Serialization.C1ReaderBase.PropName" /> to determine the name of the current property,
            use C1ReaderBase.ReadXXX(...) to read property value.
            </summary>
      <param name="reader">
        <see cref="T:C1.Win.C1Document.Serialization.C1ReaderBase" /> object provides methods and properties to read property value.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnStartReport">
      <summary>
            Raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.StartReport" /> event.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnEndReport">
      <summary>
            Raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.EndReport" /> event.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnGetScriptObject(System.String)">
      <summary>
            Raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.GetScriptObject" /> event.
            </summary>
      <param name="name">The name of object.</param>
      <returns>Returns the object associated with specified name.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnReportError(System.Int32,System.Exception,System.Boolean)">
      <summary>
            Raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" /> event.
            </summary>
      <param name="pageNo">The number of page (one-based) where error occurs.</param>
      <param name="exception">The occured exception.</param>
      <param name="fatal">Indicates whether the component should throw the <paramref name="exception" /> that was detected or whether it should ignore the error and continue rendering the report.</param>
      <returns>Returns <b>false</b> if report rendering should be stopped <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnNoReportData">
      <summary>
            Raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.NoData" /> event.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnPrintSection(C1.Win.FlexReport.Section)">
      <summary>
            Raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.PrintSection" /> event.
            </summary>
      <param name="e">
        <see cref="T:C1.Win.FlexReport.ReportEventArgs" /> that contains event data.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnStartSection(C1.Win.FlexReport.Section)">
      <summary>
            Raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.StartSection" /> event.
            </summary>
      <param name="section">
        <see cref="T:C1.Win.FlexReport.Section" /> object.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnStartPage(System.Int32)">
      <summary>
            Raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.StartPage" /> event.
            </summary>
      <param name="pageNo">The number of the started page.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnEndPage(System.Int32)">
      <summary>
            Raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.EndPage" /> event.
            </summary>
      <param name="pageNo">The number of the finished page.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.OnReportDefinitionChanged">
      <summary>
            Raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportDefinitionChanged" /> event.
            Called each time a property on the current report or on any of the contained objects in changed.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.GetPageImage(System.Int32,System.Drawing.Graphics)">
      <summary>
            Returns a <see cref="T:System.Drawing.Imaging.Metafile" /> representing the specified page.
            </summary>
      <param name="pageIndex">The index of the page.</param>
      <param name="referenceGraphics">The reference graphics used to get device context for metafile.</param>
      <returns>The <see cref="T:System.Drawing.Imaging.Metafile" /> representing the specified page, or <b>null</b> if the page was not found.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.GetPageImage(System.Int32)">
      <summary>
            Returns a <see cref="T:System.Drawing.Imaging.Metafile" /> representing the specified page.
            </summary>
      <param name="pageIndex">The index of the page.</param>
      <returns>The <see cref="T:System.Drawing.Imaging.Metafile" /> representing the specified page, or <b>null</b> if the page was not found.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Clear">
      <summary>
            Clears the current report.
            </summary>
      <remarks>
            This method removes all groups, group sections, fields and parameters, it
            resets the <see cref="P:C1.Win.FlexReport.C1FlexReport.DataSources" /> collection so it will
            contain single <see cref="P:C1.Win.FlexReport.C1FlexReport.DataSource" /> object with name "Main".
            Resets properties of all nested objects like <see cref="P:C1.Win.FlexReport.C1FlexReport.Layout" />, <see cref="P:C1.Win.FlexReport.C1FlexReport.Watermark" /> etc.
            Clears (but does not remove) the fixed sections that all reports have: <b>Detail</b>, <b>Header</b>, 
            <b>Footer</b>, <b>PageHeader</b>, and <b>PageFooter</b>.
            <para>Use this method when you want to clear a report and start creating a new one from scratch.
            </para></remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.IO.Stream,System.String,System.Boolean@)">
      <remarks>
            You can get a list of reports available in the file using the <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.IO.Stream)" /> method. 
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.IO.Stream,System.String)">
      <summary>
            Loads a report from an XML report definition in stream.
            </summary>
      <param name="stream">Stream containing XML report definition.</param>
      <param name="reportName">Name of the report to retrieve from the file (case-insensitive).</param>
      <remarks>
            You can get a list of reports available in the file using the <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.IO.Stream)" /> method. 
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.String,System.String,System.Boolean@)">
      <summary>
            Loads a report from an XML report definition file.
            </summary>
      <param name="fileName">Full name of the XML report definition file.</param>
      <param name="reportName">Name of the report to retrieve from the file (case-insensitive).</param>
      <param name="converted">OUT: Contains true if report definition was imported from old C1Report format.</param>
      <remarks>
            You can get a list of reports available in the file using the <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.String)" /> method. 
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.String,System.String)">
      <summary>
            Loads a report from an XML report definition file.
            </summary>
      <param name="fileName">Full name of the XML report definition file.</param>
      <param name="reportName">Name of the report to retrieve from the file (case-insensitive).</param>
      <remarks>
            You can get a list of reports available in the file using the <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.String)" /> method. 
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.String)">
      <summary>
            Saves the current report definition to a file. 
            </summary>
      <param name="fileName">Full name of the file to be created (if the file already exists, it will be overwritten).</param>
      <remarks>
            This method does not embed pictures and subreports into the output file. It only saves subreport names and saves
            images in external files.
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.String,System.Boolean)">
      <summary>
            Saves the current report definition to a file.
            </summary>
      <param name="fileName">Full name of the file to be created (if the file already exists, it will be overwritten).</param>
      <param name="embedAll">Whether to embed images and subreports into the output file.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.String,System.Boolean,System.Boolean)">
      <summary>
            Saves the current report definition to a file.
            </summary>
      <param name="fileName">Full name of the file to be created (if the file already exists, it will be overwritten).</param>
      <param name="embedImages">Whether to embed images into the output file.</param>
      <param name="embedSubReports">Whether to embed subreports into the output file.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.Xml.XmlDocument,System.String,System.Boolean@)">
      <param name="converted">OUT: flag that is set to true if the loaded report definition was converted from the legacy C1Report format.</param>
      <remarks>
            This method updates <see cref="P:C1.Win.FlexReport.C1FlexReport.BasePath" /> property to the directory
            from which the <paramref name="doc" /> was loaded.
            You can get a list of reports available in a file using the <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.Xml.XmlDocument)" /> method.
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Load(System.Xml.XmlDocument,System.String)">
      <summary>
            Loads a report from an <see cref="T:System.Xml.XmlDocument" />.
            </summary>
      <param name="doc">Reference to the <see cref="T:System.Xml.XmlDocument" /> that contains the reports.</param>
      <param name="reportName">Name of the report to retrieve from the file (case-insensitive).</param>
      <remarks>
            You can get a list of reports available in the file using the <see cref="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.Xml.XmlDocument)" /> method. 
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.IO.Stream,System.Boolean,System.Boolean)">
      <summary>
            Saves the current report definition to a stream.
            </summary>
      <param name="stream">The stream to save to.</param>
      <param name="embedImages">Indicates whether to embed images into the output stream.</param>
      <param name="embedSubReports">Indicates whether to embed subreports into the output stream.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.Xml.XmlWriter)">
      <summary>
            Saves the current report definition to an <see cref="T:System.Xml.XmlWriter" /> object.
            </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> object where the report definition will be saved.</param>
      <remarks>
            This method does not embed pictures and subreports into the output file.
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.Xml.XmlWriter,System.Boolean)">
      <summary>
            Saves the current report definition to an XmlWriter object.
            </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> object where the report definition will be saved.</param>
      <param name="embed">Whether to embed images and subreports into the output stream.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Save(System.Xml.XmlWriter,System.Boolean,System.Boolean)">
      <summary>
            Saves the current report definition to an XmlWriter object.
            </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> object where the report definition will be saved.</param>
      <param name="embedImages">Whether to embed images into the output stream.</param>
      <param name="embedSubReports">Whether to embed subreports into the output stream.</param>
      <param name="basePath">The directory where report data will be located, null by default.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.CopyDefinitionFrom(C1.Win.FlexReport.C1FlexReport)">
      <summary>
            Copies a report definition from another <see cref="T:C1.Win.FlexReport.C1FlexReport" /> component.
            Please note, subreports referenced from the report via <see cref="T:C1.Win.FlexReport.SubreportField" /> or <see cref="T:C1.Win.FlexReport.Field" />
            are not cloned.
            </summary>
      <param name="source">
        <see cref="T:C1.Win.FlexReport.C1FlexReport" /> that contains the report to be copied.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Evaluate(System.String)">
      <summary>
            Evaluates a <b>VBScript</b> expression in the current report context.
            </summary>
      <param name="expression">A string with a <b>VBScript</b> expression to be evaluated.</param>
      <returns>The value of the expression.</returns>
      <remarks>
        <para>Use this method to evaluate expressions as they would be evaluated while generating a report.
            This can be useful in designer-type applications, to provide an "Immediate Window" where users can test 
            expressions.</para>
        <para>If the <b>expression</b> string contains invalid syntax or causes an evaluation error, the control 
            raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" /> event. In this case, the <i>Handled</i> parameter of the event
            is set to true, so the exception is ignored by default.</para>
      </remarks>
      <example>
        <para>Expressions may contain simple <b>VBScript</b> expressions such as:</para>
        <code>
            Console.WriteLine(_c1r.Evaluate("2+2"));
              <i>4</i>
            Console.WriteLine(_c1r.Evaluate(" \"A\" &amp; \"B\" ");
              <i>AB</i></code>
        <para>Expressions may also contain references to the <b>Report</b> object and all its sub-objects. For example:</para>
        <code>
            Console.WriteLine(_c1r.Evaluate("Report.DataSource.RecordSource"));
              <i>SELECT * FROM Employees</i>
            Console.WriteLine(_c1r.Evaluate("Report.DataSource.Recordset.Fields.Count"));
              <i>7</i>
            Console.WriteLine(_c1r.Evaluate("Report.Fields(0).Name"));
              <i>FirstNameField</i></code>
        <para>Finally, data fields, <see cref="T:C1.Win.FlexReport.Field" />, and <see cref="T:C1.Win.FlexReport.Section" /> objects may be referenced directly by name.</para>
        <code>
            Console.WriteLine(_c1r.Evaluate("FirstNameField.Value"));
              <i>Andrew</i>
            Console.WriteLine(_c1r.Evaluate("CategoryName"));
              <i>Beverages</i></code>
      </example>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Evaluate(System.String,C1.Win.FlexReport.IReportScriptContext)">
      <summary>
            Evaluates a <b>VBScript</b> expression.
            </summary>
      <param name="expression">A string with a <b>VBScript</b> expression to be evaluated.</param>
      <param name="context">
        <see cref="T:C1.Win.FlexReport.IReportScriptContext" /> interface used to obtain objects available in expression.</param>
      <returns>The value of the expression.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Execute(System.String)">
      <summary>
            Executes a <b>VBScript</b> statement in the current report context.
            </summary>
      <param name="statement">A string with <b>VBScript</b> instructions to be executed.</param>
      <remarks>
        <para>This method is similar to the <see cref="M:C1.Win.FlexReport.C1FlexReport.Evaluate(System.String)" /> method, except it does not return a value.</para>
        <para>If the <b>expression</b> string contains invalid syntax or causes an evaluation error, the control 
            raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" /> event. In this case, the <i>Handled</i> parameter of the event
            is set to true, so the exception is ignored by default.</para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Execute(System.String,C1.Win.FlexReport.IReportScriptContext)">
      <summary>
            Executes a <b>VBScript</b> statement.
            </summary>
      <param name="statement">A string with <b>VBScript</b> instructions to be executed.</param>
      <param name="context">
        <see cref="T:C1.Win.FlexReport.IReportScriptContext" /> interface used to obtain objects available in expression.</param>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.ParseExpression(System.String)">
      <summary>
            Parses a <b>VBScript</b> expression in the current report context.
            </summary>
      <param name="expression">A string with a <b>VBScript</b> expression to be parsed.</param>
      <returns>An <see cref="T:System.Exception" /> if the expression is invalid, or null if no errors
            were detected.</returns>
      <remarks>
            This method is useful for providing <b>VBScript</b> syntax-checking in designer applications.
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.ParseStatement(System.String)">
      <summary>
            Parses a <b>VBScript</b> statement in the current report context.
            </summary>
      <param name="statement">A string with a <b>VBScript</b> statement to be parsed.</param>
      <returns>An <see cref="T:System.Exception" /> if the statement is invalid, or null if no errors
            were detected.</returns>
      <remarks>
            This method is useful for providing <b>VBScript</b> syntax-checking in designer applications.
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.Render">
      <summary>
            Renders the report.
            This method is a shortcut to the <see cref="M:C1.Win.C1Document.C1DocumentSource.Generate" /> method on the base class.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.C1FlexReport.RenderAsyncEx" -->
    <member name="M:C1.Win.FlexReport.C1FlexReport.RenderAsync">
      <summary>
            Non-blocking (asynchronous) version of the <see cref="M:C1.Win.FlexReport.C1FlexReport.Render" /> method.
            This method is a shortcut to the <see cref="M:C1.Win.C1Document.C1DocumentSource.GenerateAsync" /> method on the base class.
            </summary>
      <seealso cref="M:C1.Win.FlexReport.C1FlexReport.Render" />
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.RenderToFilter(C1.Win.C1Document.Export.ExportFilter)">
      <summary>
            Renders the report into an <see cref="T:C1.Win.C1Document.Export.ExportFilter" /> object.
            This method is a shortcut to the <see cref="M:C1.Win.C1Document.C1DocumentSource.Export(C1.Win.C1Document.Export.ExportFilter)" /> method on the base class.
            </summary>
      <param name="filter">Export filter that will render the report.</param>
      <remarks>
        <para>
          <see cref="T:C1.Win.FlexReport.C1FlexReport" /> includes several built-in export filters that allow you to export reports 
            to HTML, PDF, RTF, Excel, and other formats.</para>
        <para>You may create your own filters by creating classes that derive from any of these base filters.</para>
      </remarks>
      <param name="filter">The exporter to use.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.C1FlexReport.RenderToFilterAsyncEx(C1.Win.C1Document.Export.ExportFilter)" -->
    <member name="M:C1.Win.FlexReport.C1FlexReport.RenderToFilterAsync(C1.Win.C1Document.Export.ExportFilter)">
      <summary>
            Non-blocking (asynchronous) version of the <see cref="M:C1.Win.FlexReport.C1FlexReport.RenderToFilter(C1.Win.C1Document.Export.ExportFilter)" /> method.
            This method is a shortcut to the <see cref="M:C1.Win.C1Document.C1DocumentSource.ExportAsync(C1.Win.C1Document.Export.ExportFilter)" /> method on the base class.
            </summary>
      <param name="filter">The exporter to use.</param>
      <returns>Asynchronous value object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.String)">
      <summary>
            Gets a list of reports available in an XML report definition file.
            </summary>
      <param name="fileName">Contains the full name of the XML report definition file.</param>
      <returns>A string array containing the names of all reports in the XML file.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.IO.Stream)">
      <summary>
            Gets a list of reports available in an XML report definition file.
            </summary>
      <param name="stream">Contains the stream with XML report definition.</param>
      <returns>A string array containing the names of all reports in the XML definition.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.C1FlexReport.GetReportList(System.Xml.XmlDocument)">
      <summary>
            Gets a list of reports available in an <see cref="T:System.Xml.XmlDocument" />.
            </summary>
      <param name="doc">Reference to <see cref="T:System.Xml.XmlDocument" /> object.</param>
      <returns>A string array containing the names of all reports in the <b>XmlDocument</b>.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.RightToLeft">
      <summary>
            Gets or sets a value indicating whether the fields of the report should use right-to-left rules for rendering text.
            <para>If null (which is the default), the value of the static property <see cref="P:C1.Win.FlexReport.C1FlexReport.DefaultRightToLeft" /> is used.</para><para>This value may be overridden by individual fields.</para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ActualRightToLeft">
      <summary>
            Gets the actual right-to-left value that is being used. The value is obtained using the following rules:
            <list type="number"><item>If <see cref="P:C1.Win.FlexReport.C1FlexReport.RightToLeft" /> is not null, then that value is used.</item><item>If the current report is a sub-report, then <see cref="P:C1.Win.FlexReport.C1FlexReport.ActualRightToLeft" /> of the owner subreport field is used.</item><item>Else the value of <see cref="P:C1.Win.FlexReport.C1FlexReport.DefaultRightToLeft" /> static property is used.</item></list></summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.AvailableHeight">
      <summary>
            Gets the height of the remaining area available for sections on the current page.
            This property can only be used while the report is being rendered in paginated mode (i.e. when <see cref="!:IsBusy" /> and <see cref="!:Paginated" /> are true).
            If <see cref="!:IsBusy" /> is false then -1 is returned. If <see cref="!:Paginated" /> is false then double.MaxValue is returned.
            Note that if used in OnPrint/OnFormat scripts, this value does NOT account for the current section's height.
            For subreports this property returns <see cref="P:C1.Win.FlexReport.C1FlexReport.AvailableHeight" /> of the master report.
            </summary>
      <remarks>
            Here is an example of code which can be used in the detail section's OnFormat script
            to determine whether the current detail section will be the last one printed on the page
            (the test checks that the current section will fit onto the page while the next section won't):
            <code>
            h = Detail.RenderHeight
            ah = Report.AvailableHeight
            if (h &lt; ah) and (2 * h &gt; ah) then
              Detail.BackColor = RGB(255, 0, 0) ' last on page
            else
              Detail.BackColor = RGB(255, 255, 255)
            endif
            </code></remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.CurrentDataScope">
      <summary>
            For internal use.
            Specifies the current data scope.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.PageSettings">
      <summary>
            Overriden.
            This is shortcut to the page settings returned by the <see cref="P:C1.Win.FlexReport.C1FlexReport.Layout" /> object
            accessible via the <see cref="P:C1.Win.FlexReport.C1FlexReport.Layout" /> property.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ActualCulture">
      <summary>
            Gets the actual culture used in report, returns <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />
            if <see cref="P:C1.Win.FlexReport.C1FlexReport.Culture" /> is null.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Culture">
      <summary>
            Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> determining the current report culture.
            This culture is used to convert values to/from strings.
            By default it is null, in which case the <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> is used.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.SupportedExportProviders">
      <summary>
            Overridden. Gets an array of exporters supported by the current document source object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Features">
      <summary>
            Overridden. Gets a <see cref="T:C1.Win.C1Document.C1DocumentSourceFeatures" /> object defining
            features of the <see cref="T:C1.Win.FlexReport.C1FlexReport" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Credential">
      <summary>
            Gets or sets the default credential used during rendering of the report.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Document">
      <summary>
            Gets a <see cref="N:C1.Win.C1Document" /> object produced by the current <see cref="T:C1.Win.FlexReport.C1FlexReport" /> during
            report rendering.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DocumentName">
      <summary>
            Overriden. Gets the user-frienly name for this <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ReportName">
      <summary>
            Gets or sets the name of the report (used with the Load method).
            </summary>
      <remarks>
        <para>This property identifies the report when it is saved in a report definition file.</para>
        <para>To retrieve a report from a report definition file, use the <see cref="M:C1.Win.FlexReport.C1FlexReport.Load(System.String,System.String)" /> method 
            and pass this name as a parameter.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Fields">
      <summary>
            Gets the collection of <see cref="T:C1.Win.FlexReport.Field" /> objects in the report definition.
            </summary>
      <remarks>
            The <see cref="T:C1.Win.FlexReport.Section" /> object also contains a collection of fields in that section.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DataSources">
      <summary>
            Gets the collection of <see cref="P:C1.Win.FlexReport.C1FlexReport.DataSource" /> objects used in report.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Sections">
      <summary>
            Gets the collection of <see cref="T:C1.Win.FlexReport.Section" /> objects in the report definition.
            </summary>
      <remarks>
            This collection always contains at least five items, which correspond to the standard report 
            sections that are always present: Detail, Header, Footer, PageHeader, and PageFooter.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Parameters">
      <summary>
            Gets a collection of parameters used to generate report.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Groups">
      <summary>
            Gets a collection with all the groups in the report.
            </summary>
      <remarks>
        <para>The <b>Groups</b> collection contains all <see cref="T:C1.Win.FlexReport.Group" /> objects defined in the current report.</para>
        <para>Removing a <b>Group</b> from the collection also removes its associated header and footer sections, as well 
            as any fields in those sections.</para>
        <para>Adding a <b>Group</b> to the collection adds the corresponding group header and footer sections to the report.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.FileName">
      <summary>
            Gets the filename that was used to load or save the report.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.BasePath">
      <summary>
            Gets or sets the StorageFolder that is used to search for any additional files specified with relative path names.
            This property is updated automatically when a report is loaded from a file.
            If you load a report definition from a <see cref="T:System.IO.MemoryStream" /> or 
            via the <see cref="P:C1.Win.FlexReport.C1FlexReport.ReportDefinition" /> property,
            make sure that WorkingDirectory has the correct value if the report template contains items with relative file names.
            If this property is null then <see cref="P:C1.Win.FlexReport.C1FlexReport.DefaultBasePath" /> is used,
            otherwise <see cref="!:Enviroment.CurrentDirectory" /> is used.
            </summary>
      <seealso cref="P:C1.Win.FlexReport.C1FlexReport.DefaultBasePath" />
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Font">
      <summary>
            Gets or sets the default font used by report fields.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Tag">
      <summary>
            Gets or sets arbitrary user-defined data.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.BehaviorOptions">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.C1FlexReport.BehaviorOptions" /> object containing options controlling the behavior of the report.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ReportInfo">
      <summary>
            Gets or sets a <see cref="P:C1.Win.FlexReport.C1FlexReport.ReportInfo" /> object containing report metadata.
            </summary>
      <remarks>
        <para>Reports may include general information such as a title, author, and keywords.</para>
        <para>Such global information about the document itself (as opposed to its content or 
            structure) is called metadata, and is intended to assist in cataloguing and 
            searching for reports and report definitions in external databases.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DataSource">
      <summary>
            Gets or sets a reference to the report's main <see cref="P:C1.Win.FlexReport.C1FlexReport.DataSource" />,
            or null if the report is unbound.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DataSourceName">
      <summary>
            Gets or sets the name of the report's main data source.
            This name should match the name of a data source in the <see cref="P:C1.Win.FlexReport.C1FlexReport.DataSources" /> collection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Layout">
      <summary>
            Gets a reference to the report's <see cref="P:C1.Win.FlexReport.C1FlexReport.Layout" /> object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.MaxPages">
      <summary>
            Gets or sets the maximum number of pages allowed for a report.
            </summary>
      <remarks>
        <para>This property is useful if you want to limit the maximum number of pages in a report.</para>
        <para>For example, you may write a report designer with a preview window that shows only the first 
            five pages of a report.</para>
        <para>Setting this property to zero allows reports of any length.</para>
        <para>You can also limit the size of reports by setting the 
            <see cref="!:C1.C1FlexReport.DataSource.MaxRecords" /> property.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DoEvents">
      <summary>
            Specifies whether the control should handle Windows messages while rendering reports in synchronious mode.
            </summary>
      <remarks>
        <para>Setting this property to true allows users to resize forms, click buttons, etc. while reports are 
            being generated in synchronious mode. This makes applications more responsive, and is necessary if you want to provide a 
            "Cancel Report" button (otherwise users wouldn't be able to click the button until the report was done).</para>
        <para>Setting this property to false will cause reports to render slightly faster.</para>
      </remarks>
      <example>
        <para>The code below implements "Render" and a "Cancel" buttons attached to a <see cref="T:C1.Win.FlexReport.C1FlexReport" /> component.</para>
        <para>The "Render" button checks whether the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> component is busy before starting to render a report.
            This is necessary because the user could click the "Render" button several times in a row, before the component got a 
            chance to finish rendering the report. (Calling the <see cref="M:C1.Win.FlexReport.C1FlexReport.Render" /> method while the component is busy throws an 
            <see cref="T:System.Exception" />).</para>
        <para>The "Cancel" button checks whether the component is rendering a report and sets the <see cref="P:C1.Win.FlexReport.C1FlexReport.Cancel" /> 
            property to true.</para>
        <code>
            _c1r.DoEvents = true;
            
            private void Render_Click(object sender, EventArgs e)
            {
               if (_c1r.IsBusy)
               {
                   Console.WriteLine("Cannot render now, component is busy");
               } 
               else 
               {
                   ppv.Document = c1r;
               } 
            }
            private void Cancel_Click(object sender, EventArgs e) 
            {
               if (_c1r.IsBusy) 
               {
                   _c1r.Cancel = true;
               } 
               else 
               {
                   Console.WriteLine("No report to cancel");
               }
            }
            </code>
      </example>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Cancel">
      <summary>
            Specifies whether to cancel generation of the current report.
            </summary>
      <remarks>
            Setting this property to true while a report is being generated stops the report generation process.
            Any pages already created are kept in the document and can be previewed or printed by an attached
            print preview control.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.OnOpen">
      <summary>
            Gets or sets the <b>VBScript</b> that is executed when the report starts rendering.
            </summary>
      <remarks>
        <para>The control also fires the <see cref="E:C1.Win.FlexReport.C1FlexReport.StartReport" /> event at this time.</para>
        <para>The difference between the regular event and the VBScript property is that the handler for the regular event 
            belongs to the application, and should thus be used to support tasks that are independent of the report.
            For example, to display a message on the main window when rendering starts.</para>
        <para>The VBScript handler in the property belongs to the report, and will be executed regardless of the application.
            For example, a report might contain a VBScript handler that resets global variables in the VBScript context 
            when a report starts rendering.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.OnClose">
      <summary>
            Gets or sets the <b>VBScript</b> that is executed when the report finishes rendering.
            </summary>
      <remarks>
        <para>The control also fires the <see cref="E:C1.Win.FlexReport.C1FlexReport.EndReport" /> event at this time.</para>
        <para>The difference between the regular event and the VBScript property is that the handler for the regular event 
            belongs to the application, and should thus be used to support tasks that are independent of the report.
            For example, to display a message on the main window when rendering finishes.</para>
        <para>The VBScript handler in the property belongs to the report, and will be executed regardless of the application.
            For example, a report might contain a VBScript handler that resets global variables in the VBScript context 
            when a report starts rendering.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.OnNoData">
      <summary>
            Gets or sets the <b>VBScript</b> that is executed when the report starts rendering and its source recordset is empty.
            </summary>
      <remarks>
        <para>The control also fires the <see cref="E:C1.Win.FlexReport.C1FlexReport.NoData" /> event at this time.</para>
        <para>The difference between the regular event and the VBScript property is that the handler for the regular event 
            belongs to the application, and should thus be used to support tasks that are independent of the report.
            For example, to cancel rendering reports with no data.</para>
        <para>The VBScript handler in the property belongs to the report, and will be executed regardless of the application.
            For example, a report might contain a VBScript handler that changes the value of a field when the source recordset is 
            empty.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.OnPage">
      <summary>
            Gets or sets the <b>VBScript</b> that is executed when a new page is created.
            </summary>
      <remarks>
        <para>The control also fires the <see cref="E:C1.Win.FlexReport.C1FlexReport.StartPage" /> event at this time.</para>
        <para>The difference between the regular event and the VBScript property is that the handler for the regular event 
            belongs to the application, and should thus be used to support tasks that are independent of the report.
            For example, to update a label showing how many pages have been rendered so far.</para>
        <para>The VBScript handler in the property belongs to the report, and will be executed regardless of the application.
            For example, a report might contain a VBScript handler that updates a variable at every page break.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.OnError">
      <summary>
            Gets or sets the <b>VBScript</b> that is executed when an error occurs.
            </summary>
      <remarks>
        <para>The control also fires the <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" /> event at this time.</para>
        <para>The difference between the regular event and the VBScript property is that the handler for the regular event 
            belongs to the application, and should thus be used to support tasks that are independent of the report.
            For example, to display a an application dialog box when an error occurs.</para>
        <para>The VBScript handler in the property belongs to the report, and will be executed regardless of the application.
            For example, a report might contain a VBScript handler that changes the value of a field when an error occurs.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.GlobalScripts">
      <summary>
            Gets or sets the global <b>VBScript</b> module.
            Functions and subroutines defined here (using the standard VBScript syntax) can be used in other scripts in the current report
            like standard VBScript functions.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.LabelOffset">
      <summary>
            Gets or sets the position of the first label on a partially used sheet.
            </summary>
      <remarks>
            This property allows you to print labels on partially used label sheets. For example, 
            if you have a sheet with 12 labels and have already used 5, set the <b>LabelOffset</b> 
            property to 6 in order to skip the labels that have already been used.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.GrowShrinkMode">
      <summary>
            Gets or sets the method used to process CanGrow/CanShrink fields.
            </summary>
      <remarks>
        <para>If this property is set to <see cref="F:C1.Win.FlexReport.GrowShrinkModeEnum.C1Report" />, fields with 
            <see cref="P:C1.Win.FlexReport.Field.CanGrow" /> or <see cref="P:C1.Win.FlexReport.Field.CanShrink" /> properties set to true will move fields directly 
            below them when they grow or shrink. Fields located below but off to the side are not moved.</para>
        <para>If this property is set to <see cref="F:C1.Win.FlexReport.GrowShrinkModeEnum.Access" />, fields that grow or shrink will 
            affect all fields below, even those which are not directly under the field that was modified as a result of 
            <b>CanGrow</b>/<b>CanShrink</b>. (This is the Microsoft Access behavior).</para>
        <para>For example, if fields are arranged in a grid layout and <see cref="P:C1.Win.FlexReport.C1FlexReport.GrowShrinkMode" /> is set to 
            <see cref="F:C1.Win.FlexReport.GrowShrinkModeEnum.Access" />, fields within each row will remain vertically aligned when fields 
            above them grow or shrink.</para>
        <para>If <see cref="P:C1.Win.FlexReport.C1FlexReport.GrowShrinkMode" /> is set to <see cref="F:C1.Win.FlexReport.GrowShrinkModeEnum.C1Report" />, fields within each 
            column will move independently of fields in other columns, and fields within each row will not remain vertically 
            aligned.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.IgnoreScriptErrors">
      <summary>
            Specifies whether the component should ignore script errors by default.
            </summary>
      <remarks>
        <para>When the script interpreter finds an error in a script or expression, the 
            component raises the <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" /> event. This property specifies
            the default value for the <b>Handled</b> parameter in that event.</para>
        <para>If <b>IgnoreScriptErrors</b> is set to true, script errors are ignored
            by default (the <b>Handled</b> parameter is initialized to true).</para>
        <para>If <b>IgnoreScriptErrors</b> is set to false, script errors throw
            exceptions by default (the <b>Handled</b> parameter is initialized to false).</para>
        <para>In either case, the <see cref="E:C1.Win.FlexReport.C1FlexReport.ReportError" /> event handler may override 
            the default by changing the value of the <b>Handled</b> parameter.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ExposeScriptObjects">
      <summary>
            Specifies whether script objects of report should be exposed to subreports.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.RecordsPerPage">
      <summary>
            Gets or sets the number of detail records to render per page or group.
            </summary>
      <remarks>
        <para>This is useful when printing forms that must have a specific number of rows.</para>
        <para>If the number of records is greater than the value specified, group or page breaks 
            are added to limit the number of records rendered in each group of detail sections.</para>
        <para>If the number of detail records is smaller than the value specified, blank
            records are added so the group of detail sections has the specified number of records.</para>
        <para>If this property is set to zero (the default value), then it has no
            effect.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Page">
      <summary>
            Gets or sets the current page number.
            </summary>
      <remarks>
        <para>This property is a global variable available to <b>VBScript</b> expressions.</para>
        <para>It is automatically initialized by the control with the value 1 when a report starts rendering, 
            and it is automatically incremented after each page break.</para>
        <para>This property is read-write, so you can reset it using scripts. For example, you can reset the
            current page to 1 whenever a new group starts rendering.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ParentReport">
      <summary>
            Gets the main report that contains this subreport (null for main reports).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.ReportDefinition">
      <summary>
            Gets or sets an Xml string containing the complete report definition.
            </summary>
      <remarks>
            This property can be used to store report definitions into databases, to place them in the clipboard, 
            or to copy reports from one <see cref="T:C1.Win.FlexReport.C1FlexReport" /> component to another.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Watermark">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.C1FlexReport.Watermark" /> object defining properties of the report's watermark.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.Overlay">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.C1FlexReport.Watermark" /> object defining properties of the report's overlay.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.FormatVersion">
      <summary>
            Gets the <see cref="T:C1.Win.C1Document.Serialization.C1FormatVersion" /> object specifying the version of the report definition files.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DefaultRightToLeft">
      <summary>
            Gets or sets the value used as the default for the <see cref="P:C1.Win.FlexReport.C1FlexReport.RightToLeft" /> property.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.C1FlexReport.DefaultBasePath">
      <summary>
            Gets or sets the default directory that is used to resolve relative file names.
            By default this property is null, in which case <b>Enviroment.CurrentDirectory</b> is used.
            </summary>
      <seealso cref="P:C1.Win.FlexReport.C1FlexReport.BasePath" />
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.RenderCompleted">
      <summary>
            Occurs when the <see cref="M:C1.Win.FlexReport.C1FlexReport.RenderAsync" /> method has completed.
            </summary>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.ReportDefinitionChanged">
      <summary>
            Occurs when the current report definition changes.
            </summary>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.StartReport">
      <summary>
            Occurs when the report starts rendering, before it opens the datasources and checks parameters.
            </summary>
      <remarks>
        <para>You can use this event to provide user feedback or to make changes to the 
            datasources properties.</para>
        <para>For example, you may implement your own version of parameterized queries by asking the 
            user to provide some information and changing the <see cref="!:DataSource.RecordSource" /> 
            property accordingly.</para>
        <para>You may also use this event to assign a <see cref="T:System.Data.DataTable" /> object directly to the 
            report's <see cref="!:DataSource.Recordset" /> property. Applications that already have the 
            report data should do this to save time by preventing <see cref="T:C1.Win.FlexReport.C1FlexReport" /> from loading its own copy 
            of the data.</para>
      </remarks>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.EndReport">
      <summary>
            Occurs when the report finishes rendering.
            </summary>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.ReportError">
      <summary>
            Occurs when an error occurs while rendering a report.
            </summary>
      <remarks>
        <para>The most common types of errors found when rendering reports are:</para>
        <para>1) Invalid connection string or SQL query.
            This usually indicates that the system could not open the specified database (a server may be off line, or 
            a database file may be in a different location than what was specified) or that the SQL syntax used for the 
            <see cref="P:C1.Win.FlexReport.C1FlexReport.DataSource" /> contains errors.</para>
        <para>2) Error executing scripts or evaluating expressions. This usually indicates that the VBScript expression 
            used contains a syntax error. In these cases, make sure you look at the exception message. It usually contains a 
            good explanation of what caused the error.</para>
      </remarks>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.GetScriptObject">
      <summary>
            Occurs when an unknown object is found in the report's script or expression.
            </summary>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.NoData">
      <summary>
            Occurs when the report starts rendering and the main report data source is empty.
            </summary>
      <remarks>
        <para>You can use this event to cancel rendering a report when the source recordset is empty.</para>
        <para>If you don't cancel the report, it will be rendered as an unbound report (a self-contained report 
            with no underlying data).</para>
      </remarks>
      <example>
            The code below cancels a report when it has no data:
            <code>
            private void c1r_NoData(object sender, EventArgs e)
            {
                _c1r.Cancel = true;
            }
            </code></example>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.StartSection">
      <summary>
            Occurs before each <see cref="T:C1.Win.FlexReport.Section" /> is formatted.
            </summary>
      <remarks>
        <para>When this event fires, the report fields have not been updated with the current values or sizes.</para>
        <para>This is a good point to set field formatting parameters and visibility based on the current data values.</para>
        <para>This event is equivalent to the <see cref="P:C1.Win.FlexReport.Section.OnFormat" /> script property.</para>
      </remarks>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.PrintSection">
      <summary>
            Occurs before each <see cref="T:C1.Win.FlexReport.Section" /> is printed (after it has been formatted.)
            </summary>
      <remarks>
        <para>When this event fires, the field values and sizes have been set by the control.</para>
        <para>You may still make changes, but they will not affect the field layout. For example, changing a field's 
            <see cref="P:C1.Win.FlexReport.Field.Text" /> property at this point will not cause it to grow or shrink.</para>
        <para>This event is equivalent to the <see cref="P:C1.Win.FlexReport.Section.OnPrint" /> script property.</para>
      </remarks>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.StartPage">
      <summary>
            Occurs when a new page starts rendering.
            </summary>
      <remarks>
        <para>This event is useful for updating the user interface to show how many pages have been printed so far.</para>
        <para>You can use the <see cref="P:C1.Win.FlexReport.C1FlexReport.Cancel" /> property while handling this event to cancel rendering the report.
            To limit the number of pages that can be printed, use the <see cref="P:C1.Win.FlexReport.C1FlexReport.MaxPages" /> property instead.</para>
      </remarks>
    </member>
    <member name="E:C1.Win.FlexReport.C1FlexReport.EndPage">
      <summary>
            Occurs when a page finishes rendering.
            </summary>
      <remarks>
        <para>This event is useful for updating the user interface to show how many pages have been printed so far.</para>
        <para>You can use the <see cref="P:C1.Win.FlexReport.C1FlexReport.Cancel" /> property while handling this event to cancel rendering the report.
            To limit the number of pages that can be printed, use the <see cref="P:C1.Win.FlexReport.C1FlexReport.MaxPages" /> property instead.</para>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.FieldCollection">
      <summary>
            Represents the collection of the <see cref="T:C1.Win.FlexReport.FieldBase" /> objects.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportObjectCollection`1">
      <summary>
            Represents the collection of the <see cref="T:C1.Win.FlexReport.ReportObject" /> objects.
            </summary>
      <typeparam name="TItem">The type of elements in the collection.</typeparam>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObjectCollection`1.Contains(`0)">
      <summary>
            Determines whether the collection contains a specific item.
            </summary>
      <param name="item">The item to check.</param>
      <returns>True if the collection contains specified item; false otherwise.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObjectCollection`1.Contains(System.String)">
      <summary>
            Determines whether the collection contains an item with specified name.
            </summary>
      <param name="name">The name of the item.</param>
      <returns>True if the collection contains an item with the specified name;
             otherwise, false.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObjectCollection`1.IndexByName(System.String)">
      <summary>
            Gets the index of the element by its name.
            </summary>
      <param name="name">The name of element.</param>
      <returns>The zero-based index of element with specified name or -1 if name not specified.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObjectCollection`1.FindByName(System.String)">
      <summary>
            Gets the item by its name, returns null if not found.
            </summary>
      <param name="name">The name of the item.</param>
      <returns>Returns the item with specified name, null otherwise.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObjectCollection`1.IndexOf(`0)">
      <summary>
            Gets the index of the element.
            </summary>
      <param name="item">The element.</param>
      <returns>The zero-based index of element or -1 if element does not exist in the collection.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObjectCollection`1.Move(System.Int32,System.Int32)">
      <summary>
            Moves the item with the specified <paramref name="index" /> to a new new position specified by <paramref name="newIndex" />.
            </summary>
      <param name="index">The current index.</param>
      <param name="newIndex">The new index.</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObjectCollection`1.Item(System.Int32)">
      <summary>
            Gets the element at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to get.</param>
      <returns>The element at specified index.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObjectCollection`1.Item(System.String)">
      <summary>
            Gets the element with specified name.
            </summary>
      <param name="name">The name of the element to get.</param>
      <returns>The element with specified name.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObjectCollection`1.Count">
      <summary>
            Gets the number of elements in the collection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObjectCollection`1.Report">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object owning this collection.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.Add(System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a <see cref="T:C1.Win.FlexReport.Field" /> to the collection. This overload adds a legacy field type and is deprecated.
            </summary>
      <param name="name">Contains the name of the new field. You should use a consistent naming scheme for the fields 
            and avoid using duplicate names for report fields and database fields. Using repeated names is legal but will 
            cause VBScript expressions that use repeated field names to yield unexpected results.</param>
      <param name="text">Contains the value for the new field's <see cref="P:C1.Win.FlexReport.Field.Text" /> property. This value 
            may be treated as a literal or as a VBScript expression, depending on the setting of the field's 
            <see cref="P:C1.Win.FlexReport.Field.Calculated" /> property. By default, <see cref="P:C1.Win.FlexReport.Field.Calculated" /> is set to false and the text 
            is rendered as-is.</param>
      <param name="left">Left coordinate of the new field, in twips, with respect to its containing section.</param>
      <param name="top">Top coordinate of the new field, in twips, with respect to its containing section.</param>
      <param name="width">Width of the new field, in twips.</param>
      <param name="height">Height of the new field, in twips.</param>
      <returns>A reference to the newly added field.</returns>
      <remarks>
        <para>If you add a field to a section's <see cref="P:C1.Win.FlexReport.Section.Fields" /> collection, the new field is automatically 
            assigned to that section.</para>
        <para>If you add a field to the control's <see cref="P:C1.Win.FlexReport.C1FlexReport.Fields" /> collection, the new field is not assigned 
            to any sections. In this case, you must set the field's <see cref="!:Field.Section" /> property or it will not be 
            rendered in the report.</para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.Add(System.String,System.String,C1.Win.Interop.Rect)">
      <summary>
            Adds a <see cref="T:C1.Win.FlexReport.Field" /> to the collection.
            </summary>
      <param name="name">Contains the name of the new field. You should use a consistent naming scheme for the fields 
            and avoid using duplicate names for report fields and database fields. Using repeated names is legal but will 
            cause VBScript expressions that use repeated field names to yield unexpected results.</param>
      <param name="text">Contains the value for the new field's <see cref="P:C1.Win.FlexReport.Field.Text" /> property. This value 
            may be treated as a literal or as a VBScript expression, depending on the setting of the field's 
            <see cref="P:C1.Win.FlexReport.Field.Calculated" /> property. By default, <see cref="P:C1.Win.FlexReport.Field.Calculated" /> is set to false and the text 
            is rendered as-is.</param>
      <param name="rc">Defines the position of the field, in twips, with respect to its containing section.</param>
      <returns>A reference to the newly added field.</returns>
      <remarks>
        <para>If you add a field to a section's <see cref="P:C1.Win.FlexReport.Section.Fields" /> collection, the new field is automatically 
            assigned to that section.</para>
        <para>If you add a field to the control's <see cref="P:C1.Win.FlexReport.C1FlexReport.Fields" /> collection, the new field is not assigned 
            to any sections. In this case, you must set the field's <see cref="!:Field.Section" /> property or it will not be 
            rendered in the report.</para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.Add(C1.Win.FlexReport.FieldBase)">
      <summary>
            Adds a field or a clone of a field to the collection.
            </summary>
      <param name="field">A <see cref="T:C1.Win.FlexReport.FieldBase" /> object to add to the collection.</param>
      <returns>A reference to the newly added field.</returns>
      <remarks>
            If the field does not belong to any reports, it is added to the collection. If the field already
            belongs to a report, a clone is created and added to the collection.
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.RemoveAt(System.Int32)">
      <summary>
            Removes a field from the collection.
            </summary>
      <param name="index">Specifies the field to be removed.</param>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.Remove(System.Int32)">
      <summary>
            Removes a field from the collection.
            </summary>
      <param name="index">Specifies the field to be removed.</param>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.Remove(System.String)">
      <summary>
            Removes a field from the collection.
            </summary>
      <param name="name">The name of the field to be removed.</param>
    </member>
    <member name="M:C1.Win.FlexReport.FieldCollection.Remove(C1.Win.FlexReport.FieldBase)">
      <summary>
            Removes a field from the collection.
            </summary>
      <param name="item">The field to be removed.</param>
    </member>
    <member name="T:C1.Win.FlexReport.CalculatedField">
      <summary>
            Represents a calculated data field associated with a <see cref="T:C1.Win.FlexReport.C1FlexReport" />'s data source.
            Usually values of such fields are calculated based on values of other fields in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.CalculatedField.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.CalculatedField" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.CalculatedField.#ctor(System.String,System.Type,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.CalculatedField" /> class.
            </summary>
      <param name="name">The name of the calculated field, should be unique.</param>
      <param name="type">The type of value of the calculated field.</param>
      <param name="expression">The VBScript expression used to calculate value of field.</param>
    </member>
    <member name="M:C1.Win.FlexReport.CalculatedField.AssignFrom(System.Object)">
      <summary>
            Copies properties from another <see cref="T:C1.Win.FlexReport.CalculatedField" /> object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedField.ParentReport">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object containing this object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedField.Owner">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.CalculatedFieldCollection" /> collection containing this object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedField.DataSource">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.CalculatedField.DataSource" /> object containing this object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedField.Type">
      <summary>
            Gets or sets the data type of the current field.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedField.Expression">
      <summary>
            Gets or sets the expression used to calcualte the field's value.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.CalculatedFieldCollection">
      <summary>
            Represents a collection of <see cref="T:C1.Win.FlexReport.CalculatedField" /> objects.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportNamedCollection`1">
      <summary>
            Represents a <see cref="T:C1.Win.C1Document.NamedCollection`1" /> that notifies <see cref="T:C1.Win.FlexReport.C1FlexReport" /> about changes.
            </summary>
      <typeparam name="TItem">The type of the collection items.</typeparam>
    </member>
    <member name="P:C1.Win.FlexReport.ReportNamedCollection`1.Report">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object owning this collection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedFieldCollection.Owner">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.DataSource" /> object owning this collection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CalculatedFieldCollection.Report">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object owning this collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataAccessException">
      <summary>
        <see cref="T:System.Exception" /> that is thrown when a data access error occurs.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataAccessException.#ctor">
      <summary>
            Initializes a new instance of the DataAccessException class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataAccessException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the DataAccessException class with a specified error message.
            </summary>
      <param name="msg">A message that describes the error.</param>
    </member>
    <member name="M:C1.Win.FlexReport.DataAccessException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the DataAccessException class with a specified error message 
            and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="msg">The error message that explains the reason for the exception.</param>
      <param name="x">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:C1.Win.FlexReport.DataField">
      <summary>
            Represents field in the <see cref="T:C1.Win.FlexReport.DataSource" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataField.Name">
      <summary>
            Gets name of the <see cref="T:C1.Win.FlexReport.DataField" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataField.Calculated">
      <summary>
            Gets a value indicating whether <see cref="T:C1.Win.FlexReport.DataField" /> is a calculated field, defined in the <see cref="P:C1.Win.FlexReport.DataSource.CalculatedFields" /> collection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataField.Type">
      <summary>
            Gets a type of the field.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataField.Value">
      <summary>
            Get a value of the field.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataFieldCollection">
      <summary>
            Collection of the fields in the <see cref="T:C1.Win.FlexReport.DataSource" />.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataFieldCollection.IndexByName(System.String)">
      <summary>
            Returns index of the <see cref="T:C1.Win.FlexReport.DataField" /> by its name.
            </summary>
      <param name="name">The name of the <see cref="T:C1.Win.FlexReport.DataField" />.</param>
      <returns>Index of the <see cref="T:C1.Win.FlexReport.DataField" /> with specified name or -1 if not found.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.DataFieldCollection.Item(System.String)">
      <summary>
            Gets a <see cref="T:C1.Win.FlexReport.DataField" /> with specified name, throws an exception if not found.
            </summary>
      <param name="name">The name of <see cref="T:C1.Win.FlexReport.DataField" />.</param>
      <returns>Returns <see cref="T:C1.Win.FlexReport.DataField" /> object with specified name, throws an exception if not found.</returns>
    </member>
    <member name="T:C1.Win.FlexReport.DataHandler">
      <summary>
            Represents a data enumerator in a <see cref="T:C1.Win.FlexReport.C1FlexReport" />.
            Provides access to data used in reports.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.Dispose">
      <summary>
            Disposes this <see cref="T:C1.Win.FlexReport.DataHandler" /> object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.BOF">
      <summary>
            Returns true if the cursor is pointing at the first record in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.EOF">
      <summary>
            Returns true if the cursor is pointing past the last record in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.MoveFirst">
      <summary>
            Moves the cursor to the first record in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.MoveLast">
      <summary>
            Moves the cursor to the last record in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.MovePrevious">
      <summary>
            Moves the cursor to the previous record in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.MoveNext">
      <summary>
            Moves the cursor to the next record in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.GetBookmark">
      <summary>
            Returns the current cursor position.
            </summary>
      <returns>Index of current record.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.DataHandler.SetBookmark(System.Int32)">
      <summary>
            Sets the current cursor position to supplied value.
            </summary>
      <param name="bookmark">Index of record.</param>
    </member>
    <member name="P:C1.Win.FlexReport.DataHandler.Empty">
      <summary>
            Indicates whether data set managed by this <see cref="T:C1.Win.FlexReport.DataHandler" /> has no records.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataHandler.Count">
      <summary>
            Gets the count of records in the data handler.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataHandler.Fields">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.DataFieldCollection" /> containing the list of data source fields.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataLinkParams">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataLinkBase">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataLinkBase.DefaultReplaceParameters(C1.Win.FlexReport.DataLinkParams,System.String)">
      <summary>
            Default method which can be used to replace
            names of parameters in the string with their values.
            </summary>
      <param name="dlp">
      </param>
      <param name="s">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.FlexReport.ExternalObjectLink">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DbLink">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.OledbLink">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.SqlServerCe3_5Link">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.SqlServerCe4_0Link">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.SQLiteLink">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.OdbcLink">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.XmlLink">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataScope">
      <summary>
            Represents a data scope in a <see cref="T:C1.Win.FlexReport.C1FlexReport" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataScope.Source">
      <summary>
            Gets the object identifying the current data scope.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataScope.Name">
      <summary>
            Gets the name of the current data scope.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataScope.Parent">
      <summary>
            Gets or sets the parent <see cref="T:C1.Win.FlexReport.DataScope" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataScope.DataHandler">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.DataScope.DataHandler" /> object which can be used to access the current data scope's data.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataProvider">
      <summary>
            Specifies the type of the data source.
            Different data sources use different connection string and query command syntaxes.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.Auto">
      <summary>
            The data source type is automatically determined base on connection string.
            Using this value is not recommended as connecting to the data source may be very slow.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.OLEDB">
      <summary>
            Specifies an OLE DB data source.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.ODBC">
      <summary>
            Specifies an ODBC data source.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.SqlServerCe3_5">
      <summary>
            Specifies an SQL server compact edition version 3.5 data source.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.SqlServerCe4_0">
      <summary>
            Specifies an SQL server compact edition version 4.0 data source.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.XmlFile">
      <summary>
            Specifies that connection string is the name of an XML file containing a DataSet object.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.ExternalObject">
      <summary>
            Specifies that connection string is the name of an assembly that contains objects
            which implement the  <see cref="T:C1.Win.FlexReport.IC1FlexReportExternalRecordset" /> interface.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataProvider.SQLite">
      <summary>
            Specifies an SQLite data source.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.RecordSourceType">
      <summary>
            Specifies the type of the record source, such as a table, a stored procedure, or an SQL query.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.RecordSourceType.Auto">
      <summary>
            The data source type is automatically determined based on the syntax used by the <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" />.
            Using this value should be avoided if the record source is a table, a stored procedure, or an SQL query,
            as connecting to the data source may be slow.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.RecordSourceType.TableDirect">
      <summary>
            The record source is the name of a table or a view in the data source specified by the connection string.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.RecordSourceType.StoredProcedure">
      <summary>
            The record source is the name of a stored procedure in the data source specified by the connection string.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.RecordSourceType.Text">
      <summary>
            The record source is an SQL query.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ParameterPassingMode">
      <summary>
            Specifies the mode of passing parameters to the data source.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ParameterPassingMode.Default">
      <summary>
            Parameters are passed in the standard way determined by the data source.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ParameterPassingMode.Literal">
      <summary>
            Parameters are passed to the data source literally as they are specified.
            If a value needs to be quoted, the quotes should be part of the parameter value.
            This mode is designed to deal with non-standard data sources.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.FilterExpressionSyntax">
      <summary>
            Specifies the syntax of the <see cref="P:C1.Win.FlexReport.DataSource.Filter" /> expression.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FilterExpressionSyntax.DataView">
      <summary>
            The filter syntax is the same which is used to specify RowFilter for System.Data.DataView objects.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FilterExpressionSyntax.VBScript">
      <summary>
            The filter syntax is the regular VBScript syntax used by other FlexReport scripts and expressions.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataSource">
      <summary>
            Represnts a data source in a <see cref="T:C1.Win.FlexReport.C1FlexReport" />.
            </summary>
      <remarks>
        <para>Most reports specify their data sources by setting the <see cref="P:C1.Win.FlexReport.DataSource.ConnectionString" /> and 
            <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" /> properties. The <b>DataSource</b> object uses these values to connect
            to a database and retrieve the report data.</para>
        <para>Alternatively, you can assign data objects directly to the <see cref="P:C1.Win.FlexReport.DataSource.Recordset" /> property.
            This approach is more efficient in scenarios where the data has already been loaded by the 
            application for other purposes, and can be used in the report directly instead of loading a copy.</para>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.StrongNamedReportObject">
      <summary>
            Represents a strong named object, this is base class for <see cref="T:C1.Win.FlexReport.DataSource" />, <see cref="T:C1.Win.FlexReport.ReportParameter" />.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportObject">
      <summary>
            Represents a named object, this is base class for <see cref="T:C1.Win.FlexReport.FieldBase" />, <see cref="T:C1.Win.FlexReport.Section" />,
            <see cref="T:C1.Win.FlexReport.SubSection" /> and another report's objects.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObject.CreateSame">
      <summary>
            Creates instance of the same type as current object.
            </summary>
      <returns>The created object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportObject.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
            Copies properties from another object into this object.
            </summary>
      <param name="source">The source object, properties of which are copied.</param>
      <param name="assignName">Indicates whether the name of the object should be copied.</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObject.Name">
      <summary>
            Gets or sets the name of the object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObject.Tag">
      <summary>
            Gets or sets arbitrary data associated with the object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportObject.ParentReport">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object containing this object.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.DataSource.c_DefIsolationLevel">
      <summary>
            Defines default IsolationLevel for transaction used to get report data.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataSource.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.DataSource" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.DataSource.AssignFrom(C1.Win.FlexReport.DataSource)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.FlexReport.DataSource" /> to the current object.
            The name of source object is not copied.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="M:C1.Win.FlexReport.DataSource.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.FlexReport.DataSource" /> to the current object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
      <param name="assignName">Indicates whether name should be assigned.</param>
    </member>
    <member name="M:C1.Win.FlexReport.DataSource.ToString">
      <summary>
            Returns the <see cref="!:Name" /> of the current data source.
            </summary>
      <returns>The current data source's name.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.ParentReport">
      <summary>
            Gets the report that contains this <see cref="T:C1.Win.FlexReport.DataSource" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.ParameterPassingMode">
      <summary>
            Gets or sets a value indicating how parameter values are passed to the data engine.
            </summary>
      <seealso cref="P:C1.Win.FlexReport.DataSource.EncloseParameterValues" />
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.EncloseParameterValues">
      <summary>
            Gets or sets a value indicating whether values of parameters in resulting SQL query 
            should be enclosed with delimiters, "#" for dates, "'" for strings, "()" for multivalue parameters.
            If this parameter is false when all parameters in <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" /> already should be enclosed.
            For example, EncloseParameterValues == true:
            RecordSource = "select * from customers where name = CustomerName";
            actual SQL query will be:
            select * from customers where name = 'Some customer'
            
            EncloseParameterValues == false:
            RecordSource = "select * from customers where name = 'CustomerName'";
            actual SQL query will be:
            select * from customers where name = 'Some customer'
            </summary>
      <seealso cref="P:C1.Win.FlexReport.DataSource.ParameterPassingMode" />
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.DataProvider">
      <summary>
            Gets or sets the type of the data source.
            The data source type determines the syntaxes of connection string and query (record source).
            The default is Auto but it is recommended that you set this value to the specific type of the data source you are using,
            as automatic determining of the data source type may be rather slow.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.ConnectionString">
      <summary>
            Gets or sets the connection string used to open a database.
            </summary>
      <remarks>
        <para>This property is used by the <see cref="T:C1.Win.FlexReport.DataSource" /> class to load the report data.</para>
        <para>While ConnectionString specifies the database that contains the data,
            <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" /> specifies which table, stored procedure, or Sql command to use for 
            retrieving the data.</para>
        <para>
            The syntax of ConnectionString is determined by the type of the data provider used by
            <see cref="T:C1.Win.FlexReport.DataSource" />.
            For example if DataProvider is <see cref="!:DataProvider.OLEDB" /> then
            ConnectionString should use syntax used in <b>OleDbConnection</b>,
            if DataProvider is <see cref="!:DataProvider.XmlFile" />, it should contain the name of the XML file,
            and so on.
            </para>
        <para>If you want to use a different type of connection (e.g. a <see cref="T:System.Data.SqlClient.SqlConnection" />,
            or if your application already has the data available in a <see cref="T:System.Data.DataTable" /> object, you can assign the data 
            directly to the <see cref="P:C1.Win.FlexReport.DataSource.Recordset" /> property.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.RecordSource">
      <summary>
            Gets or sets a string that specifies which table, stored procedure, or Sql command
            to use for retrieving the report data.
            </summary>
      <remarks>
        <para>The <see cref="P:C1.Win.FlexReport.DataSource.ConnectionString" /> specifies the database that contains the report data. 
            The <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" /> property specifies which table, stored procedure, or Sql command to use for 
            retrieving the data.</para>
        <para>If you want to use a different type of connection (e.g. a <see cref="T:System.Data.SqlClient.SqlConnection" />,
            or if your application already has the data available in a <see cref="T:System.Data.DataTable" /> object, you can assign the 
            data directly to the <see cref="P:C1.Win.FlexReport.DataSource.Recordset" /> property.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.RecordSourceType">
      <summary>
            Gets or sets the type of the <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" /> (stored procedure, table, sql query etc.).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.FilterSyntax">
      <summary>
            Gets or sets the type of syntax used in the <see cref="P:C1.Win.FlexReport.DataSource.Filter" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.Filter">
      <summary>
            Gets or sets the expression used to filter which data rows are included in the report.
            </summary>
      <remarks>
        <para>Use the <b>Filter</b> property to restrict the records that you want to include in a 
            data source without modifying the <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" /> property.</para>
        <para>Using a filter is similar to specifying a WHERE clause in the SQL statement assigned to
            the <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" /> property. Both techniques will filter the data according to the
            condition specified. The difference is that the <b>Filter</b> property is applied to a table
            that has already been loaded in memory, while the WHERE statement causes only the filtered
            records to be loaded from the database into memory.</para>
        <para>When creating reports that include only small subsets large tables, the WHERE statement
            is a better option, because it doesn't require the entire table to be loaded into memory.
            On the other hand, if the table has already been loaded in memory, the <b>Filter</b> property
            is a better option, since it does not require any additional data to be loaded.</para>
        <para>The syntax for the filter expression is determined by the <see cref="P:C1.Win.FlexReport.DataSource.FilterSyntax" /> property.</para>
      </remarks>
      <example>
            The code below shows how to apply a filter to a data source using the <c>Filter</c> property and
            using a WHERE clause in a SQL statement:
            <code>
            if (useFilterProperty)
            {
            	// load all records, filter in memory
                _c1r.DataSource.RecordSource = "SELECT * from Employees";
                _c1r.DataSource.Filter = "HireDate &gt;= '1/1/1993' AND Country = 'UK'";
            }
            else
            {
            	// load selected records only
                _c1r.DataSource.RecordSource = "SELECT * from Employees " +
                    "WHERE HireDate &gt;= #1/1/1993# AND Country = 'UK'";
            </code></example>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.MaxRecords">
      <summary>
            Gets or sets the maximum number of data rows to be included in the report (zero includes all rows).
            </summary>
      <remarks>
        <para>This property is useful if you want to limit the size of a report. For example, you may write a report 
            designer with a preview window that shows only the first 500 records from the database.</para>
        <para>Setting this property to zero causes the control to retrieve all records.</para>
        <para>You can also limit the size of reports by setting the <see cref="P:C1.Win.FlexReport.C1FlexReport.MaxPages" /> property.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.CommandTimeOut">
      <summary>
            Gets or sets the number of seconds to wait before the data connection times out 
            (set to -1 to use the default value, usually 30s).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.Recordset">
      <summary>
            Sets or gets the data source object that provides data to the report.
            </summary>
      <remarks>
        <para>Usually, the control creates a data object based on the value of the 
            <see cref="P:C1.Win.FlexReport.DataSource.ConnectionString" /> and <see cref="P:C1.Win.FlexReport.DataSource.RecordSource" /> properties, and uses that object 
            as the report data source.</para>
        <para>Alternatively, you may want to create the data source object yourself, and assign it to 
            the control. You can do that by assigning your data source object to the <b>Recordset</b>
            property.</para>
        <value>
            You can assign objects of the following types to the <see cref="P:C1.Win.FlexReport.DataSource.Recordset" /> property:
            (1) <see cref="T:System.Data.DataTable" /> objects, (2) <see cref="T:System.Data.DataView" /> objects, or (3) any 
            object that implements the <see cref="T:C1.Win.FlexReport.IC1FlexReportRecordset" /> or <see cref="T:System.Collections.IList" /> interface.
            </value>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.IsolationLevel">
      <summary>
            Gets or sets the isolation level for <b>DbTransaction</b>
            used to retrieve the report data.
            <para>The default is <b>IsolationLevel.ReadCommitted</b>.</para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.SortDefinitions">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.SortDefinitionCollection" /> collection defining sort of the data source.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.DataSource.CalculatedFields">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.CalculatedFieldCollection" /> collection defining list of calculated fields for the data source.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataSourceCollection">
      <summary>
            Represents a collection of <see cref="T:C1.Win.FlexReport.DataSource" /> objects.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportObjectNamedList`1">
      <summary>
            Represents the list of strong named report objects.
            </summary>
      <typeparam name="TItem">The type of elements in the collection.</typeparam>
    </member>
    <!-- Badly formed XML comment ignored for member "T:C1.Win.FlexReport.ReportObjectList`1" -->
    <member name="M:C1.Win.FlexReport.DataSourceCollection.Add(C1.Win.FlexReport.DataSource)">
      <summary>
            Adds the <see cref="T:C1.Win.FlexReport.DataSource" /> to the collection.
            </summary>
      <param name="dataSource">The <see cref="T:C1.Win.FlexReport.DataSource" /> object to add.</param>
    </member>
    <member name="M:C1.Win.FlexReport.DataSourceCollection.RemoveAt(System.Int32)">
      <summary>
            Removes an item from the collection.
            </summary>
      <param name="index">Specifies the item to be removed.</param>
    </member>
    <member name="P:C1.Win.FlexReport.DataSourceCollection.Report">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object owning this collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.DataSourceInfo">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.FieldInfo">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.IC1FlexReportExternalRecordset">
      <summary>
            Represents an external record set residing in a separate assembly.
            <para>
            If an assembly contains a type supporting this interface,
            that assembly and type can be selected in the report designer
            as the data source for a report. A reference to that type
            and the record set initialization parameters (see <see cref="P:C1.Win.FlexReport.IC1FlexReportExternalRecordset.Params" />)
            are then saved in the XML report definition file.
            When the report is loaded, the recordset object is created
            based on the saved info, and used as the data source for the report.
            </para></summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportExternalRecordset.EditParams">
      <summary>
            This method is used to set up parameters of the current recordset.
            For instance, the implementation of this method can show a dialog
            allowing the user to edit the parameters.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportExternalRecordset.GetRecordset">
      <summary>
            Returns the <see cref="T:C1.Win.FlexReport.IC1FlexReportRecordset" /> interface used to access data.
            </summary>
      <returns>The <see cref="T:C1.Win.FlexReport.IC1FlexReportRecordset" /> interface used to access data.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.IC1FlexReportExternalRecordset.Caption">
      <summary>
            Gets the user-friendly name of the current recordset.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.IC1FlexReportExternalRecordset.Params">
      <summary>
            Gets or sets parameters of the current recordset.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.IC1FlexReportRecordset">
      <summary>
            Interface used to allow <see cref="T:C1.Win.FlexReport.C1FlexReport" /> to access data stored in a data object
            of a type for which C1FlexReport does not have built-in support.
            <para>
            C1FlexReport has built-in support for the following data object types:
            <see cref="!:DataTable" />, <see cref="!:DataView" /> and <see cref="!:IList" />.
            </para></summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.GetFieldNames">
      <summary>
            Gets an array of strings with the names of all fields in the data source.
            </summary>
      <returns>An array of strings with the names of all fields in the data source.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.GetFieldTypes">
      <summary>
            Gets an array of types of all fields in the data source.
            </summary>
      <returns>An array of types of all fields in the data source.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.GetFieldValue(System.Int32)">
      <summary>
            Gets the value of the specified field at the current cursor position.
            <para>
            If the cursor is past the end of the data (EOF condition), this method should return null
            rather than throw an exception.
            </para></summary>
      <param name="fieldIndex">The index of the field.</param>
      <returns>The value of the field.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.BOF">
      <summary>
            Returns true if the cursor is pointing at the first record in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.EOF">
      <summary>
            Returns true if the cursor is pointing past the last record in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.MoveFirst">
      <summary>
            Moves the cursor to the first record in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.MoveLast">
      <summary>
            Moves the cursor to the last record in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.MovePrevious">
      <summary>
            Moves the cursor to the previous record in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.MoveNext">
      <summary>
            Moves the cursor to the next record in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.GetBookmark">
      <summary>
            Returns the current cursor position.
            </summary>
      <returns>The index of the current record.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.IC1FlexReportRecordset.SetBookmark(System.Int32)">
      <summary>
            Sets the current cursor position to a supplied value.
            </summary>
      <param name="bkmk">The index of the record to set.</param>
    </member>
    <member name="P:C1.Win.FlexReport.IC1FlexReportRecordset.Count">
      <summary>
            Gets the count of records in the recordset.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.SortDirection">
      <summary>
            Defines the types of sorting.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SortDirection.Ascending">
      <summary>
            Sorts in ascending order.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SortDirection.Descending">
      <summary>
            Sorts in descending order.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.SortDefinition">
      <summary>
            Defines the sorting parameters.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SortDefinition.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.SortDefinition" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SortDefinition.#ctor(System.String,C1.Win.FlexReport.SortDirection)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.SortDefinition" /> class,
            specifying the sort expression and direction.
            </summary>
      <param name="expression">The string with sort expression.</param>
      <param name="direction">The sort direction.</param>
    </member>
    <member name="M:C1.Win.FlexReport.SortDefinition.AssignFrom(C1.Win.FlexReport.SortDefinition)">
      <summary>
            Copies <see cref="P:C1.Win.FlexReport.SortDefinition.Expression" /> and <see cref="P:C1.Win.FlexReport.SortDefinition.Direction" /> properties from another <see cref="T:C1.Win.FlexReport.SortDefinition" /> object.
            (Note that the <see cref="!:IOwnedCollectionItem.Owner" /> property is not copied.)
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="P:C1.Win.FlexReport.SortDefinition.ParentReport">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> containing this object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SortDefinition.Owner">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.SortDefinitionCollection" /> collection containing this object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SortDefinition.Expression">
      <summary>
            Gets the string defining the sort expression.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SortDefinition.Direction">
      <summary>
            Gets or sets the sort direction.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.SortDefinitionCollection">
      <summary>
            Represents a collection of <see cref="T:C1.Win.FlexReport.SortDefinition" /> objects.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportOwnedCollection`1">
      <summary>
            Represents a <see cref="T:C1.Win.C1Document.OwnedCollection`1" /> that notifies <see cref="T:C1.Win.FlexReport.C1FlexReport" /> about changes.
            </summary>
      <typeparam name="TItem">The type of the collection items.</typeparam>
    </member>
    <member name="P:C1.Win.FlexReport.ReportOwnedCollection`1.Report">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object owning this collection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SortDefinitionCollection.Owner">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.DataSource" /> object owning this collection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SortDefinitionCollection.Report">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object owning this collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.BarCodeField">
      <summary>
            Represents barcode in the <see cref="T:C1.Win.FlexReport.C1FlexReport" />.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.FieldBase">
      <summary>
            Abstract base class for all C1FlexReport field types.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.VisualReportObject">
      <summary>
            Base class for all visual report objects like <see cref="T:C1.Win.FlexReport.FieldBase" />, <see cref="T:C1.Win.FlexReport.Section" />, <see cref="T:C1.Win.FlexReport.SubSection" />.
            Defines common visual properties: Border, Background etc.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.VisualReportObject.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.VisualReportObject" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.Border">
      <summary>
            Gets or sets the <see cref="P:C1.Win.FlexReport.VisualReportObject.Border" /> object determining how borders are drawn around the object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.BordersSplitVertMode">
      <summary>
            Gets or sets a value determining how borders are drawn
            if the object is too high and is split between pages.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.BordersSplitHorzMode">
      <summary>
            Gets or sets a value determining how borders are drawn
            if the object is too wide and is split between horizontal pages.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.Background">
      <summary>
            Gets or sets the <see cref="!:C1BackgroundBase" /> object determining the object's background.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.BackColor">
      <summary>
            Gets or sets the field's background color,
            this property works via <see cref="P:C1.Win.FlexReport.VisualReportObject.Background" /> property using <see cref="!:C1SolidBrush" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.OutlineLabel">
      <summary>
            Gets or sets a <see cref="T:C1.Win.FlexReport.ScriptStringValue" /> yielding the label associated with the object in the outline tree.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.OutlineParent">
      <summary>
            Gets or sets the name of the object that will be the parent of the current object in the outline tree.
            If unspecified, the report hierarchy will be used to determine the parent.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.VisualReportObject.Bookmark">
      <summary>
            Gets or sets a <see cref="T:C1.Win.FlexReport.ScriptStringValue" /> yielding the bookmark associated with the current object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FieldBase.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.FieldBase" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FieldBase.OnSerializeAdded">
      <summary>
            Post action after the field is added to the parent report's fields colleciton.
            </summary>
      <remarks>
            The ParentReport is not null on calling this method.
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.FieldBase.AssignFrom(C1.Win.FlexReport.FieldBase)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.FlexReport.FieldBase" /> to the current object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="M:C1.Win.FlexReport.FieldBase.Clone">
      <summary>
            Creates a new object that is a copy of the current <see cref="T:C1.Win.FlexReport.FieldBase" /> object.
            </summary>
      <returns>Copy of the current <see cref="T:C1.Win.FlexReport.FieldBase" /> object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.FieldBase.SetZOrder(System.Boolean)">
      <summary>
            Brings a field to the front or sends it to the back of the <b>ZOrder</b>.
            </summary>
      <param name="front">Determines whether the field is brought to the front or sent to the back
            of the <b>ZOrder</b>.</param>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Bounds">
      <summary>
            Gets or sets bounds of this <see cref="T:C1.Win.FlexReport.FieldBase" /> object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.ParentReport">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> containing this field.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Name">
      <summary>
            Gets or sets the field name.
            </summary>
      <remarks>
        <para>The field name can be used as an index into the control's <see cref="P:C1.Win.FlexReport.C1FlexReport.Fields" /> collection.</para>
        <para>Field names are also used to identify fields in <b>VBScript</b> expressions, as shown in the example
            below.</para>
        <para>Duplicate and empty field names are allowed, but should be avoided if you plan to use the field names 
            in scripts or as indexers.</para>
      </remarks>
      <example>
            The code below assigns a script to the report's <see cref="F:C1.Win.FlexReport.SectionTypeEnum.Detail" /> section. The script 
            changes a field's <see cref="!:ForeColor" /> property depending on a value.
            <code>
            _c1r.Sections.Fields["sampleField"].ForeColor = Color.Black;
            _c1r.Sections.Detail.OnFormat = 
                "sampleField.ForeColor = iif(someValue &lt; 5, vbRed, vbBlack)";
            </code></example>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Section">
      <summary>
            Gets or sets the section to which the field belongs.
            </summary>
      <remarks>
            To move a field from one section to another, set its <see cref="P:C1.Win.FlexReport.FieldBase.Section" /> property to a new value.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.SubSectionIndex">
      <summary>
            Gets or sets the index of the <see cref="P:C1.Win.FlexReport.FieldBase.SubSection" /> in <see cref="P:C1.Win.FlexReport.FieldBase.Section" /> to which the field belongs.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.SubSection">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.FieldBase.SubSection" /> object containing this field.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Visible">
      <summary>
            Gets or sets a value indicating whether the field is visible or hidden.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Hyperlink">
      <summary>
            Gets the hyperlink associated with the current field.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Left">
      <summary>
            Gets or sets the X coordinate of the field's left edge in twips.
            </summary>
      <remarks>
        <para>A field's location is the distance from its upper left corner to the upper left corner
            of its containing <see cref="P:C1.Win.FlexReport.FieldBase.SubSection" />.</para>
        <para>Setting the <see cref="P:C1.Win.FlexReport.FieldBase.Left" /> or <see cref="P:C1.Win.FlexReport.FieldBase.Top" /> property to zero places the field at 
            the very left or top of its containing section.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Top">
      <summary>
            Gets or sets the Y coordinate of the field's top edge in twips.
            </summary>
      <remarks>
        <para>A field's location is the distance from its upper left corner to the upper left corner of its containing 
            <see cref="P:C1.Win.FlexReport.FieldBase.SubSection" />.</para>
        <para>If the field's <see cref="P:C1.Win.FlexReport.FieldBase.AutoHeight" /> properties are set to true, the control will 
            automatically adjust the <see cref="P:C1.Win.FlexReport.FieldBase.RenderHeight" /> property to fit the field's contents and the <see cref="P:C1.Win.FlexReport.FieldBase.RenderTop" /> 
            property of fields below the current field to preserve the vertical distance between fields. The value of the 
            <see cref="P:C1.Win.FlexReport.FieldBase.Top" /> and <see cref="P:C1.Win.FlexReport.FieldBase.Height" /> properties is not affected.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Width">
      <summary>
            Gets or sets the width of the field in twips.
            </summary>
      <remarks>
        <para>Every <see cref="T:C1.Win.FlexReport.FieldBase" /> object has a rectangle, or "field box", where the field contents are rendered.</para>
        <para>The field box is defined by the <see cref="P:C1.Win.FlexReport.FieldBase.Left" />, <see cref="P:C1.Win.FlexReport.FieldBase.Top" />, <see cref="P:C1.Win.FlexReport.FieldBase.Width" />, and <see cref="P:C1.Win.FlexReport.FieldBase.Height" /> properties.</para>
        <para>These properties are expressed in twips, and the position is relative to the field's containing section.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Height">
      <summary>
            Gets or sets the height of the field in twips.
            </summary>
      <remarks>
        <para>Every <see cref="T:C1.Win.FlexReport.FieldBase" /> object has a rectangle, or "field box", where the field contents are rendered.</para>
        <para>The field box is defined by the <see cref="P:C1.Win.FlexReport.FieldBase.Left" />, <see cref="P:C1.Win.FlexReport.FieldBase.Top" />, <see cref="P:C1.Win.FlexReport.FieldBase.Width" />, and <see cref="P:C1.Win.FlexReport.FieldBase.Height" /> properties.</para>
        <para>These properties are expressed in twips, and the position is relative to the field's containing section.</para>
        <para>The field's <see cref="P:C1.Win.FlexReport.FieldBase.Height" /> property should be set to a value larger than or equal to the height of the 
            field's <see cref="T:System.Drawing.Font" />, or no text will appear in the field.</para>
        <para>If the field's <see cref="P:C1.Win.FlexReport.FieldBase.AutoHeight" /> property are set to true, the control will 
            automatically adjust the <see cref="P:C1.Win.FlexReport.FieldBase.RenderHeight" /> property to fit the field's contents and the <see cref="P:C1.Win.FlexReport.FieldBase.RenderTop" /> 
            property of fields below the current field to preserve the vertical distance between fields. The value of the 
            <see cref="P:C1.Win.FlexReport.FieldBase.Top" /> and <see cref="P:C1.Win.FlexReport.FieldBase.Height" /> properties is not affected.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Right">
      <summary>
            Gets the x-coordinate of the field's right edge in twips.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Bottom">
      <summary>
            Gets the y-coordinate of the field's bottom edge in twips.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.MarginLeft">
      <summary>
            Gets or sets the spacing between the left edge of the field and its content, in twips.
            </summary>
      <remarks>
            This property is useful for rendering fields with borders or solid backgrounds, to add some space 
            between the borders and the field content.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.MarginTop">
      <summary>
            Gets or sets the spacing between the top edge of the field and its content, in twips.
            </summary>
      <remarks>
            This property is useful for rendering fields with borders or solid backgrounds, to add some space 
            between the borders and the field content.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.MarginRight">
      <summary>
            Gets or sets the spacing between the right edge of the field and its content, in twips.
            </summary>
      <remarks>
            This property is useful for rendering fields with borders or solid backgrounds, to add some space 
            between the borders and the field content.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.MarginBottom">
      <summary>
            Gets or sets the spacing between the bottom edge of the field and its content, in twips.
            </summary>
      <remarks>
            This property is useful for rendering fields with borders or solid backgrounds, to add some space 
            between the borders and the field content.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.ForcePageBreak">
      <summary>
            Gets or sets a value determining whether to insert page breaks before or after the field.
            </summary>
      <seealso cref="T:C1.Win.FlexReport.ForcePageBreakEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.AutoHeight">
      <summary>
            Gets or sets a value determining how height of object changes depending on its content.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.AutoWidth">
      <summary>
            Gets or sets a value determining how width of object changes depending on its content.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.SplitVertBehavior">
      <summary>
            Gets or sets a value determining how the object is treated
            when it is too high to fit in the vertical space available on the current page.
            </summary>
      <seealso cref="P:C1.Win.FlexReport.FieldBase.SplitHorzBehavior" />
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.SplitHorzBehavior">
      <summary>
            Gets or sets a value determining how the object is treated
            when it is too wide to fit in the horizontal space available on the current page.
            </summary>
      <seealso cref="P:C1.Win.FlexReport.FieldBase.SplitVertBehavior" />
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.KeepTogether">
      <summary>
            Specifies whether the field should be kept together on a page.
            </summary>
      <remarks>
        <para>If this property is set to true, the control will insert page breaks in order to keep 
            the field contents together on a page.</para>
        <para>If it is set to false, and the containing <see cref="P:C1.Win.FlexReport.FieldBase.Section" /> also has its 
            <see cref="!:Section.KeepTogether" /> property set to false, then the field may be rendered across
            two or more pages.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.Anchor">
      <summary>
            Gets or sets a value determining how the field's vertical position changes relative to its containing <see cref="P:C1.Win.FlexReport.FieldBase.SubSection" />.
            </summary>
      <remarks>
        <para>Normally, fields do not move when sections grow or shrink. In some cases, however, you may want
            fields to grow with the section or to stay in the same position relative to the bottom of the
            section.</para>
        <para>This is especially common for fields used to create vertical lines that should extend
            the entire height of the section.</para>
      </remarks>
      <seealso cref="T:C1.Win.FlexReport.AnchorEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.ZOrder">
      <summary>
            Gets or sets the <b>ZOrder</b> of the field.
            </summary>
      <remarks>
        <para>The <b>ZOrder</b> of a field determines whether it is rendered in front of or behind 
            other fields that overlap with it.</para>
        <para>High <b>ZOrder</b> values bring the field to the front, low values send it to the back.</para>
        <para>Because <b>ZOrder</b> values are relative, it is usually easier to call the <see cref="M:C1.Win.FlexReport.FieldBase.SetZOrder(System.Boolean)" /> 
            method, which ensures the field is rendered in front of or behind all other overlapping fields.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.RightToLeft">
      <summary>
            Gets or sets a value indicating whether right-to-left text rendering rules should be used.
            If null (which is the default), the property <see cref="P:C1.Win.FlexReport.C1FlexReport.RightToLeft" /> defined on the report is used.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.ActualRightToLeft">
      <summary>
            Gets the actual right-to-left value that is being used. 
            If the field's own <see cref="P:C1.Win.FlexReport.FieldBase.RightToLeft" /> is not null, that value is returned.
            Otherwise the <see cref="P:C1.Win.FlexReport.FieldBase.ActualRightToLeft" /> defined on the report is returned.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.RenderLeft">
      <summary>
            Gets the actual left position of the current field in its subsection.
            This property can only be used while the report is being rendered, otherwise it returns -1.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.RenderTop">
      <summary>
            Gets the actual top position of the current field in its subsection.
            This property can only be used while the report is being rendered, otherwise it returns -1.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.RenderWidth">
      <summary>
            Gets the actual width of the current field.
            This property can only be used while the report is being rendered, otherwise it returns -1.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FieldBase.RenderHeight">
      <summary>
            Gets the actual height of the current field.
            This property can only be used while the report is being rendered, otherwise it returns -1.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.BarCodeField.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.BarCodeField" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BarCodeField.BarCode">
      <summary>
            Gets or sets the type of barcode.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BarCodeField.BarcodeOptions">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.BarCodeField.BarcodeOptions" /> object defining additional options of barcode.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BarCodeField.Text">
      <summary>
            Gets or sets a <see cref="T:C1.Win.FlexReport.ScriptStringValue" /> yielding the text encoded by the barcode.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BarCodeField.Align">
      <summary>
            Gets or sets a value determining how the barcode image is aligned within the field area.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BarCodeField.Font">
      <summary>
            Gets or sets the field's font.
            </summary>
      <seealso cref="T:C1.Win.FlexReport.FontHolder" />
    </member>
    <member name="P:C1.Win.FlexReport.BarCodeField.ForeColor">
      <summary>
            Gets or sets the field's foreground color.
            </summary>
      <remarks>
            Use the <b>ForeColor</b> property to specify the color for text in a field. You can use this property to make 
            fields easy to read or to convey a special meaning.
            </remarks>
      <example>
            The code below uses script to change the color of the text in the <i>UnitsInStock</i> field when its value 
            falls below the reorder level.
            <code>
            // build script
            string script = "UnitsInStock.ForeColor = " +
            	"IIF(UnitsInStock &lt; ReorderLevel, vbRed, vbBlack)";
            	
            // assign script to detail section
            _c1r.Sections.Detail.OnPrint = script;
            </code></example>
    </member>
    <member name="T:C1.Win.FlexReport.CheckBoxField">
      <summary>
            Represents a checkbox field in a report.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.TextFieldBase">
      <summary>
            Abstract base class for <see cref="T:C1.Win.FlexReport.ParagraphField" />, <see cref="T:C1.Win.FlexReport.TextField" /> and <see cref="T:C1.Win.FlexReport.CheckBoxField" />.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.TextFieldBase.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.TextFieldBase" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.WritingMode">
      <summary>
            Gets or sets the text writing mode: horizontal (default), vertical with left to right flow, etc.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.Align">
      <summary>
            Gets or sets a value determining how text is aligned within the field.
            </summary>
      <seealso cref="T:C1.Win.FlexReport.FieldAlignEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.ForeColor">
      <summary>
            Gets or sets the field's foreground color.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.TextAngle">
      <summary>
            Gets or sets the angle of text rotation within the field.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.WordWrap">
      <summary>
            Gets or sets a value indicating whether automatic word wrapping is on.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.Font">
      <summary>
            Gets or sets the text font.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.LineSpacing">
      <summary>
            Gets or sets the line spacing between text lines in the field, in percent.
            The default is 100 which corresponds to normal line spacing.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextFieldBase.TextFitMode">
      <summary>
            Specifies how text is adjusted to fit in the field's bounds.
            <list type="bullet"><item><term>None</term><description>Text is not adjusted.</description></item><item>AutoFontSize<term></term><description>The font size is adjusted (increased or decreased) so that text fits in the specified bounds.</description></item><item>AutoCharSpacing<term></term><description>The spacing between characters is adjusted (increased or decreased) so that text fits in the specified bounds.</description></item></list>
            Unless <see cref="P:C1.Win.FlexReport.TextFieldBase.TextFitMode" /> is <b>None</b>, the <see cref="P:C1.Win.FlexReport.TextFieldBase.WordWrap" /> property is ignored (hard breaks are still respected though).
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.CheckBoxField.#ctor">
      <summary>
            Initialize a new instance of the <see cref="T:C1.Win.FlexReport.CheckBoxField" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckBoxField.Value">
      <summary>
            Gets or sets a <see cref="T:C1.Win.FlexReport.ScriptObjectValue" /> yielding the checked value of the checkbox.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckBoxField.Text">
      <summary>
            Gets or sets a <see cref="T:C1.Win.FlexReport.ScriptStringValue" /> yielding the text shown in the field.
            Gets or sets the field's text.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckBoxField.ThreeState">
      <summary>
            Gets or sets a value indicating whether the checkbox will allow three check states rather than two.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckBoxField.CheckMark">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.CheckBoxField.CheckMark" /> object that determines the look of the check mark.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckBoxField.CheckAlign">
      <summary>
            Gets or sets the horizntal and vertical alignment of the check mark within the field area.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.CheckMarkStyle">
      <summary>
            Gets or sets the style of a check mark.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckMarkStyle.Standard">
      <summary>
            The check mark looks like the check mark in the standard CheckBox control.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckMarkStyle.CheckBox">
      <summary>
            The check mark looks like a check box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckMarkStyle.CrossBox">
      <summary>
            The check mark looks like a cross box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckMarkStyle.RadioButton">
      <summary>
            The check mark looks like a radio button.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckMarkStyle.CustomSymbol">
      <summary>
            The check mark is drawn using custom symbols specified by CheckedSymbol, UncheckedSymbol and IndeterminateSymbol properties.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckMarkStyle.CustomImage">
      <summary>
            The check mark is drawn using custom images specified by CheckedImage, UncheckedImage and IndeterminateImage properties.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.CheckMark">
      <summary>
            Defines the visual properties of the check mark of the CheckBoxField.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.CheckMark.OnPropertyChanged(System.String)">
      <summary>
            Fires <see cref="!:PropertyChanged" /> event.
            </summary>
      <param name="propertyName">the name of the property that changed.</param>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.Style">
      <summary>
            Gets or sets the style of the check mark.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.CheckedSymbol">
      <summary>
            Gets or sets the checked symbol (used if <see cref="P:C1.Win.FlexReport.CheckMark.Style" /> is <see cref="F:C1.Win.FlexReport.CheckMarkStyle.CustomSymbol" />).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.UncheckedSymbol">
      <summary>
            Gets or sets the unchecked symbol (used if <see cref="P:C1.Win.FlexReport.CheckMark.Style" /> is <see cref="F:C1.Win.FlexReport.CheckMarkStyle.CustomSymbol" />).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.IndeterminateSymbol">
      <summary>
            Gets or sets the indeterminate symbol (used if <see cref="P:C1.Win.FlexReport.CheckMark.Style" /> is <see cref="F:C1.Win.FlexReport.CheckMarkStyle.CustomSymbol" />).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.CheckedImage">
      <summary>
            Gets or sets the checked image (used if <see cref="P:C1.Win.FlexReport.CheckMark.Style" /> is <see cref="F:C1.Win.FlexReport.CheckMarkStyle.CustomImage" />).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.UncheckedImage">
      <summary>
            Gets or sets the unchecked image (used if <see cref="P:C1.Win.FlexReport.CheckMark.Style" /> is <see cref="F:C1.Win.FlexReport.CheckMarkStyle.CustomImage" />).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.IndeterminateImage">
      <summary>
            Gets or sets the indeterminate image (used if <see cref="P:C1.Win.FlexReport.CheckMark.Style" /> is <see cref="F:C1.Win.FlexReport.CheckMarkStyle.CustomImage" />).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.CheckMark.Font">
      <summary>
            Gets or sets the font used to draw the check mark symbol.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.FontHolder">
      <summary>
            Represents platform independent Font object.
            Under WinForms encapsulates a <see cref="P:C1.Win.FlexReport.FontHolder.Font" /> object and provides get/set access to the font properties. 
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FontHolder.OnPropertyChanged(System.String)">
      <summary>
            Fires <see cref="E:C1.Win.FlexReport.FontHolder.PropertyChanged" /> event.
            </summary>
      <param name="propertyName">the name of the property that changed.</param>
    </member>
    <member name="M:C1.Win.FlexReport.FontHolder.Clone">
      <summary>
            Creates a clone of this <see cref="T:C1.Win.FlexReport.FontHolder" /> object.
            </summary>
      <returns>The clone of this object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.FontHolder.ToString">
      <summary>
            Gets a string that represents this <see cref="T:C1.Win.FlexReport.FontHolder" />.
            </summary>
      <returns>A string that represents this <see cref="T:C1.Win.FlexReport.FontHolder" />.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.FontHolder.op_Implicit(C1.Win.FlexReport.FontHolder)~System.Drawing.Font">
      <summary>
            Converts a <see cref="T:C1.Win.FlexReport.FontHolder" /> object to a <see cref="P:C1.Win.FlexReport.FontHolder.Font" /> object.
            </summary>
      <param name="fontHolder">The <see cref="T:C1.Win.FlexReport.FontHolder" /> object.</param>
      <returns>
        <see cref="P:C1.Win.FlexReport.FontHolder.Font" /> object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.FontHolder.op_Implicit(System.Drawing.Font)~C1.Win.FlexReport.FontHolder">
      <summary>
            Converts a <see cref="P:C1.Win.FlexReport.FontHolder.Font" /> object to a <see cref="T:C1.Win.FlexReport.FontHolder" /> object.
            </summary>
      <param name="font">The <see cref="P:C1.Win.FlexReport.FontHolder.Font" /> object.</param>
      <returns>New <see cref="T:C1.Win.FlexReport.FontHolder" /> object whose <see cref="P:C1.Win.FlexReport.FontHolder.Font" /> property is equal to supplied font object.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Font">
      <summary>
            Gets or sets the encapsulated <see cref="P:C1.Win.FlexReport.FontHolder.Font" /> object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Name">
      <summary>
            Gets or sets the name of the font.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Size">
      <summary>
            Gets or sets the size of the font.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Bold">
      <summary>
            Gets or sets a value that indicates whether the font is bold.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Italic">
      <summary>
            Gets or sets a value that indicates whether the encapsulated <see cref="P:C1.Win.FlexReport.FontHolder.Font" /> is italic.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Underline">
      <summary>
            Gets or sets a value that indicates whether the font is underlined.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.Strikethrough">
      <summary>
            Gets or sets a value that indicates whether the font has a horizontal line through the text.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.FontHolder.GdiCharSet">
      <summary>
            Gets or sets the GDI character set used by the font.
            </summary>
    </member>
    <member name="E:C1.Win.FlexReport.FontHolder.PropertyChanged">
      <summary>
            Occurs when a property value changes.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.BorderStyleEnum">
      <summary>
            Specifies the Field’s border style.
            </summary>
      <remarks>Use the members of this enumeration to set the value 
            of the <see cref="P:C1.Win.FlexReport.Field.BorderStyle" /> property in the <see cref="T:C1.Win.FlexReport.Field" /> class.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.None">
      <summary>
            No border.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.Transparent">
      <summary>
            No border, same as None, added for backward compatibility.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.Solid">
      <summary>
            Solid border.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.Dash">
      <summary>
            Dashed border.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.Dot">
      <summary>
            Dotted border.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.DashDot">
      <summary>
            Dash-dot border.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.BorderStyleEnum.DashDotDot">
      <summary>
            Dash-dot-dot border.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.CheckBoxEnum">
      <summary>
            Specifies how boolean values are translated into check boxes.
            </summary>
      <remarks>Use the members of this enumeration to set the value 
            of the <see cref="P:C1.Win.FlexReport.Field.CheckBox" /> property in the <see cref="T:C1.Win.FlexReport.Field" /> class. 
            This property is useful when you wish to display boolean values graphically, 
            rather than using text.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.CheckBoxEnum.NoCheckBox">
      <summary>
            No checkbox (display as text).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckBoxEnum.CheckBox">
      <summary>
            Checkbox.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckBoxEnum.CrossBox">
      <summary>
            Crossbox.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.CheckBoxEnum.RadioButton">
      <summary>
            Radio button.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.FieldAlignEnum">
      <summary>
            Specifies the alignment of text within the field's rectangle.
            </summary>
      <remarks>Use the members of this enumeration to set the value 
            of the <see cref="P:C1.Win.FlexReport.Field.Align" /> property in the <see cref="T:C1.Win.FlexReport.Field" /> class.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.General">
      <summary>
            Align numbers to the right, other values to the left.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.LeftTop">
      <summary>
            Align to the left and to the top of the field box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.CenterTop">
      <summary>
            Align to the center and to the top of the field box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.RightTop">
      <summary>
            Align to the right and to the top of the field box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.LeftBottom">
      <summary>
            Align to the left and to the bottom of the field box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.CenterBottom">
      <summary>
            Align to the center and to the bottom of the field box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.RightBottom">
      <summary>
            Align to the right and to the bottom of the field box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.LeftMiddle">
      <summary>
            Align to the left and to the middle of the field box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.CenterMiddle">
      <summary>
            Align to the center and to the middle of the field box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.RightMiddle">
      <summary>
            Align to the right and to the middle of the field box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.JustTop">
      <summary>
            Justify and align to the top of the field box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.JustBottom">
      <summary>
            Justify and align to the bottom of the field box.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.FieldAlignEnum.JustMiddle">
      <summary>
            Justify and align to the middle of the field box.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.PictureAlignEnum">
      <summary>
            Specifies the alignment of images within the field's rectangle.
            </summary>
      <remarks>
            Use the members of this enumeration to set the value of the 
            <see cref="P:C1.Win.FlexReport.Field.PictureAlign" />, <see cref="P:C1.Win.FlexReport.ImageField.PictureAlign" /> etc properties.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.LeftTop">
      <summary>
            Align to the left and to the top, clipping if necessary.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.CenterTop">
      <summary>
            Align to the center and to the top, clipping if necessary.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.RightTop">
      <summary>
            Align to the right and to the top, clipping if necessary.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.LeftBottom">
      <summary>
            Align to the left and to the bottom, clipping if necessary.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.CenterBottom">
      <summary>
            Align to the center and to the bottom, clipping if necessary.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.RightBottom">
      <summary>
            Align to the right and to the bottom, clipping if necessary.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.LeftMiddle">
      <summary>
            Align to the left and to the middle, clipping if necessary.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.CenterMiddle">
      <summary>
            Align to the center and to the middle, clipping if necessary.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureAlignEnum.RightMiddle">
      <summary>
            Align to the right and to the middle, clipping if necessary.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.PictureScaleEnum">
      <summary>
            Specifies the scaling of images within the field's rectangle.
            </summary>
      <remarks>Use the members of this enumeration to set the value of the <see cref="P:C1.Win.FlexReport.Field.PictureScale" />,
            <see cref="P:C1.Win.FlexReport.ImageField.PictureScale" /> properties.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.PictureScaleEnum.Clip">
      <summary>
            Use the image's original size, clipping it to the display area if necessary.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureScaleEnum.Stretch">
      <summary>
            Stretch the picture to fill the display area. 
            This mode will usually change the image's aspect ratio.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureScaleEnum.Scale">
      <summary>
            Scale the picture to fit the display area. 
            This mode may increase or reduce the size of the image 
            while maintaining its aspect ratio.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureScaleEnum.Tile">
      <summary>
            Tile the picture to fill the display area.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureScaleEnum.Hide">
      <summary>
            Hide the picture.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.RunningSumEnum">
      <summary>
            Determines whether to calculate a running sum.
            </summary>
      <remarks>Use the members of this enumeration to set the value 
            of the <see cref="P:C1.Win.FlexReport.Field.RunningSum" /> property in the <see cref="T:C1.Win.FlexReport.Field" /> class.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.RunningSumEnum.NoRunningSum">
      <summary>
            Do not treat field as a running sum.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.RunningSumEnum.SumOverGroup">
      <summary>
            Calculate running sum over each group.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.RunningSumEnum.SumOverAll">
      <summary>
            Calculate running sum over the whole report.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.TextDirectionEnum">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.TextDirectionEnum.Normal">
      <summary>
            Text direction is normal.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.TextDirectionEnum.Up">
      <summary>
            Text direction is up.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.TextDirectionEnum.Down">
      <summary>
            Text direction is down.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Field.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.Field" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Field.Load(System.Xml.XmlNodeList)">
      <summary>
            Override in derived classes to provide advanced persistence mechanism.
            </summary>
      <param name="properties">
      </param>
    </member>
    <member name="M:C1.Win.FlexReport.Field.Save(System.Xml.XmlWriter)">
      <summary>
            Override in derived classes to provide advanced persistence mechanism.
            </summary>
      <param name="writer">
      </param>
    </member>
    <member name="M:C1.Win.FlexReport.Field.GetRenderContent(System.String@,System.Drawing.Image@,System.Boolean@,System.Boolean)">
      <summary>
            Selects the text or image that will be rendered by the field.
            </summary>
      <param name="value">Field text.</param>
      <param name="img">Field image.</param>
      <param name="disposeImage">Indicates that image should be disposed after using.</param>
      <param name="designTime">This parameter allows the field to render differently at design time or run time. 
            This is usually needed for bound controls, since no data is available at design time.</param>
      <remarks>Override this method in derived classes to provide custom text or images to be rendered in the report.</remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.WritingMode">
      <summary>
            Gets or sets the text writing mode: horizontal (default), vertical with left to right flow etc.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Value">
      <summary>
            Gets or sets the field's calculated value.
            </summary>
      <remarks>
        <para>When a field's <see cref="P:C1.Win.FlexReport.Field.Calculated" /> property is set to true, the control evaluates 
            the expression stored in the <see cref="P:C1.Win.FlexReport.Field.Text" /> property and stores the result in the 
            <see cref="P:C1.Win.FlexReport.Field.Value" /> property, which gets rendered into the report.</para>
        <para>This is the field's default property, so when you use a field name in a <b>VBScript</b>
            expression, you are actually referring to the field's <see cref="P:C1.Win.FlexReport.Field.Value" /> property.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Text">
      <summary>
            Gets or sets the field's text.
            </summary>
      <remarks>
        <para>The <see cref="P:C1.Win.FlexReport.Field.Text" /> property contains the text that will be rendered on the report.</para>
        <para>This value may be rendered literally (without any translation) or it may be evaluated as a 
            <b>VBScript</b> expression, depending on the setting of the <see cref="P:C1.Win.FlexReport.Field.Calculated" /> property.</para>
      </remarks>
      <example>
            The code below creates two fields. One displays the label "Sales Tax", the other displays the
            tax value by multiplying a database field ("Sales") by a constant.
            <code>
            // display literal Text
            _c1r.Field[0].Text = "Sales Tax";
            _c1r.Field[0].Calculated = false; 
            
            // display a calculated value
            _c1r.Field[1].Text = "Sales * 0.085";
            _c1r.Field[1].Calculated = true; 
            </code></example>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Subreport">
      <summary>
            Gets or sets a reference to another report to be rendered within the field (a <i>subreport</i>).
            </summary>
      <remarks>
        <para>A subreport is a report that is inserted in another report. Subreports are useful when you want to combine 
            several reports into one. For example, you may have a main report that integrates several subreports into a single 
            main report. Or you can use the main report to show detailed information and use subreports to show summary data 
            at the beginning of each group.</para>
        <para>For some real-world examples, check the "Sales By Category" and "Sales By Year" reports in the NWIND.XML
            sample that ships with the control.</para>
        <para>To define a field as a subreport, you should start by loading the subreport, then assign the subreport 
            control to the field's <see cref="P:C1.Win.FlexReport.Field.Subreport" /> property.</para>
        <para>Next, link the subreport to the main report using the subreport field's <see cref="P:C1.Win.FlexReport.Field.Text" /> property (this is 
            analogous to setting the <b>LinkChildFields/LinkMasterFields</b> properties in a Microsoft  Access subreport). The 
            <b>Text</b> property in a subreport field is used as a filter. It specifies which records in the source recordset 
            should be used to render the subreport based on the current record for the main report.</para>
        <para>When the main report is being rendered and reaches the subreport field, the <b>Text</b> expression is evaluated 
            and the result is uses as a filter condition for the subreport.</para>
        <para>Building the link expression is not difficult, but it is a little tricky because it requires you to create a 
            string that contains quotes, and these internal quotes must be doubled (written as "").</para>
        <para>If you are creating reports using the Report Designer, you don't have to worry about building the link expressions 
            in code. Instead, right-click the subreport field and select the <b>Link Subreport...</b> menu. This will show a dialog 
            where you can select the master and detail fields. When you click OK, the Report Designer will build the link expression 
            and assign it to the <b>Text</b> property of the subreport field automatically.</para>
        <para>Subreport fields usually have the <see cref="!:AutoHeight" /> property set to <see cref="F:C1.Win.FlexReport.AutoSizeBehavior.CanGrow" />, so the subreport field can expand to 
            include all its records.</para>
        <para>Subreports may contain other subreports. There's no set limit for the depth of report nesting you can have. 
            However, there must be no circular references to reports. In other words, a report cannot contain a reference to itself 
            as a subreport.</para>
      </remarks>
      <example>
        <code>
            // load subreport and assign it to a field in the main report
            string sSub = "Sales By Category Subreport";
            c1Sub.Load("NWIND.XML", sSub);
            c1rMain.Fields[sSub].Subreport = c1Sub;
            
            // set up connection between main report and subreport
            c1rMain.Fields[sSub].Calculated = true;
            c1rMain.Fields[sSub].Text = "\"CategoryName = '\" &amp; [CategoryName] &amp; \"'\"";
            </code>
      </example>
    </member>
    <member name="P:C1.Win.FlexReport.Field.SubreportHasData">
      <summary>
            Returns whether a subreport has data and suppresses rendering if it doesn't.
            </summary>
      <remarks>
            This property allows you to check whether a subreport has data and prevent it from rendering if it doesn't. 
            </remarks>
      <example>
            The code below uses script to hide sections with empty subreports:
            <code>
            rep.Sections.Detail.OnFormat = "Detail.Visible = fSubreport.SubreportHasData"
            </code>
            The code below uses script to hide a field containing an empty subreport and show another field instead:
            <code>
            rep.Sections.Detail.OnFormat = 
                "hasData = fSubreport.SubreportHasData\r\n" +
                "fSubreport.Visible = hasData" +
                "fNoData.Visible = Not hasData\r\n" +
            </code></example>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Calculated">
      <summary>
            Specifies whether the <see cref="P:C1.Win.FlexReport.Field.Text" /> property should be interpreted as a literal value
            or as a calculated expression.
            </summary>
      <remarks>
        <para>If this property is set to false, the value of the <see cref="P:C1.Win.FlexReport.Field.Text" /> property is rendered 
            on the report without any further processing.</para>
        <para>If it is set to true, the value of the <see cref="P:C1.Win.FlexReport.Field.Text" /> property is evaluated as a 
            <b>VBScript</b> expression and the result of the expression is rendered on the report.</para>
      </remarks>
      <example>
            The code below creates two fields. One displays the label "Sales Tax", the other displays the
            tax value by multiplying a database field ("Sales") by a constant.
            <code>
            // display literal Text
            _c1r.Field[0].Text = "Sales Tax";
            _c1r.Field[0].Calculated = false; 
            
            // display a calculated value
            _c1r.Field[1].Text = "Sales * 0.085";
            _c1r.Field[1].Calculated = true; 
            </code></example>
    </member>
    <member name="P:C1.Win.FlexReport.Field.HideDuplicates">
      <summary>
            Specifies whether duplicate values in consecutive records should be suppressed.
            </summary>
      <remarks>
        <para>You can use the <see cref="P:C1.Win.FlexReport.Field.HideDuplicates" /> property to hide a field on a report 
            when its value is the same as in the preceding record.</para>
        <para>For example, on a report listing suppliers and their products, each supplier's name 
            can appear once for each group of products, rather than once for each product.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.RunningSum">
      <summary>
            Specifies whether to show a running sum for the field.
            </summary>
      <remarks>
        <para>You can use the <see cref="P:C1.Win.FlexReport.Field.RunningSum" /> property to calculate record-by-record or 
            group-by-group totals in a report.</para>
        <para>The <see cref="P:C1.Win.FlexReport.Field.RunningSum" /> property specifies whether a calculated field on a report 
            displays a running total and lets you set the range over which values are accumulated.</para>
      </remarks>
      <seealso cref="T:C1.Win.FlexReport.RunningSumEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.WordWrap">
      <summary>
            Gets or sets a value indicating whether automatic word wrapping is on.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.LineSpacing">
      <summary>
            Gets or sets the line spacing between text lines in the field, in percent.
            The default is 100 which corresponds to normal line spacing.
            <para>
            Note that this property is ignored if <see cref="P:C1.Win.FlexReport.Field.RTF" /> is <b>true</b>.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Font">
      <summary>
            Gets or sets the field's font.
            </summary>
      <remarks>If you set a field's font <see cref="P:C1.Win.FlexReport.FontHolder.Size" /> property to a value that 
            is too large to fit the field box (defined by the <see cref="!:Height" /> property), 
            no text will appear in the field.
            </remarks>
      <seealso cref="T:C1.Win.FlexReport.FontHolder" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.TextAngle">
      <summary>
            Gets or sets the angle of text rotation within the field (including barcodes).
            </summary>
      <remarks>
            Note that some output/export formats (such as RTF and plain text) do not support rotated text.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.CanGrow">
      <summary>
            Specifies whether the field height should be automatically increased to fit the field's contents.
            </summary>
      <remarks>
        <para>You can use the <see cref="P:C1.Win.FlexReport.Field.CanGrow" /> and <see cref="P:C1.Win.FlexReport.Field.CanShrink" /> properties to control 
            the appearance of report fields and sections. When you set both properties to true, the field 
            or section automatically adjusts so any amount of data can be printed. When a field grows or 
            shrinks, the fields below it move down or up the page.</para>
        <para>If you set a field's <see cref="P:C1.Win.FlexReport.Field.CanGrow" /> property to true, the control automatically 
            sets the <see cref="P:C1.Win.FlexReport.Field.CanGrow" /> property of the containing section to true. (However, if you 
            set a control's <see cref="P:C1.Win.FlexReport.Field.CanShrink" /> property to true, the control doesn't set the section's 
            <see cref="P:C1.Win.FlexReport.Field.CanShrink" /> property to true.)</para>
        <para>When you use the <see cref="P:C1.Win.FlexReport.Field.CanGrow" /> and <see cref="P:C1.Win.FlexReport.Field.CanShrink" /> properties, remember that:</para>
        <para>1. The property settings don't affect the horizontal spacing between fields; they affect 
            only the vertical space the fields occupy.</para>
        <para>2. The height of a large field can prevent fields beside it from shrinking. For example, 
            if several short controls are on the left side of a report's detail section and one tall control, 
            such as an unbound object frame, is on the right side, the controls on the left won't shrink,
            even if they contain no data.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.CanShrink">
      <summary>
            Specifies whether the field height should be automatically reduced to fit the field's contents.
            </summary>
      <seealso cref="P:C1.Win.FlexReport.Field.CanGrow" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.Size">
      <summary>
            Gets or sets the field's size, in twips.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Location">
      <summary>
            Gets or sets the field's location within the section, in twips.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.ForeColor">
      <summary>
            Gets or sets the field's foreground color.
            </summary>
      <remarks>
            Use the <b>ForeColor</b> property to specify the color for text in a field. You can use this property to make 
            fields easy to read or to convey a special meaning.
            </remarks>
      <example>
            The code below uses script to change the color of the text in the <i>UnitsInStock</i> field when its value 
            falls below the reorder level.
            <code>
            // build script
            string script = "UnitsInStock.ForeColor = " +
            	"IIF(UnitsInStock &lt; ReorderLevel, vbRed, vbBlack)";
            	
            // assign script to detail section
            _c1r.Sections.Detail.OnPrint = script;
            </code></example>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Format">
      <summary>
            Gets or sets a string used to format the field value.
            </summary>
      <remarks>
        <para>You can use the <see cref="P:C1.Win.FlexReport.Field.Format" /> property to customize the way numbers, dates, times, 
            and text are displayed and printed.</para>
        <para>For example, if you've created a <b>Price</b> field, you can set its <see cref="P:C1.Win.FlexReport.Field.Format" /> 
            property to "Currency". If the field value is set to "4321.678", it would be rendered as $4,321.68.</para>
        <para>You can use the <see cref="P:C1.Win.FlexReport.Field.Format" /> property to format numbers (including currency and percentage 
            values), dates, boolean values, and strings.</para>
        <para>The syntax for the format string is the same used with the .NET <see cref="M:System.String.Format(System.String,System.Object)" /> method.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Align">
      <summary>
            Gets or sets the text alignment within the field.
            </summary>
      <seealso cref="T:C1.Win.FlexReport.FieldAlignEnum" />
      <remarks>
        <para>This property determines how text is aligned within the field.</para>
        <para>To control picture alignment, use the <see cref="P:C1.Win.FlexReport.Field.PictureAlign" /> property.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.BorderStyle">
      <summary>
            Gets or sets the field's border style.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.LineWidth">
      <summary>
            Gets or sets the width of the field's border or line.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.BorderColor">
      <summary>
            Gets or sets the field's border color.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Picture">
      <summary>
            Gets or sets a picture to display on the field.
            </summary>
      <remarks>
        <para>You may set this property to three types of object:</para>
        <para>1) Regular .NET <see cref="T:System.Drawing.Image" /> objects.</para>
        <para>2) Strings containing image file names or Urls.</para>
        <para>3) Strings containing names of image fields in the report data source.</para>
        <para>Options 1 and 2 are used to create unbound images, such as logos. These images do not 
            depend on the report data.</para>
        <para>Option 3 is used to create bound images, such as product or employee pictures. These 
            are images stored with the report data.</para>
      </remarks>
      <seealso cref="P:C1.Win.FlexReport.Field.PictureAlign" />
      <seealso cref="P:C1.Win.FlexReport.Field.PictureScale" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.PictureAlign">
      <summary>
            Gets or sets how field pictures should be the aligned.
            </summary>
      <seealso cref="P:C1.Win.FlexReport.Field.Picture" />
      <seealso cref="P:C1.Win.FlexReport.Field.PictureScale" />
      <seealso cref="T:C1.Win.FlexReport.PictureAlignEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.PictureScale">
      <summary>
            Gets or sets how images should be the scaled to fit within the field area.
            </summary>
      <remarks>
        <para>Depending on the setting of this property, images may be clipped, stretched, scaled (which preserves the 
            image's aspect ratio), tiled, or hidden.</para>
        <para>
          <b>PictureScale</b> works with the <see cref="P:C1.Win.FlexReport.Field.PictureAlign" /> property so you can control image scaling and 
            alignment independently.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.CheckBox">
      <summary>
            Specifies whether the field should be displayed as a checkbox.
            </summary>
      <remarks>
            This property allows you to display boolean values graphically, rather than as plain text.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.RTF">
      <summary>
            Gets or sets a value indicating whether strings enclosed in curly brackets should render as RTF.
            </summary>
      <remarks>If you set this property to true, any fields containing text 
            enclosed in curly brackets will be rendered as RTF. 
            This allows you to add complex formatting within a field.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Field.BarCode">
      <summary>
            Gets or sets a value indicating whether the field should render as barcode.
            </summary>
      <seealso cref="T:C1.Win.C1Document.BarCodeEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.BarcodeOptions">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.Field.BarcodeOptions" /> object which allows to define various barcode-related options.
            </summary>
      <seealso cref="T:C1.Win.C1Document.BarCodeEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Field.ShapeType">
      <summary>
            Gets or sets the type of geometric shape drawn by the current field.
            <para>The default is <b>None</b>.</para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Field.Shape">
      <summary>
            Gets or sets an instance of the <see cref="T:C1.Win.C1Document.ShapeBase" />-derived class specifying
            properties of the geometric shape drawn by this field (if <see cref="P:C1.Win.FlexReport.Field.ShapeType" /> is not <b>None</b>).
            </summary>
      <seealso cref="P:C1.Win.FlexReport.Field.ShapeType" />
    </member>
    <member name="T:C1.Win.FlexReport.ForcePageBreakEnum">
      <summary>
            Determines whether page breaks should be inserted before or after a field or section.
            </summary>
      <remarks>Use the members of this enumeration to set the value of the <see cref="P:C1.Win.FlexReport.FieldBase.ForcePageBreak" /> and 
            <see cref="P:C1.Win.FlexReport.Section.ForcePageBreak" /> properties in the <see cref="T:C1.Win.FlexReport.Field" /> and <see cref="T:C1.Win.FlexReport.Section" /> classes.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.None">
      <summary>
            No page breaks.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.Before">
      <summary>
            A page break is inserted before the field or section.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.After">
      <summary>
            A page break is inserted after the field or section.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.BeforeAndAfter">
      <summary>
            Page breaks are inserted before and after the field or section.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.PageBefore">
      <summary>
            In multi-column reports, a page break is inserted before the field or section instead of column break.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.PageAfter">
      <summary>
            In multi-column reports, a page break is inserted after the field or section instead of column break.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ForcePageBreakEnum.PageBeforeAndAfter">
      <summary>
            In multi-column reports, a page break is inserted before and after the field or section instead of column break.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.AutoSizeBehavior">
      <summary>
            Defines options controlling how an object's size changes
            automatically depending on its content.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.AutoSizeBehavior.None">
      <summary>
            Object is not resized.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.AutoSizeBehavior.CanGrow">
      <summary>
            Object can grow.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.AutoSizeBehavior.CanShrink">
      <summary>
            Object can shrink.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.AutoSizeBehavior.GrowAndShrink">
      <summary>
            Object can grow and shrink.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.SplitBehavior">
      <summary>
            Defines the splitting behavior of a report object.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SplitBehavior.Never">
      <summary>
            The object should not be split between pages
            (i.e. should always be kept together on a single page), object
            is cut off if it not fit the page.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SplitBehavior.SplitIfNeeded">
      <summary>
            The object can be split if it does not fit onto the current page.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SplitBehavior.KeepTogether">
      <summary>
            The object can be split only if it is too large to fit on an empty 
            page. In that case, the object is split immediately. Otherwise, a 
            new page is started and the object is placed on it without 
            splitting.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.AnchorEnum">
      <summary>
            Determines how the field is positioned with respect to its containing subsection 
            when the subsection grows or shrinks as a result of the subsection's 
            <see cref="P:C1.Win.FlexReport.SubSection.AutoHeight" /> and <see cref="P:C1.Win.FlexReport.SubSection.AutoHeight" /> properties.
            </summary>
      <remarks>Use the members of this enumeration to set the value 
            of the <see cref="P:C1.Win.FlexReport.FieldBase.Anchor" /> property in the <see cref="T:C1.Win.FlexReport.FieldBase" /> class.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.AnchorEnum.Top">
      <summary>
            The field does not move. The space between the top of the field 
            and the top of the subsection remains the same.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.AnchorEnum.Bottom">
      <summary>
            The field moves vertically. The space between the bottom of the field 
            and the bottom of the subsection remains the same.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.AnchorEnum.TopAndBottom">
      <summary>
            The field grows or shrinks. The space between field and the subsection 
            remains the same (above and below).
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ImageField">
      <summary>
            Represents a report field containing a data bound or static image.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ImageField.Picture">
      <summary>
            Gets or sets a picture to display in the field.
            </summary>
      <remarks>
        <para>You may set this property to three types of object:</para>
        <para>1) Regular .NET <see cref="!:Image" /> objects.</para>
        <para>2) Strings containing image file names or Urls.</para>
        <para>3) Strings containing names of image fields in the report data source.</para>
        <para>Options 1 and 2 are used to create unbound images, such as logos. These images do not 
            depend on the report data.</para>
        <para>Option 3 is used to create bound images, such as product or employee pictures. These 
            are images stored with the report data.</para>
      </remarks>
      <seealso cref="P:C1.Win.FlexReport.ImageField.PictureAlign" />
      <seealso cref="P:C1.Win.FlexReport.ImageField.PictureScale" />
    </member>
    <member name="P:C1.Win.FlexReport.ImageField.PictureAlign">
      <summary>
            Gets or sets a value determining how image is aligned within the field.
            </summary>
      <seealso cref="P:C1.Win.FlexReport.ImageField.Picture" />
      <seealso cref="P:C1.Win.FlexReport.ImageField.PictureScale" />
      <seealso cref="T:C1.Win.FlexReport.PictureAlignEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.ImageField.PictureScale">
      <summary>
            Gets or sets a value determining how image is scaled within the field.
            </summary>
      <remarks>
        <para>Depending on the setting of this property, images may be clipped, stretched, scaled (which preserves the 
            image's aspect ratio), tiled, or hidden.</para>
        <para>
          <b>PictureScale</b> works with the <see cref="P:C1.Win.FlexReport.ImageField.PictureAlign" /> property so you can control image scaling and 
            alignment independently.</para>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.ParagraphItem">
      <summary>
            Abstract base class for objects representing fragments within a <see cref="T:C1.Win.FlexReport.ParagraphField" />.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItem.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.ParagraphItem" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItem.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
            Copies properties from another object into this object.
            </summary>
      <param name="source">The source object, properties of which are copied.</param>
      <param name="assignName">Indicates whether the name of the object should be copied.</param>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphItem.Owner">
      <summary>
            Gets or sets the <see cref="T:C1.Win.FlexReport.ParagraphField" /> object owning this object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphItem.Background">
      <summary>
            Gets or sets the <see cref="!:C1BackgroundBase" /> object defining the background of the paragraph item.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphItem.BackColor">
      <summary>
            Gets or sets the item's background color,
            this property works via <see cref="P:C1.Win.FlexReport.ParagraphItem.Background" /> property using <see cref="T:C1.Win.C1Document.C1SolidBrush" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphItem.Hyperlink">
      <summary>
            Gets the hyperlink associated with the current item.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ParagraphText">
      <summary>
            Represents run of text in the <see cref="T:C1.Win.FlexReport.ParagraphField" />.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphText.#ctor">
      <summary>
            Initialize a new instance of the <see cref="T:C1.Win.FlexReport.ParagraphText" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphText.ForeColor">
      <summary>
            Gets or sets the item's foreground color.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphText.Font">
      <summary>
            Gets or sets the <see cref="T:C1.Win.FlexReport.ParagraphText" /> font.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphText.Text">
      <summary>
            Gets or sets a <see cref="T:C1.Win.FlexReport.ScriptObjectValue" /> yielding the text of the current item.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.ParagraphText.Format" -->
    <member name="T:C1.Win.FlexReport.ParagraphItemCollection">
      <summary>
            Represents a collection of <see cref="T:C1.Win.FlexReport.ParagraphItem" /> objects. 
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItemCollection.Add(System.String)">
      <summary>
            Adds a <see cref="T:C1.Win.FlexReport.ParagraphText" /> object to the collection.
            </summary>
      <returns>Returns added <see cref="T:C1.Win.FlexReport.ParagraphText" /> object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItemCollection.Add(C1.Win.FlexReport.ParagraphItem)">
      <summary>
            Adds a <see cref="T:C1.Win.FlexReport.ParagraphItem" /> object to the collection.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItemCollection.RemoveAt(System.Int32)">
      <summary>
            Removes item with specified index from the collection.
            </summary>
      <param name="index">The index of item to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItemCollection.Remove(C1.Win.FlexReport.ParagraphItem)">
      <summary>
            Removes a <see cref="T:C1.Win.FlexReport.ParagraphItem" /> object from collection.
            </summary>
      <param name="item">The <see cref="T:C1.Win.FlexReport.ParagraphItem" /> object to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphItemCollection.Clear">
      <summary>
            Clears collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ParagraphField">
      <summary>
            Represents a field containing a paragraph of formatted text.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ParagraphField.#ctor">
      <summary>
            Initialize a new instance of the <see cref="T:C1.Win.FlexReport.ParagraphField" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ParagraphField.Content">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.ParagraphItemCollection" /> representing the content of the current paragraph.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.RtfField">
      <summary>
            Represents a field containing Rich Text Format text (RTF).
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.RtfField.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.RtfField" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.RtfField.Text">
      <summary>
            Gets or sets the RTF text.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.RtfField.DetectUrls">
      <summary>
            Gets or sets a value indicating whether or not the current field
            will automatically format Uniform Resource Locators (URLs) 
            when those are found in text.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.RtfField.Align">
      <summary>
            Gets or sets a value indicating how text is aligned within the field.
            This property is used only if the field's text is not enclosed in RTF begin/end tags "{\rtf1" and "}".
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.RtfField.ForeColor">
      <summary>
            Gets or sets the field's text color.
            This property is used only if the field's text is not enclosed in RTF begin/end tags "{\rtf1" and "}".
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.RtfField.Font">
      <summary>
            Gets or sets the text font.
            This property is used only if the field's text is not enclosed in RTF begin/end tags "{\rtf1" and "}".
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ShapeField">
      <summary>
            Represents a field containing a geometric shape.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ShapeField.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.ShapeField" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ShapeField.ShapeType">
      <summary>
            Gets or sets the type of geometric shape drawn by the current field, this property
            can be specified as <b>None</b>, in this case field does not draw shape at all.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ShapeField.Shape">
      <summary>
            Gets or sets an instance of the <see cref="T:C1.Win.C1Document.ShapeBase" />-derived class specifying
            properties of the geometric shape drawn by this field.
            </summary>
      <seealso cref="P:C1.Win.FlexReport.ShapeField.ShapeType" />
    </member>
    <member name="P:C1.Win.FlexReport.ShapeField.Line">
      <summary>
            Gets or sets the <see cref="P:C1.Win.FlexReport.ShapeField.Line" /> object defining the style of lines used to draw the shape.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ShapeField.ShapeBackColor">
      <summary>
            Gets or sets the color used to fill internal areas of shapes.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ShapeField.ShapeBackground">
      <summary>
            Gets or sets the <see cref="T:C1.Win.C1Document.C1Brush" />-derived object used to fill the internal areas of the shape.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.SubreportParameterValue">
      <summary>
            Represents a subreport parameter value.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SubreportParameterValue.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.SubreportParameterValue" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SubreportParameterValue.AssignFrom(System.Object)">
      <summary>
            Copies properties from another <see cref="T:C1.Win.FlexReport.SubreportParameterValue" /> object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportParameterValue.ParentReport">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object containing this value.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportParameterValue.Owner">
      <summary>
            Gets the <see cref="!:SubreportParameterValus" /> collection containing this value.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportParameterValue.Field">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.SubreportField" /> object containing this value.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportParameterValue.Value">
      <summary>
            Gets or sets the <see cref="T:C1.Win.FlexReport.ScriptObjectValue" /> yielding the value of the parameter.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.SubreportParameterValues">
      <summary>
            Collection of the <see cref="T:C1.Win.FlexReport.SubreportParameterValue" /> objects.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportParameterValues.Owner">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.SubreportField" /> object owning this collection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportParameterValues.Report">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> containing this collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.SubreportField">
      <summary>
            Field used to show subreports in <see cref="T:C1.Win.FlexReport.C1FlexReport" />.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SubreportField.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.SubreportField" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportField.Subreport">
      <summary>
            Gets or sets a reference to another <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object to be rendered within this <see cref="T:C1.Win.FlexReport.SubreportField" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportField.SubreportHasData">
      <summary>
            Returns whether a subreport has data and suppresses rendering if it doesn't.
            </summary>
      <remarks>
            This property allows you to check whether a subreport has data and prevent it from rendering if it doesn't. 
            </remarks>
      <example>
            The code below uses script to hide sections with empty subreports:
            <code>
            rep.Sections.Detail.OnFormat = "Detail.Visible = fSubreport.SubreportHasData"
            </code>
            The code below uses script to hide a field containing an empty subreport and show another field instead:
            <code>
            rep.Sections.Detail.OnFormat = 
                "hasData = fSubreport.SubreportHasData\r\n" +
                "fSubreport.Visible = hasData" +
                "fNoData.Visible = Not hasData\r\n" +
            </code></example>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportField.SubreportFilter">
      <summary>
            Gets or sets the <see cref="T:C1.Win.FlexReport.ScriptStringValue" /> yielding the filter
            that will be applied to the main data source of the subreport.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportField.ParameterValues">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.SubreportParameterValues" /> collection 
            containing the list of named values that will be assigned to the parameters of the subreport.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubreportField.OutlinesVisible">
      <summary>
            Gets or sets a value indicating whether the outlines generated by this subreport
            should be included in the master report's outline tree.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.TextField">
      <summary>
            Represents a field containing a uniformly formatted databound or static text.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.TextField.#ctor">
      <summary>
            Initialize a new instance of the <see cref="T:C1.Win.FlexReport.TextField" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.TextField.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.TextField" /> class.
            </summary>
      <param name="text">The text of the field.</param>
    </member>
    <member name="M:C1.Win.FlexReport.TextField.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.TextField" /> class.
            </summary>
      <param name="name">The name of the field</param>
      <param name="text">The text of the field.</param>
    </member>
    <member name="M:C1.Win.FlexReport.TextField.#ctor(System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.TextField" /> class.
            </summary>
      <param name="name">The name of the field</param>
      <param name="text">The text of the field.</param>
      <param name="left">Left coordinate of the new field, in twips, with respect to its containing section.</param>
      <param name="top">Top coordinate of the new field, in twips, with respect to its containing section.</param>
      <param name="width">Width of the new field, in twips.</param>
      <param name="height">Height of the new field, in twips.</param>
    </member>
    <member name="P:C1.Win.FlexReport.TextField.Text">
      <summary>
            Gets or sets a <see cref="T:C1.Win.FlexReport.ScriptObjectValue" /> yielding the text of the field.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.TextField.Format">
      <summary>
            Gets or sets a string used to format the field value.
            </summary>
      <remarks>
        <para>You can use the <see cref="P:C1.Win.FlexReport.TextField.Format" /> property to customize the way numbers, dates, times, 
            and text are displayed and printed.</para>
        <para>For example, if you've created a <b>Price</b> field, you can set its <see cref="P:C1.Win.FlexReport.TextField.Format" /> 
            property to "Currency". If the field value is set to "4321.678", it would be rendered as $4,321.68.</para>
        <para>You can use the <see cref="P:C1.Win.FlexReport.TextField.Format" /> property to format numbers (including currency and percentage 
            values), dates, boolean values, and strings.</para>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.SortEnum">
      <summary>
            Specifies how groups should be sorted.
            </summary>
      <remarks>Use the members of this enumeration to set the value of 
            the <see cref="P:C1.Win.FlexReport.Group.Sort" /> property in the <see cref="T:C1.Win.FlexReport.Group" /> class.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.SortEnum.NoSort">
      <summary>
            Do not sort records for this group.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SortEnum.Ascending">
      <summary>
            Sort records in ascending order.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SortEnum.Descending">
      <summary>
            Sort records in descending order.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.KeepTogetherEnum">
      <summary>
            Specifies whether the group should be kept together on a page.
            </summary>
      <remarks>Use the members of this enumeration to set the value of the <see cref="P:C1.Win.FlexReport.Group.KeepTogether" /> and 
            <see cref="P:C1.Win.FlexReport.Section.KeepTogether" /> property in the <see cref="T:C1.Win.FlexReport.Group" /> and <see cref="T:C1.Win.FlexReport.Section" /> classes.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.KeepTogetherEnum.KeepNothing">
      <summary>
            Do not try to keep the group together.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.KeepTogetherEnum.KeepWholeGroup">
      <summary>
            Keep the group header, detail, and footer together on a page.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.KeepTogetherEnum.KeepFirstDetail">
      <summary>
            Keep the group header and first detail section together on a page.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Group">
      <summary>
            Object used to sort and group report data. 
            </summary>
      <remarks>
            Each <b>Group</b> has a Header section and a Footer section that can be used to display
            aggregate information for the group.
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Group.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.Group" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Group.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.FlexReport.Group" /> to the current object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="P:C1.Win.FlexReport.Group.GroupBy">
      <summary>
            Gets or sets the expression used to break records into groups.
            </summary>
      <remarks>This property contains a <b>VBScript</b> expression that is evaluated for every record 
            in the source recordset. A new group is started whenever the value of this expression changes. 
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Group.Sort">
      <summary>
            Gets or sets the group's sort order.
            If <see cref="P:C1.Win.FlexReport.Group.SortExpression" /> is specified, it is used for sorting, otherwise <see cref="P:C1.Win.FlexReport.Group.GroupBy" /> is used.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Group.SortExpression">
      <summary>
            Gets or sets the sort expression. Can be used to sort the group instances by an aggregate function.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Group.KeepTogether">
      <summary>
            Specifies whether the group should be kept together on a page.
            </summary>
      <seealso cref="T:C1.Win.FlexReport.KeepTogetherEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Group.ParentReport">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object that contains this <see cref="T:C1.Win.FlexReport.Group" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Group.SectionHeader">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.Section" /> representing the header of this group.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Group.SectionFooter">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.Section" /> representing the footer of this group.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Group.OutlineLabel">
      <summary>
            Gets or sets a <see cref="T:C1.Win.FlexReport.ScriptStringValue" /> yielding the label of the group in the outline tree.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Group.OutlineParent">
      <summary>
            Gets or sets the name of the object that will be the parent of the current group in the outline tree.
            If unspecified, the report hierarchy will be used to determine the parent.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.GroupCollection">
      <summary>
            Represents a collection of <see cref="T:C1.Win.FlexReport.Group" /> objects.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.GroupCollection.Add(System.String,System.String,C1.Win.FlexReport.SortEnum)">
      <summary>
            Adds a new <see cref="T:C1.Win.FlexReport.Group" /> to the collection, along with header and footer sections for the new group. 
            </summary>
      <param name="name">Contains the name of the new group.</param>
      <param name="groupBy">Contains the value of the <see cref="P:C1.Win.FlexReport.Group.GroupBy" /> property for the new group.</param>
      <param name="sort">Contains the value of the <see cref="P:C1.Win.FlexReport.Group.Sort" /> property for the new group.</param>
      <returns>A reference to the newly added group.</returns>
      <remarks>
            When a group is added to a report, the control automatically adds two new sections, the group header and group 
            footer sections for the new group. These new sections are invisible by default.
            </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.GroupCollection.RemoveAt(System.Int32)">
      <summary>
            Removes an item from the collection.
            </summary>
      <param name="index">Specifies the item to be removed.</param>
    </member>
    <member name="M:C1.Win.FlexReport.GroupCollection.Clear">
      <summary>
            Clears the collection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.GroupCollection.Report">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object owning this collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.PictureShowEnum">
      <summary>
            Specifies where the background picture is displayed.
            </summary>
      <remarks>
            Use the members of this enumeration to set the value of the <see cref="!:Layout.PictureShow" /> property in the <see cref="T:C1.Win.FlexReport.Layout" /> class.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.PictureShowEnum.NoPages">
      <summary>
            Do not show the background picture.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureShowEnum.AllPages">
      <summary>
            Show the background picture on all pages.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureShowEnum.FirstPage">
      <summary>
            Show the background picture on the first page only.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.PictureShowEnum.AllButFirstPage">
      <summary>
            Show the background picture on all pages but the first.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ColumnLayoutEnum">
      <summary>
            Specifies the layout for the columns (down or across).
            </summary>
      <remarks>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.FlexReport.Layout.ColumnLayout" /> property 
            in the <see cref="T:C1.Win.FlexReport.Layout" /> class.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.ColumnLayoutEnum.Down">
      <summary>
            Columns are laid out down the page, then across.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ColumnLayoutEnum.Across">
      <summary>
            Columns are laid out across the page, then down.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.ColumnLayoutEnum.Labels">
      <summary>
            Causes the report designer to discount label spacing in the design surface, 
            hide header/footer sections, disable grouping button, 
            and disable automatic section resizing when fields are moved or dragged.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.OrientationEnum">
      <summary>
            Specifies the page orientation.
            </summary>
      <remarks>Use the members of this enumeration to set the value of the 
            <see cref="P:C1.Win.FlexReport.Layout.Orientation" /> property in the <see cref="T:C1.Win.FlexReport.Layout" /> class.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.OrientationEnum.Auto">
      <summary>
            Set the orientation automatically, based on the current <see cref="P:C1.Win.FlexReport.Layout.PaperSize" /> 
            and report width (<see cref="P:C1.Win.FlexReport.Layout.Width" />).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.OrientationEnum.Portrait">
      <summary>
            Use Portrait orientation (tall).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.OrientationEnum.Landscape">
      <summary>
            Use Landscape orientation (wide).
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.HdrFtrEnum">
      <summary>
            Specifies where the Page Footer and Page Header sections are displayed.
            </summary>
      <remarks>Use the members of this enumeration to set the value 
            of the <see cref="P:C1.Win.FlexReport.Layout.PageFooter" /> and <see cref="P:C1.Win.FlexReport.Layout.PageHeader" /> properties 
            in the <see cref="T:C1.Win.FlexReport.Layout" /> class.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.HdrFtrEnum.AllPages">
      <summary>
            The page footer and header are printed on all pages of a report. 
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.HdrFtrEnum.NotWithReportHdr">
      <summary>
            The page header isn't printed on the same page as the report header. 
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.HdrFtrEnum.NotWithReportFtr">
      <summary>
            The page footer isn't printed on the same page as the report footer. 
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.HdrFtrEnum.NotWithReportHdrFtr">
      <summary>
            The page footer and header are not printed on a page that has either a report header or a report footer.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Layout">
      <summary>
            The Layout object controls how the report is rendered on pages.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Layout.AssignFrom(C1.Win.FlexReport.Layout)">
      <summary>
            Copies properties from another object into this object.
            </summary>
      <param name="source">The source object, properties of which are copied.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Layout.Reset">
      <summary>
            Resets the properties of this <see cref="T:C1.Win.FlexReport.Layout" /> object to default values.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.PageSize">
      <summary>
            Gets the current page size, in twips.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.Width">
      <summary>
            Gets or sets the width of the report's detail section, in twips.
            </summary>
      <remarks>
        <para>This property determines the width of the detail section of the report.</para>
        <para>Multi-column reports have header and footer sections that span all columns so their actual width is 
            <see cref="P:C1.Win.FlexReport.Layout.Width" /> * <see cref="P:C1.Win.FlexReport.Layout.Columns" />.</para>
        <para>For example, a two-column report with a one-inch wide detail section would have <b>Width</b> = 1440, 
            and its total width would be 2 * 1440 = 2880.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.MarginLeft">
      <summary>
            Gets or sets the left margin for each page, in twips.
            </summary>
      <remarks>
            The margins are measured in twips, from the edges of the paper. You can select the paper size and orientation using the 
            <see cref="P:C1.Win.FlexReport.Layout.PaperSize" /> and <see cref="P:C1.Win.FlexReport.Layout.Orientation" /> properties.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.MarginRight">
      <summary>
            Gets or sets the right margin for each page, in twips.
            </summary>
      <remarks>
            The margins are measured in twips, from the edges of the paper. You can select the paper size and orientation using the 
            <see cref="P:C1.Win.FlexReport.Layout.PaperSize" /> and <see cref="P:C1.Win.FlexReport.Layout.Orientation" /> properties.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.MarginTop">
      <summary>
            Gets or sets the top margin for each page, in twips.
            </summary>
      <remarks>
            The margins are measured in twips, from the edges of the paper. You can select the paper size and orientation using the 
            <see cref="P:C1.Win.FlexReport.Layout.PaperSize" /> and <see cref="P:C1.Win.FlexReport.Layout.Orientation" /> properties.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.MarginBottom">
      <summary>
            Gets or sets the bottom margin for each page, in twips.
            </summary>
      <remarks>
            The margins are measured in twips, from the edges of the paper. You can select the paper size and orientation using the 
            <see cref="P:C1.Win.FlexReport.Layout.PaperSize" /> and <see cref="P:C1.Win.FlexReport.Layout.Orientation" /> properties.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.Columns">
      <summary>
            Gets or sets the number of detail columns.
            </summary>
      <remarks>
        <para>Use this property to create multi-column reports.</para>
        <para>In multi-column reports, header and footer sections span the full width of the report. 
            Only the detail section is rendered in multiple columns. Use the <see cref="P:C1.Win.FlexReport.Layout.Width" /> property to specify the width 
            of each column, and the <see cref="P:C1.Win.FlexReport.Layout.ColumnLayout" /> property to specify whether columns should be laid out across 
            the page or down the page.</para>
        <para>Multi-column reports are useful for printing reports on mailing labels and other types of multi-column 
            pre-printed forms. They are also useful for creating compact reports where detail information is laid out across 
            the page.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.ColumnLayout">
      <summary>
            Gets or sets the layout for the columns (down or across).
            </summary>
      <seealso cref="T:C1.Win.FlexReport.ColumnLayoutEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Layout.PaperSize">
      <summary>
            Gets or sets the paper size for the report.
            </summary>
      <seealso cref="T:System.Drawing.Printing.PaperKind" />
    </member>
    <member name="P:C1.Win.FlexReport.Layout.CustomWidth">
      <summary>
            Gets or sets the custom width for the report, in twips.
            </summary>
      <remarks>
        <para>To create reports using custom paper sizes, set the <see cref="P:C1.Win.FlexReport.Layout.PaperSize" /> property to 
            custom, then set the <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" /> and <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" /> properties 
            to the size of the page measured in twips.</para>
        <para>If the <see cref="P:C1.Win.FlexReport.Layout.PaperSize" /> is set to a value other than custom, the paper size 
            is determined by that setting. The <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" /> and <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" /> properties are not 
            used in this case.</para>
        <para>If the <see cref="P:C1.Win.FlexReport.Layout.PaperSize" /> is set to custom and the <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" /> or 
            <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" /> properties are set to zero, the printer's default paper size is used.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.CustomHeight">
      <summary>
            Gets or sets the custom height for the report, in twips.
            </summary>
      <remarks>
        <para>To create reports using custom paper sizes, set the <see cref="P:C1.Win.FlexReport.Layout.PaperSize" /> property to 
            custom, then set the <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" /> and <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" /> properties 
            to the size of the page measured in twips.</para>
        <para>If the <see cref="P:C1.Win.FlexReport.Layout.PaperSize" /> is set to a value other than custom, the paper size 
            is determined by that setting. The <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" /> and <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" /> properties are not 
            used in this case.</para>
        <para>If the <see cref="P:C1.Win.FlexReport.Layout.PaperSize" /> is set to custom and the <see cref="P:C1.Win.FlexReport.Layout.CustomWidth" /> or 
            <see cref="P:C1.Win.FlexReport.Layout.CustomHeight" /> properties are set to zero, the printer's default paper size is used.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.Orientation">
      <summary>
            Gets or sets the page orientation.
            </summary>
      <seealso cref="T:C1.Win.FlexReport.OrientationEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Layout.PageHeader">
      <summary>
            Gets or sets a value that determines on which pages the Page Header section should be displayed.
            </summary>
      <remarks>
        <para>You can use the <b>PageHeader</b> and <b>PageFooter</b> properties to specify whether a report's page header or 
            page footer should be printed on the same page as a report header or report footer.</para>
        <para>For example, you might not want to print a page header containing the page number on the first page of a report 
            if the report header is a cover sheet.</para>
      </remarks>
      <seealso cref="T:C1.Win.FlexReport.HdrFtrEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Layout.PageFooter">
      <summary>
            Gets or sets a value that determines on which pages the Page Footer section should be displayed.
            </summary>
      <seealso cref="T:C1.Win.FlexReport.HdrFtrEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Layout.LabelSpacingX">
      <summary>
            Used by the designer to discount horizontal label spacing in the design surface.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Layout.LabelSpacingY">
      <summary>
            Used by the designer to discount vertical label spacing in the design surface.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ChartField">
      <summary>
            Represents a reportm field with a chart.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ChartField.#ctor">
      <summary>
            Initializes a new instance of ChartField object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ChartField.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.FlexReport.ChartField" /> to the current object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.DataSource">
      <summary>
            Gets or sets the name of the data source for the chart.
            The name must match a name of a data source in the report's DataSources collection.
            Empty string indicates that the main data source will be used.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.FilterExpression">
      <summary>
            Gets or sets the data source filter expression (only available when a non-default data source is used).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ImageType">
      <summary>
            Gets or sets the type of image generated by the chart.
            </summary>
      <remarks>
            Because of GDI+ limitation, this conversion does not support transparency.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.DataColor">
      <summary>
            Gets or sets the color for the chart bars, lines, symbols, or pie slices.
            </summary>
      <remarks>
            Avaiable if ColorGeneratoin is set to CustomByDataColor.
            If the chart contains more than one series (or pie slices) 
            then additional colors are generated automatically by making the base color lighter. 
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.Palette">
      <summary>
            Gets or sets the collection of colors to be used for each series (or pie slices).
            </summary>
      <remarks>
            Available if ColorGeneration is set to CustomByPalette.
            The collection is specified as a string containing a list of color names, 
            delimited by semicolons. For example:
            <example>chartField.Palette = "Red;Green;Blue"</example></remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.VisualizationType">
      <summary>
            Gets or sets the chart visualization type (2D or 3D). 
            </summary>
      <remarks>
            The Chart field has different set of properties to define the 2D and 3D chart. 
            <list type="bullet"><item><description>Specific 2D chart properties: ChartArea2D, ChartGroups2D, VisualEffects.</description></item><item><description>Specific 3D chart properties: ChartArea3D, ChartGroups3D.</description></item></list></remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.UseGrayscale">
      <summary>
            Gets or sets a value indicating whether to render the chart in grayscale instead of in color.
            </summary>
      <remarks>
            The use of Grayscale is intended as a preview for output to a black and white device. 
            It does not affect style brush or pen colors internally, only the rendering of the chart to the
            output devices and images.  Using grayscale implies the use of double buffered output.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ColorGeneration">
      <summary>
            Gets or sets the theme for automatic color generation.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.UseAntiAliasedGraphics">
      <summary>
            Gets or sets a value indicating whether to use anti-aliasing while rendering chart graphics (only).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.UseAntiAliasedText">
      <summary>
            Gets or sets a value indicating whether to use anti-aliasing while rendering chart text (only).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.DefaultStyle">
      <summary>
            Gets the chart style.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.LegendStyle">
      <summary>
            Gets the Legend style. (This is a shortcut to Legend.Style.)
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.FooterStyle">
      <summary>
            Gets the Footer style. (This is a shortcut to Footer.Style.)
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.HeaderStyle">
      <summary>
            Gets the Header style. (This is a shortcut to Header.Style.)
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.DefaultLabelStyle">
      <summary>
            Gets the ChartLabels default style. (This is a shortcut to ChartLabels.DefaultLabelStyle.)
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.Header">
      <summary>
            Gets the header object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.Footer">
      <summary>
            Gets the footer object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.Legend">
      <summary>
            Gets the legend object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ChartLabels">
      <summary>
             Gets the ChartLabels object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ChartArea2D">
      <summary>
            Gets the chart area of a 2D chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ChartGroups2D">
      <summary>
            Gets the chart groups of a 2D chart.
            </summary>
      <remarks>
            Each chart grup contains information related to data values and appearance.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.VisualEffects">
      <summary>
            Gets the ChartVisualEffects object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ChartArea3D">
      <summary>
            Gets the chart area of a 3D chart.
            </summary>
      <remarks>
            The chart area is the region of the chart that contains plot cube, axes and charted data.
            Its Style inherits directly from the parent ChartField.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.ChartField.ChartGroups3D">
      <summary>
            Gets the chart groups of a 3D chart.
            </summary>
      <remarks>
            Chart group contains information related to data values and related appearance.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.ReportInfo">
      <summary>
            Class that contains report metadata.
            </summary>
      <remarks>
        <para>Reports may include general information such as a title, author, and keywords.</para>
        <para>Such global information about the document itself (as opposed to its content or 
            structure) is called metadata, and is intended to assist in cataloguing and 
            searching for reports and report definitions in external databases.</para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.ReportInfo.AssignFrom(C1.Win.FlexReport.ReportInfo)">
      <summary>
            Copies properties from another object into this object.
            </summary>
      <param name="source">The source object, properties of which are copied.</param>
    </member>
    <member name="M:C1.Win.FlexReport.ReportInfo.Clear">
      <summary>
            Clears the <see cref="T:C1.Win.FlexReport.ReportInfo" /> object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportInfo.Clone">
      <summary>
            Returns a copy of this <see cref="T:C1.Win.FlexReport.ReportInfo" /> object.
            </summary>
      <returns>A copy of this <see cref="T:C1.Win.FlexReport.ReportInfo" /> object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.ReportInfo.ToString">
      <summary>
            Returns a string that represents the current <see cref="T:C1.Win.FlexReport.ReportInfo" /> object.
            </summary>
      <returns>Returns a string that represents the current <see cref="T:C1.Win.FlexReport.ReportInfo" /> object.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.ReportInfo.Author">
      <summary>
            Gets or sets the name of the person that created the report.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportInfo.Title">
      <summary>
            Gets or sets the title of the report.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportInfo.Subject">
      <summary>
            Gets or sets the subject of the report.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportInfo.Keywords">
      <summary>
            Gets or sets keywords associated with the report.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportInfo.Creator">
      <summary>
            Gets or sets the name of the application that created the report.
            </summary>
    </member>
    <member name="E:C1.Win.FlexReport.ReportInfo.PropertyChanged">
      <summary>
            Occurs when a property value changes.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Section">
      <summary>
            Represents a report band.
            </summary>
      <remarks>
        <para>
            Each <see cref="T:C1.Win.FlexReport.Section" /> object contains a collection of <see cref="T:C1.Win.FlexReport.SubSection" /> objects.
            </para>
        <para>Every report contains the following sections:</para>
        <para>A <b>detail</b> section.</para>
        <para>A <b>report header</b> and a <b>report footer</b> section.</para>
        <para>A <b>page header</b> and a <b>page footer</b> section.</para>
        <para>A <b>group header</b> and a <b>group footer</b> section for each <see cref="T:C1.Win.FlexReport.Group" /> object in the report.</para>
        <para>The total number of sections in a report is therefore <code>5 + 2 * Groups.Count</code>. Sections cannot
            be added and removed from reports directly. The number of sections is a function of the number of groups.</para>
        <para>Although sections cannot be removed, they can be hidden by setting their <see cref="P:C1.Win.FlexReport.Section.Visible" /> property
            to false.</para>
      </remarks>
    </member>
    <member name="M:C1.Win.FlexReport.Section.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.FlexReport.Section" /> to the current object.
            This method copies list of subsections but does not copy list of fields.
            This method does NOT copy type of the section.
            </summary>
      <param name="source">The source object to copy properties from.</param>
      <param name="assignName">Indicates whether the name should be copied.</param>
    </member>
    <member name="P:C1.Win.FlexReport.Section.ParentReport">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object that contains this <see cref="T:C1.Win.FlexReport.Section" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.Name">
      <summary>
            Gets or sets the <see cref="T:C1.Win.FlexReport.Section" /> name.
            </summary>
      <remarks>
        <para>The section name can be used as an index into the control's <see cref="P:C1.Win.FlexReport.C1FlexReport.Sections" /> collection.</para>
        <para>Section names are also used to identify fields in <b>VBScript</b> expressions.</para>
        <para>Duplicate and empty section names are allowed, but should be avoided if you plan to use the section names 
            in scripts or as indexers.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Section.Type">
      <summary>
            Returns the <see cref="T:C1.Win.FlexReport.Section" /> type (e.g., PageHeader, Detail).
            </summary>
      <seealso cref="T:C1.Win.FlexReport.SectionTypeEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Section.Fields">
      <summary>
            Gets a collection of all fields in this <see cref="T:C1.Win.FlexReport.Section" />.
            </summary>
      <remarks>
        <para>The <b>Fields</b> collection contains all <see cref="T:C1.Win.FlexReport.Field" /> objects defined in the current section.</para>
        <para>When you add a field to a section's <b>Fields</b> collection, the field is automatically assigned to the 
            section that owns the collection. For example, the code below adds a field to the <b>Detail</b> section:</para>
        <code>
            _c1r.Sections.Detail.Fields.Add("new field", "CompanyLogo", rc);
            </code>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Section.SubSections">
      <summary>
            Gets the collection of sub-sections in the current section.
            This collection contains at least one element.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.Visible">
      <summary>
            Specifies whether the <see cref="T:C1.Win.FlexReport.Section" /> will be rendered in the report.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.Height">
      <summary>
            Gets the height of the current section in twips.
            This is the sum of the heights of all sub-sections of the current section.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.AutoHeight">
      <summary>
            Gets or sets a value determining how the height of the section changes depending on its content.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.CanGrow">
      <summary>
            Gets or sets a value indicating whether the section's height is automatically increased to fit its content.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.CanShrink">
      <summary>
            Gets or sets a value indicating whether the section's height should be reduced when one or more fields shrink.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.KeepTogether">
      <summary>
            Specifies whether the <see cref="T:C1.Win.FlexReport.Section" /> should be kept together on a page.
            </summary>
      <remarks>
        <para>The <see cref="T:C1.Win.FlexReport.Group" /> and <see cref="T:C1.Win.FlexReport.Field" /> objects also have <b>KeepTogether</b> properties.</para>
        <para>The <see cref="T:C1.Win.FlexReport.Group" /> object's <see cref="P:C1.Win.FlexReport.Group.KeepTogether" /> property works across sections. 
            It determines whether group headers should be kept together with their first detail section or whether entire 
            groups should be kept together on a page.</para>
        <para>The <see cref="T:C1.Win.FlexReport.Field" /> object's <see cref="!:Field.KeepTogether" /> property determines whether the
            field should be rendered on a single page or whether it is allowed to be split across page breaks.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Section.SplitBehavior">
      <summary>
            Gets or sets a value determining how the section behaves
            when it is too high to fit in the vertical space available on the current page.
            </summary>
      <seealso cref="!:SplitHorzBehavior" />
    </member>
    <member name="P:C1.Win.FlexReport.Section.ForcePageBreak">
      <summary>
            Gets or sets a value determining whether page breaks should be inserted before and/or after the section.
            </summary>
      <seealso cref="T:C1.Win.FlexReport.ForcePageBreakEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Section.Repeat">
      <summary>
            For group header, group footer and report footer sections only,
            gets or sets a value indicating whether the current section should be repeated
            at the top or bottom of each page. The default is <b>false</b>.
            </summary>
      <remarks>
        <para>This property only applies to group header and group footer sections.</para>
        <para>Set this value to true to repeat the group header page at the top of every page, before the detail sections.</para>
        <para>If you have multiple groups, all group header sections that have the <b>Repeat</b> property set to true will 
            be rendered at the top of each page.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Section.PrintAtPageBottom">
      <summary>
            For master report's footer sections only, gets or sets a value
            indicating whether the current section should print at the bottom
            of the page immediately above the page footer, rather than right
            below the detail. The default is <b>false</b>.
            <para>
            This property is ignored for non-footer sections or for footers
            of sub-reports.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.UseColumnLayout">
      <summary>
            For master report's group and detail sections only, gets or sets a value
            indicating whether the current section should use column layout defined
            by <see cref="P:C1.Win.FlexReport.Layout.Columns" /> and <see cref="P:C1.Win.FlexReport.Layout.ColumnLayout" /> properties.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.OnFormat">
      <summary>
            Gets or sets a string containing <b>VBScript</b> code to be executed before the <see cref="T:C1.Win.FlexReport.Section" /> is formatted.
            </summary>
      <remarks>
        <para>This property contains <b>VBScript</b> instructions to be executed before the fields in the section 
            are calculated. When this script is executed, the recordset already holds the data that will be displayed 
            in the section, but the field values have not been updated yet.</para>
        <para>Use this event to assign values to fields before they are calculated, so the new values will be taken 
            into account when the control calculates the field's size and position when the <see cref="P:C1.Win.FlexReport.Section.CanGrow" /> or 
            <see cref="P:C1.Win.FlexReport.Section.CanShrink" /> properties are set to true.</para>
        <para>If you want to set field properties based on the field's current value, use the <see cref="P:C1.Win.FlexReport.Section.OnPrint" /> 
            property instead.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Section.OnPrint">
      <summary>
            Gets or sets a string containing <b>VBScript</b> code to be executed before the <see cref="T:C1.Win.FlexReport.Section" /> is printed 
            (after it is formatted).
            </summary>
      <remarks>
            This property contains <b>VBScript</b> instructions that get executed after the fields in the section 
            have been calculated.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Section.Calculated">
      <summary>
            Gets a value indicating whether the current section has already been calculated and its
            <see cref="P:C1.Win.FlexReport.Section.RenderHeight" /> property contains a valid value.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Section.RenderHeight">
      <summary>
            Gets the actual height of the current section.
            This is the sum of the heights of all its sub-sections.
            This property can only be used while the report is being rendered, otherwise it returns -1.
            <para>
            Note that if this property is used in the section's OnFormat script, then it returns
            the height calculated for the previous instance of the section, or -1 if this is the first calculation.
            </para></summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportHyperlink">
      <summary>
            Represents a hyperlink in a report.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportHyperlink.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.ReportHyperlink" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportHyperlink.AssignFrom(C1.Win.FlexReport.ReportHyperlink)">
      <summary>
            Copies properties from another object into this object.
            </summary>
      <param name="source">The source object, properties of which are copied.</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportHyperlink.StatusText">
      <summary>
            Gets or sets a <see cref="T:C1.Win.FlexReport.ScriptStringValue" /> yielding the text shown in the status line when the mouse is over the hyperlink
            (when the document is viewed in a <b>C1FlexViewer</b>).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportHyperlink.LinkTarget">
      <summary>
            Gets or sets the target of the current hyperlink.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportLinkTargetBase">
      <summary>
            Describes the target of a <see cref="T:C1.Win.FlexReport.ReportHyperlink" />.
            This is an abstract base class for the following derived classes:
            <see cref="T:C1.Win.FlexReport.ReportLinkTargetBookmark" />, <see cref="T:C1.Win.FlexReport.ReportLinkTargetUrl" />.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLinkTargetBase.AssignFrom(C1.Win.FlexReport.ReportLinkTargetBase)">
      <summary>
            Copies properties from another object into this object.
            </summary>
      <param name="source">The source object, properties of which are copied.</param>
    </member>
    <member name="T:C1.Win.FlexReport.ReportLinkTargetBookmark">
      <summary>
            Describes a <see cref="T:C1.Win.FlexReport.ReportLinkTargetBase" /> pointing to a
            some position within report.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLinkTargetBookmark.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.ReportLinkTargetBookmark" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLinkTargetBookmark.Bookmark">
      <summary>
            Gets or sets a <see cref="T:C1.Win.FlexReport.ScriptStringValue" /> yielding the bookmark in the current report.
            (To associate a bookmark with an object, use the object's Bookmark property.)
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportLinkTargetUrl">
      <summary>
            Describes a <see cref="T:C1.Win.FlexReport.ReportLinkTargetBase" /> pointing to an external document, file or URL.
            The hyperlink jump is performed using the <b>ShellExecute</b> OS shell API, so the result
            depends on the operating system and installed programs.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLinkTargetUrl.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.ReportLinkTargetUrl" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLinkTargetUrl.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.ReportLinkTargetUrl" /> class.
            </summary>
      <param name="target">The value of <see cref="P:C1.Win.FlexReport.ReportLinkTargetUrl.Url" /> property.</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLinkTargetUrl.Url">
      <summary>
            Gets or sets the file or URL which will be opened using <b>ShellExecute</b>.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportLabeledValue">
      <summary>
            Represents a value with an associated label.
            Both label and value can be specified as constants or as expressions.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLabeledValue.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.ReportLabeledValue" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLabeledValue.#ctor(System.Object,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.ReportLabeledValue" /> class.
            </summary>
      <param name="value">The constant value of <see cref="T:C1.Win.FlexReport.ReportLabeledValue" />.</param>
      <param name="label">The constant label of <see cref="T:C1.Win.FlexReport.ReportLabeledValue" />.</param>
    </member>
    <member name="M:C1.Win.FlexReport.ReportLabeledValue.AssignFrom(C1.Win.FlexReport.ReportLabeledValue)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.FlexReport.ReportLabeledValue" /> to the current object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValue.Owner">
      <summary>
            Gets a <see cref="T:C1.Win.FlexReport.ReportLabeledValues" /> collection containing this object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValue.Parameter">
      <summary>
            Gets a <see cref="T:C1.Win.FlexReport.ReportParameter" /> object owning this object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValue.ParentReport">
      <summary>
            Gets a <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object owning this object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValue.Value">
      <summary>
            Gets or sets the value.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValue.Label">
      <summary>
            Gets or sets the label of value.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportLabeledValues">
      <summary>
            Represents a collection of <see cref="T:C1.Win.FlexReport.ReportLabeledValue" /> object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValues.Owner">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.AllowedValuesDefinition" /> object owning this collection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportLabeledValues.Report">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object owning this collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.BoundLabeledValues">
      <summary>
            Represents the dynamic list of the labeled values, the count of values is defined by the count of records in the linked 
            <see cref="P:C1.Win.FlexReport.BoundLabeledValues.DataSource" />, <see cref="P:C1.Win.FlexReport.BoundLabeledValues.ValueExpression" /> used to calculated actual value, <see cref="P:C1.Win.FlexReport.BoundLabeledValues.LabelExpression" />
            used to calculated a label of value.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.BoundLabeledValues.AssignFrom(C1.Win.FlexReport.BoundLabeledValues)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.FlexReport.BoundLabeledValues" /> to the current object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.Owner">
      <summary>
            Gets a <see cref="T:C1.Win.FlexReport.AllowedValuesDefinition" /> object owning this <see cref="T:C1.Win.FlexReport.BoundLabeledValues" /> object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.Parameter">
      <summary>
            Gets a <see cref="T:C1.Win.FlexReport.ReportParameter" /> object owning this <see cref="T:C1.Win.FlexReport.BoundLabeledValues" /> object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.ParentReport">
      <summary>
            Gets a <see cref="T:C1.Win.FlexReport.C1FlexReport" /> owning this <see cref="T:C1.Win.FlexReport.BoundLabeledValues" /> object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.DataSource">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.BoundLabeledValues.DataSource" /> used to build list of values.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.DataSourceName">
      <summary>
            Gets or sets the name of the <see cref="P:C1.Win.FlexReport.BoundLabeledValues.DataSource" /> used to build list of values.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.ValueExpression">
      <summary>
            Gets the expression used to calculate a value.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.BoundLabeledValues.LabelExpression">
      <summary>
            Gets the expression used to calculate label of the value.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.AllowedValuesDefinition">
      <summary>
            Represents a collection of allowed values for a <see cref="T:C1.Win.FlexReport.ReportParameter" />.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.AllowedValuesDefinition.AssignFrom(C1.Win.FlexReport.AllowedValuesDefinition)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.FlexReport.AllowedValuesDefinition" /> to the current object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="P:C1.Win.FlexReport.AllowedValuesDefinition.Owner">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.ReportParameter" /> object owning this object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.AllowedValuesDefinition.Empty">
      <summary>
            Gets a value indicating whether this <see cref="T:C1.Win.FlexReport.AllowedValuesDefinition" /> is empty.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.AllowedValuesDefinition.Binding">
      <summary>
            Gets a <see cref="T:C1.Win.FlexReport.BoundLabeledValues" /> defining the list of allowed values for report parameter
            on the base of data source binding, this property is ignored if <see cref="P:C1.Win.FlexReport.AllowedValuesDefinition.Values" /> collection
            is not empty.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.AllowedValuesDefinition.Values">
      <summary>
            Gets a <see cref="T:C1.Win.FlexReport.ReportLabeledValues" /> collection defining list of allowed values for report parameter,
            if this collection contains the items then <see cref="P:C1.Win.FlexReport.AllowedValuesDefinition.Binding" /> property is ignored.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportParameter">
      <summary>
            Represents a parameter in a <see cref="T:C1.Win.FlexReport.C1FlexReport" />.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportParameter.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.FlexReport.ReportParameter" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ReportParameter.AssignFrom(System.Object)">
      <summary>
            Assigns (copies) properties from another object to the current object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="P:C1.Win.FlexReport.ReportParameter.ParentReport">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.C1FlexReport" /> object owning this parameter.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportParameter.AllowedValuesDefinition">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.ReportParameter.AllowedValuesDefinition" /> defining the list of allowed values for this parameter.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ReportParameter.DisplayText">
      <summary>
            Gets the display text corresponding to a parameter value.
            This property has a meaningful value only during the report rendering.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ReportParameterCollection">
      <summary>
            Represents a collection of <see cref="T:C1.Win.FlexReport.ReportParameter" /> objects.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ScriptValue`1">
      <summary>
            The abstract base class for types such as <see cref="T:C1.Win.FlexReport.ScriptStringValue" />,
            <see cref="T:C1.Win.FlexReport.ScriptObjectValue" /> and others that allow to specify a value
            either as a literal or as an expression.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ScriptValue`1.AssignFrom(C1.Win.FlexReport.ScriptValue{`0})">
      <summary>
            Assigns (copies) properties from another <see cref="!:ScriptValue" /> to the current object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="M:C1.Win.FlexReport.ScriptValue`1.op_Implicit(C1.Win.FlexReport.ScriptValue{`0})~System.String">
      <summary>
            Converts the <see cref="!:ScriptValue" />object to a string.
            </summary>
      <param name="value">The object to convert.</param>
      <returns>The string representing the object.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.ScriptValue`1.IsExpression">
      <summary>
            Gets or sets a value indicating whether the current <see cref="!:ScriptValue" />
            is specified as an expression.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ScriptValue`1.Expression">
      <summary>
            Gets or sets an expression used to calculate value of this <see cref="!:ScriptValue" />.
            Setting this value forces <see cref="P:C1.Win.FlexReport.ScriptValue`1.IsExpression" /> to true.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.ScriptValue`1.Value">
      <summary>
            Gets or sets a value of this <see cref="!:ScriptValue" />.
            Settings this value forces <see cref="P:C1.Win.FlexReport.ScriptValue`1.IsExpression" /> to false.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.ScriptValue`1.ValueAsString" -->
    <member name="T:C1.Win.FlexReport.ScriptStringValue">
      <summary>
            Represents a string that can be specified as a constant or as an expression.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ScriptStringValue.op_Implicit(System.String)~C1.Win.FlexReport.ScriptStringValue">
      <summary>
            Converts a string to a <see cref="T:C1.Win.FlexReport.ScriptStringValue" />.
            </summary>
      <param name="value">The string to convert.</param>
      <returns>The ScriptStringValue object.</returns>
    </member>
    <member name="T:C1.Win.FlexReport.ScriptObjectValue">
      <summary>
            Represents an object value that can be specified as a constant or as an expression.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ScriptObjectValue.op_Implicit(System.String)~C1.Win.FlexReport.ScriptObjectValue">
      <summary>
            Converts a string to a <see cref="T:C1.Win.FlexReport.ScriptObjectValue" />.
            </summary>
      <param name="value">The string to convert.</param>
      <returns>The ScriptObjectValue object.</returns>
    </member>
    <member name="T:C1.Win.FlexReport.ScriptEnumValue`1">
      <summary>
            Represents an enum value that can be specified as a constant or as an expression.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.ScriptEnumValue`1.op_Implicit(System.String)~C1.Win.FlexReport.ScriptEnumValue{`0}" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.ScriptEnumValue`1.op_Implicit(`0)~C1.Win.FlexReport.ScriptEnumValue{`0}" -->
    <member name="T:C1.Win.FlexReport.SectionTypeEnum">
      <summary>
            Specifies the section type, which is equivalent to a the index of a <see cref="T:C1.Win.FlexReport.Section" /> object
            in the control's <see cref="P:C1.Win.FlexReport.C1FlexReport.Sections" /> collection. 
            </summary>
      <remarks>Use the members of this enumeration to set the value of the <see cref="!:Field.Section" /> and 
            <see cref="P:C1.Win.FlexReport.Section.Type" /> properties.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.Undefined">
      <summary>
            Undefined. This setting indicates the field doesn't belong to any sections and should not be rendered.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.Detail">
      <summary>
            Detail section: repeated for every record in the main data source.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.Header">
      <summary>
            Report header section: appears once, in the beginning of the report.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.Footer">
      <summary>
            Report footer section: appears once, in the end of the report.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.PageHeader">
      <summary>
            Page header section: appears at the top of every page, subject to the setting of the 
            <see cref="P:C1.Win.FlexReport.Layout.PageHeader" /> property.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.PageFooter">
      <summary>
            Page footer section: appears at the bottom of every page, subject to the setting of the 
            <see cref="P:C1.Win.FlexReport.Layout.PageFooter" /> property.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupHeader1">
      <summary>
            Group header section: appears before level-one groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupFooter1">
      <summary>
            Group footer section: appears after level-one groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupHeader2">
      <summary>
            Group header section: appears before level-two groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupFooter2">
      <summary>
            Group footer section: appears after level-two groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupHeader3">
      <summary>
            Group header section: appears before level-three groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupFooter3">
      <summary>
            Group footer section: appears after level-three groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupHeader4">
      <summary>
            Group header section: appears before level-four groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.SectionTypeEnum.GroupFooter4">
      <summary>
            Group footer section: appears after level-four groups.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.SectionCollection">
      <summary>
            Collection of the <see cref="T:C1.Win.FlexReport.Section" /> objects. 
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SectionCollection.FindSection(C1.Win.FlexReport.SectionTypeEnum)">
      <summary>
            Gets a section from a <see cref="P:C1.Win.FlexReport.C1FlexReport.Sections" /> collection by its <see cref="P:C1.Win.FlexReport.Section.Type" />.
            Returns null if section not found.
            </summary>
      <param name="sectionType">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:C1.Win.FlexReport.SectionCollection.Item(C1.Win.FlexReport.SectionTypeEnum)">
      <summary>
            Gets a section from a <see cref="P:C1.Win.FlexReport.C1FlexReport.Sections" /> collection by its <see cref="P:C1.Win.FlexReport.Section.Type" />.
            Throws an exception if section with specified <see cref="P:C1.Win.FlexReport.Section.Type" /> not found.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SectionCollection.Detail">
      <summary>
            Returns a reference to the detail section of the report. 
            </summary>
      <remarks>
            This property is equivalent to this[SectionTypeEnum.Detail].
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.SectionCollection.Header">
      <summary>
            Returns a reference to the report header section. 
            </summary>
      <remarks>
            This property is equivalent to this[SectionTypeEnum.Header]
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.SectionCollection.Footer">
      <summary>
            Returns a reference to the report footer section. 
            </summary>
      <remarks>
            This property is equivalent to this[SectionTypeEnum.Footer].
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.SectionCollection.PageHeader">
      <summary>
            Returns a reference to the page header section of the report. 
            </summary>
      <remarks>
            This property is equivalent to this[SectionTypeEnum.PageHeader].
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.SectionCollection.PageFooter">
      <summary>
            Returns a reference to the page footer section of the report. 
            </summary>
      <remarks>
            This property is equivalent to this[SectionTypeEnum.PageFooter].
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.SubSection">
      <summary>
            Represents a band within a <see cref="T:C1.Win.FlexReport.Section" />.
            Each <see cref="T:C1.Win.FlexReport.Section" /> contains at least one SubSection.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SubSection.AssignFrom(C1.Win.FlexReport.ReportObject,System.Boolean)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.FlexReport.SubSection" /> to the current object.
            This method does not copy fields belongs to source SubSection.
            </summary>
      <param name="source">The source object to copy properties from.</param>
      <param name="assignName">Indicates whether name should be assigned.</param>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.SplitBehavior">
      <summary>
            Gets or sets a value determining how the sub-section behaves
            when it is too high to fit in the vertical space available on the current page.
            </summary>
      <seealso cref="!:SplitHorzBehavior" />
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.ForcePageBreak">
      <summary>
            Gets or sets a value determining whether page breaks should be inserted before and/or after the sub-section.
            </summary>
      <seealso cref="T:C1.Win.FlexReport.ForcePageBreakEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.Fields">
      <summary>
            Gets a collection of all fields in this <see cref="T:C1.Win.FlexReport.SubSection" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.Index">
      <summary>
            Gets the index of the <see cref="T:C1.Win.FlexReport.SubSection" /> in the containing <see cref="P:C1.Win.FlexReport.Section.SubSections" /> collection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.ParentSection">
      <summary>
            Gets a <see cref="T:C1.Win.FlexReport.Section" /> object owning this <see cref="T:C1.Win.FlexReport.SubSection" /> object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.Height">
      <summary>
            Gets or sets the <see cref="T:C1.Win.FlexReport.SubSection" /> height, in twips.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.Visible">
      <summary>
            Specifies whether the <see cref="T:C1.Win.FlexReport.SubSection" /> will be rendered in the report.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.AutoHeight">
      <summary>
            Gets or sets a value determining how the height of the sub-section changes depending on its content.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.PrintAtPageBottom">
      <summary>
            For master report's sub-sections only, gets or sets a value
            indicating whether the current sub section should print at the bottom
            of the page immediately above the page footer, rather than right
            below the detail. The default is <b>false</b>.
            <para>
            This property is ignored for non-footer sections or for footers
            of sub-reports.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.Calculated">
      <summary>
            Gets a value indicating whether the current sub-section has already been calculated and its
            <see cref="P:C1.Win.FlexReport.SubSection.RenderHeight" /> property contains a valid value.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.SubSection.RenderHeight">
      <summary>
            Returns the height of the sub-section after the <see cref="P:C1.Win.FlexReport.SubSection.AutoHeight" />
            property has been applied to the section.
            Getting this property can throw an exception if the height of sections was not calculated yet,
            for example if you access the RenderHeight of the report footer while the report header is being rendered.
            </summary>
      <remarks>
        <para>When a sub-section grows or shrinks, its <see cref="P:C1.Win.FlexReport.SubSection.Height" /> property does not change.</para>
        <para>If you need to retrieve the actual height that will be used to rendering the sub-section 
            (for example in the <see cref="!:OnPrint" /> event), use the <see cref="P:C1.Win.FlexReport.SubSection.RenderHeight" /> 
            property instead.</para>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.SubSectionCollection">
      <summary>
            Represents collection of the <see cref="T:C1.Win.FlexReport.SubSection" /> objects.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.SubSectionCollection.Add">
      <summary>
            Adds a <see cref="T:C1.Win.FlexReport.SubSection" /> object to the collection.
            </summary>
      <returns>Returns added <see cref="T:C1.Win.FlexReport.SubSection" /> object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.SubSectionCollection.RemoveAt(System.Int32)">
      <summary>
            Removes item with specified index from the collection.
            </summary>
      <param name="index">The index of item to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.SubSectionCollection.Remove(C1.Win.FlexReport.SubSection)">
      <summary>
            Removes a <see cref="T:C1.Win.FlexReport.SubSection" /> object from collection.
            </summary>
      <param name="item">The <see cref="T:C1.Win.FlexReport.SubSection" /> object to remove.</param>
    </member>
    <member name="T:C1.Win.FlexReport.DbUtils">
      <summary>
            For internal use.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.IOrderedDictionary`2.Add(`0,`1)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.IOrderedDictionary`2.Insert(System.Int32,`0,`1)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.Add(`0,`1)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.Remove(`0)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.Insert(System.Int32,`0,`1)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.RemoveAt(System.Int32)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.Clear" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.ContainsKey(`0)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.IndexOfKey(`0)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.TryGetValue(`0,`1@)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#Specialized#IOrderedDictionary#Insert(System.Int32,System.Object,System.Object)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Add(`0,`1)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#IDictionary#Contains(System.Object)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#IDictionary#Remove(System.Object)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.ConvertToKeyType(System.Object)" -->
    <!-- Badly formed XML comment ignored for member "M:C1.Win.FlexReport.Util.OrderedDictionary`2.ConvertToValueType(System.Object)" -->
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.Util.OrderedDictionary`2.IsReadOnly" -->
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.Util.OrderedDictionary`2.Keys" -->
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.Util.OrderedDictionary`2.Values" -->
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.Util.OrderedDictionary`2.Count" -->
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#IDictionary#IsFixedSize" -->
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#IDictionary#Keys" -->
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#IDictionary#Values" -->
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#ICollection#IsSynchronized" -->
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.Util.OrderedDictionary`2.System#Collections#ICollection#SyncRoot" -->
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.Util.OrderedDictionary`2.Dictionary" -->
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.Util.OrderedDictionary`2.List" -->
    <member name="T:C1.Win.FlexReport.PictureHolderType">
      <summary>
            For internal use.
            Defines possible values of the <see cref="P:C1.Win.FlexReport.PictureHolder.Type" /> property.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.PictureHolder">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.PictureHolder.ToString">
      <summary>
            Gets a string that represents this <see cref="T:C1.Win.FlexReport.PictureHolder" />.
            </summary>
      <returns>A string that represents this <see cref="T:C1.Win.FlexReport.PictureHolder" />.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.PictureHolder.FromObject(System.Object,System.String)">
      <summary>
            Creates a new instance of the <see cref="T:C1.Win.FlexReport.PictureHolder" /> from a specified object.
            Object can be:
            <list type="bullet"><item><term>Null value</term><description>An empty PictureHolder will be created.</description></item><item><term>String</term><description>
            String represents an expression, a file or an url.
            </description></item><item><term><see cref="T:System.Drawing.Image" /> object.</term></item><item><term><see cref="T:C1.Win.FlexReport.PictureHolder" /> object.</term></item><item><term>Byte array.</term><description>Array containing the image data.</description></item></list></summary>
      <remarks>
            The following rules are used when the object is a string:
            <para>
            If the string starts with "=" or "[", it is interpretted as an expression,
            and the actual image will be resolved when the report executes.
            </para><para>
            String is interpretted as a file name. The file name can be relative or absolute.
            If it is relative, then the following base paths are tried in order:
            <paramref name="basePath" />, <see cref="P:C1.Win.FlexReport.C1FlexReport.DefaultBasePath" />,
            <see cref="P:System.Environment.CurrentDirectory" />.
            </para><para>
            String is interpretted as a URL. The URL can be relative or absolute.
            If it is relative, then the following base paths are tried in order:
            <paramref name="basePath" />, <see cref="P:C1.Win.FlexReport.C1FlexReport.DefaultBasePath" /> and 
            <see cref="P:System.Environment.CurrentDirectory" />.
            </para></remarks>
      <param name="value">The value providing data for the new <see cref="T:C1.Win.FlexReport.PictureHolder" /> object.</param>
      <param name="basePath">The base path for resolving a relative file name.</param>
      <returns>The new instance of the PictureHolder type.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.PictureHolder.FromExpression(System.String)">
      <summary>
            Creates a new instance of the <see cref="T:C1.Win.FlexReport.PictureHolder" /> based on script expression.
            </summary>
      <param name="expression">The string with script expression.</param>
      <returns>
        <see cref="T:C1.Win.FlexReport.PictureHolder" /> object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.PictureHolder.FromFile(System.String,System.String)">
      <returns>
        <see cref="T:C1.Win.FlexReport.PictureHolder" /> object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.PictureHolder.FromUrl(System.String,System.String)">
      <returns>
        <see cref="T:C1.Win.FlexReport.PictureHolder" /> object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.PictureHolder.op_Implicit(C1.Win.FlexReport.PictureHolder)~System.Drawing.Image">
      <summary>
            Converts a <see cref="T:C1.Win.FlexReport.PictureHolder" /> object into an <see cref="P:C1.Win.FlexReport.PictureHolder.Image" /> object.
            </summary>
      <param name="picHolder">The <see cref="T:C1.Win.FlexReport.PictureHolder" /> object.</param>
      <returns>An <see cref="P:C1.Win.FlexReport.PictureHolder.Image" /> object.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.PictureHolder.Image">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.PictureHolder.Image" /> loaded by this <see cref="T:C1.Win.FlexReport.PictureHolder" />.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.ResourceNameParser">
      <summary>
            For internal use.
            Helper class allowing to work with resources specified by a file name or a URL.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.ResourceNameParser.Open(System.String,System.String)">
      <summary>
            For internal use.
            Tries to parse specified <paramref name="location" /> string as file name or URL
            and opens its stream.
            <paramref name="location" /> can be relative or absolute, if it is relative then
            absolute path calculated with using base paths in following order:
            -) <paramref name="basePath" />
            -) <see cref="P:C1.Win.FlexReport.C1FlexReport.DefaultBasePath" />
            -) <see cref="!:Enviroment.CurrentDirectory" />
            Returned <see cref="T:C1.Win.FlexReport.ResourceNameParser" /> object should be disposed after using,
            result can be null if location can not be parsed.
            </summary>
      <param name="location">
      </param>
      <param name="basePath">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:C1.Win.FlexReport.ResourceNameParser.Stream">
      <summary>
            Gets the <see cref="P:C1.Win.FlexReport.ResourceNameParser.Stream" /> object containing resource's data.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.FileNameParser">
      <summary>
            For internal use.
            Helper class used to parse a string as a file name, the file name can be relative or absolute.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.FileNameParser.ReplaceSpecialFolderTags(System.String,System.String)">
      <summary>
            For internal use.
            Replaces special tags in passed string, tags should be specified as:
            ?(specialfolder.SpecialFolderEnumMember), for example
            input:
            ?(specialfolder.MyDocuments)\myfile.bmp
            will be conerted to:
            c:\Users\UserName\Documents\myfile.bmp
            </summary>
      <param name="input">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.FileNameParser.Open(System.String,System.String,System.Boolean)">
      <summary>
            For internal use.
            Tries to interprett <paramref name="location" /> as file name relative or absolute,
            relative file names are resolved same as in <see cref="M:C1.Win.FlexReport.ResourceNameParser.Open(System.String,System.String)" /> method.
            </summary>
      <param name="fileName">
      </param>
      <param name="path">
      </param>
      <param name="openStream">Indicates whether the file specified by <paramref name="location" /> should be opened, true by default.</param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.FlexReport.UrlParser">
      <summary>
            For internal use.
            Helper class used to parse a string as a URL, the file name can be relative or absolute.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.UrlParser.Open(System.String,System.String)">
      <summary>
            For internal use.
            Tries to interprett <paramref name="location" /> as URL relative or absolute,
            relative URLs are resolved same as in <see cref="M:C1.Win.FlexReport.ResourceNameParser.Open(System.String,System.String)" /> method.
            </summary>
      <param name="location">
      </param>
      <param name="basePath">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.FlexReport.StringParser">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.ContainsIdent(System.String,System.String)">
      <summary>
            Checks whether specified ident exists in the string.
            Method uses <see cref="F:C1.Win.FlexReport.StringParser.Params.DefaultIgnoreCase" />.
            </summary>
      <param name="s">String to check.</param>
      <param name="ident">Ident to check.</param>
      <returns>Returns <b>true</b> if ident used, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.IndexOfIndent(System.String,System.String,C1.Win.FlexReport.StringParser.Params)">
      <summary>
            Returns index of identifier in the string.
            Identifier can be in quotes and should start with '_' or letter and should
            contains only '_', letters, numbers.
            </summary>
      <param name="s">
      </param>
      <param name="ident">
      </param>
      <param name="prms">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.ReplaceIdent(System.String,System.String,System.String,C1.Win.FlexReport.StringParser.Params)">
      <summary>
            Replaces identifier with specified string. 
            All text within quotes is ignored, chars which defines quotes specified in the prms.Quotes array,
            set it to null if you want replace identifier even if it is within quotes.
            </summary>
      <param name="s">
      </param>
      <param name="ident">
      </param>
      <param name="newStr">
      </param>
      <param name="prms">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.Bracket(System.String)">
      <summary>
            For internal use.
            </summary>
      <param name="s">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.IsBracket(System.String)">
      <summary>
            For internal use.
            </summary>
      <param name="s">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.Unbracket(System.String)">
      <summary>
            For internal use.
            </summary>
      <param name="s">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.FlexReport.StringParser.BracketSqlObject(System.String)">
      <summary>
            For internal use.
            </summary>
      <param name="s">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.FlexReport.WatermarkVisibility">
      <summary>
            Specifies where watermark or overlay is displayed.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.WatermarkVisibility.Hidden">
      <summary>
            Do not show watermark or overlay.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.WatermarkVisibility.AllPages">
      <summary>
            Show watermark or overlay on all pages.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.WatermarkVisibility.FirstPage">
      <summary>
            Show watermark or overlay on first page only.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.WatermarkVisibility.AllButFirstPage">
      <summary>
            Show watermark or overlay on all pages but the first.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Watermark">
      <summary>
            Represents a watermark or an overlay in a <see cref="T:C1.Win.FlexReport.C1FlexReport" />.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Watermark.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Watermark.AssignFrom(C1.Win.FlexReport.Watermark)">
      <summary>
            Copies properties from another object into this object.
            </summary>
      <param name="source">The source object, properties of which are copied.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Watermark.Reset">
      <summary>
            Resets all properties of this Watermark object to default values.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.Visibility">
      <summary>
            Gets or sets a value indicating on which pages this watermark or overlay is visible.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.Picture">
      <summary>
            Gets or sets a picture shown by this watermark or overlay.
            Note that if the picture is not empty, <see cref="P:C1.Win.FlexReport.Watermark.Text" /> is ignored.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.PictureAlign">
      <summary>
            Gets or sets the alignment of the <see cref="P:C1.Win.FlexReport.Watermark.Picture" /> within a page.
            </summary>
      <seealso cref="P:C1.Win.FlexReport.Watermark.Picture" />
      <seealso cref="P:C1.Win.FlexReport.Watermark.PictureScale" />
      <seealso cref="T:C1.Win.FlexReport.PictureAlignEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.PictureScale">
      <summary>
            Gets or sets a value indicating how <see cref="P:C1.Win.FlexReport.Watermark.Picture" /> is scaled within the page.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.Text">
      <summary>
            Gets or sets a text shown by this watermark or overlay.
            Ignored if a <see cref="P:C1.Win.FlexReport.Watermark.Picture" /> is specified.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.WritingMode">
      <summary>
            Gets or sets the text writing mode: horizontal (default), vertical with left to right flow, etc.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.Align">
      <summary>
            Gets or sets a value determining how text is aligned within a page.
            </summary>
      <seealso cref="T:C1.Win.FlexReport.FieldAlignEnum" />
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.ForeColor">
      <summary>
            Gets or sets the text color.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.TextAngle">
      <summary>
            Gets or sets the text rotation angle, in degrees counterclockwise.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.WordWrap">
      <summary>
            Gets or sets a value indicating whether automatic word wrapping is on.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.Font">
      <summary>
            Gets or sets the text font.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.LineSpacing">
      <summary>
            Gets or sets the text line spacing, in percent.
            The default is 100 which corresponds to normal line spacing.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.TextFitMode">
      <summary>
            Gets or sets a value indicating how text fits in page bounds.
            If this is not None, WordWrap is ignored.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Watermark.Opacity">
      <summary>
            Gets or sets the opacity of this watermark or overlay, from 0 (transparent) to 1 (opaque).
            This property works only for text watermaks or overlays.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DArea">
      <summary>
            Represents the chart area of the chart.
            </summary>
      <remarks>
            This area includes all axes and the charted data.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartRect">
      <summary>
            Represents a rectangular chart element.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartObject">
      <summary>
            The abstract base class for chart objects. 
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartObject.OnPropertyChanged(System.String)">
      <summary>
            Notify one property is changed.
            </summary>
      <param name="propertyName">The name of the property which is changed.</param>
    </member>
    <member name="E:C1.Win.FlexReport.Chart.ChartObject.PropertyChanged">
      <summary>
            Occurs when a property value changes.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRect.Visible">
      <summary>
            Gets or sets the visibility of the element.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRect.Location">
      <summary>
            Gets or sets the location of the element.
            </summary>
      <remarks>
            Specifies the location of the upper left corner of the chart element it describes.
            Non-negative values indicate the explicit position in chart client coordinates.
            Negative values will autopositioning.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRect.Size">
      <summary>
            Gets or sets the size of the element.
            </summary>
      <remarks>
            Specifies the size of the chart element it describes.
            Non-negative values indicate explicit width and height in chart client coordinates.
            Negative values will allow autopositioning.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.Style">
      <summary>
            Gets the style of the chart area.
            </summary>
      <remarks>
            Inherits from the <see cref="P:C1.Win.FlexReport.ChartField.DefaultStyle" />. The chart elements included within the Chart2DArea area, 
            including Axes and PlotArea innherit their styles from the Chart2DArea style.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.Inverted">
      <summary>
            Gets or sets whether the chart area is inverted.
            </summary>
      <remarks>
            This property is necessary for Inverted Bar charts. 
            Setting Inverted to True will invert the axes, 
            to reverse the Minimum and Maximum values of the ChartAxis, use the <see cref="P:C1.Win.FlexReport.Chart.Chart2DAxis.Reversed" /> property.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.AxisX">
      <summary>
            Gets the primary X-axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.AxisY">
      <summary>
            Gets the primary Y-axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.AxisY2">
      <summary>
            Gets the primary Y2-axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.PlotArea">
      <summary>
            Gets the Chart2DPlotArea object that describles the region where data is charted.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.MarginBottom">
      <summary>
            Gets or sets the bottom margin of chart area in twips.
            -1 will allow for margin auto-positioning.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.MarginLeft">
      <summary>
            Gets or sets the left margin of chart area in twips.
            -1 will allow for margin auto-positioning.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.MarginRight">
      <summary>
            Gets or sets the right margin of chart area in twips.
            -1 will allow for margin auto-positioning.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DArea.MarginTop">
      <summary>
            Gets or sets the top margin of chart area in twips.
            -1 will allow for margin auto-positioning.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DPlotArea">
      <summary>
            Represents the plot area of the chart.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ShouldSerializeBackColor">
      <summary>
            Returns false if the BackColor property is in the default state.
            The default state is to inherit the BackColor from the Chart2DArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ResetBackColor">
      <summary>
            Resets the BackColor property to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ShouldSerializeBackColor2">
      <summary>
            Returns false if the BackColor2 property is in the default state.
            The default state is to inherit the BackColor2 from the Chart2DArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ResetBackColor2">
      <summary>
            Resets the BackColor2 property to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ShouldSerializeForeColor">
      <summary>
            Returns false if the ForeColor property is in the default state.
            The default state is to inherit the ForeColor from the Chart2DArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ResetForeColor">
      <summary>
            Resets the ForeColor property to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ShouldSerializeGradientStyle">
      <summary>
            Returns false if the GradientStyle property is in the default state.
            The default state is to inherit the GradientStyle from the Chart2DArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ResetGradientStyle">
      <summary>
            Resets the GradientStyle property to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ShouldSerializeHatchStyle">
      <summary>
            Returns false if the HatchStyle property is in the default state.
            The default state is to inherit the HatchStyle from the Chart2DArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ResetHatchStyle">
      <summary>
            Resets the HatchStyle property to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ShouldSerializeOpaque">
      <summary>
            Returns false if the Opqaue property is in the default state.
            The default state is to inherit the Opaque from the Chart2DArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DPlotArea.ResetOpaque">
      <summary>
            Resets the Opaque properyt to default state.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.AlarmZones">
      <summary>
            Gets the collection of ChartAlarmZone.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.Boxed">
      <summary>
            Gets or sets whether the plot area is enclosed in a box (solid border).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.UseAntiAlias">
      <summary>
            Gets or sets whether to use anti-aliasing while rendering chart data.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.View3D">
      <summary>
            Gets the Chart2DView3D object of the plot area.
            The returned Chart2DView3D object has properties which are used to set 3D aspects of the plot area for charts with 3D effects.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.BackColor">
      <summary>
            Gets or sets the background color of the plot area.
            Inherits from the chart area.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.BackColor2">
      <summary>
            Gets or sets the second background color for gradient or hatch style.
            Inherits from the chart area.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.ForeColor">
      <summary>
            Gets or sets the foreground color of the plot area.
            Inherits from the chart area.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.GradientStyle">
      <summary>
            Gets or sets the type of gradient background filling.
            Inherits from the chart area.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.HatchStyle">
      <summary>
            Gets or sets the type of hatch background filling.
            Inherits from the chart area.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DPlotArea.Opaque">
      <summary>
            Gets or sets whether the plot area background is opaque.
            Inherits from the chart area.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DView3D">
      <summary>
            Represents the three-dimensional features of a chart. 
            When used in conjunction with <see cref="P:C1.Win.FlexReport.Chart.Chart2DGroup.Use3D" />, these properties are used to produce 3D effects for Area, Bar, Pie and XYPlot charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DView3D.Depth">
      <summary>
            Gets or sets the apparent chart depth as a percentage of chart width.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DView3D.Elevation">
      <summary>
            Gets or sets the apparent degree of inclination of the eye-point above the X-axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DView3D.Rotation">
      <summary>
            Gets or sets the apparent degree of rotation of the eye-point to the right of the Y-axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DView3D.Shading">
      <summary>
            Gets or sets the type of shading applied to 3D areas of the chart.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAxis">
      <summary>
            The base class for axes of the 2D and 3D chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AxisID">
      <summary>
            Gets the kind (X, Y, Y2 or Z) of the axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.Name">
      <summary>
            Gets the name (X, Y, Y2 or Z) of the axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AnnoFormat">
      <summary>
            Gets or sets the annotation format for the axis.
            </summary>
      <remarks>
        <para>
            The AnnoFormat property allow specification of numeric and date/time formats using enumerated values.
            </para>
        <para>
            For numeric values, each of the enumerations specify formatting similar to that specified
            by the .Net <see cref="T:System.Globalization.NumberFormatInfo" />, including Currency, General, Exponential, Percentage,
            Roundtrip and Hexadecimal.  NumericManual is used in conjunction with the AnnoFormatString property
            to specify a custom format string.
            </para>
        <para>
            For date/time values, each of the enumerations specify formatting similar to that specified
            by the .Net <see cref="T:System.Globalization.DateTimeFormatInfo" /> class, including combinations of long
            and short dates and times, and universal time representations.  DateManual is used in conjunction
            with the AnnoFormatString property to specify a custom format string.
            </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AnnoFormatString">
      <summary>
            Gets or sets the annnotation format string used with manual formats.
            </summary>
      <remarks>
        <para>
            Only used when <see cref="P:C1.Win.FlexReport.Chart.ChartAxis.AnnoFormat" /> property is NumericManual or DateManual.
            The AnnoFormatString property specifies a custom string for formatting the annotations along the axis.
            </para>
        <para>
            When the AnnoFormat property is NumericManual, the AnnoFormatString property can be set to format
            strings as described by the .Net double.ToString(AnnoFormatString) method call.
            Custom numeric format strings are described in detail by the .Net documentation under
            "Custom Numeric Format Strings".  If the AnnoFormatString property is empty, then "g" or General is used.
            </para>
        <para>
            When the AnnoFormat property is DateManual, the AnnoFormatString property can be set to format
            string as described by the .Net DateTime.ToString(AnnoFormatSTring) method call.
            Custom DateTime format strings are described in detail by the .Net documentation 
            under "Date and Time Format Strings".  If the AnnoFormatString property is empty,
            then ChartField selects a format string appropriate for the time span defined by the axis maximum and minimum values.
            </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AutoMajor">
      <summary>
            Gets or sets whether major tick mark values are calcualted automatically.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AutoMinor">
      <summary>
            Gets or sets whether minor tick mark values are calculated automatically.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AutoMax">
      <summary>
            Gets or sets whether the axis maximum value is calculated automatically.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.AutoMin">
      <summary>
            Gets or sets whether the axis minimum value is calculated automatically.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.Max">
      <summary>
            Gets or sets the maximum value of the axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.Min">
      <summary>
            Gets or sets the minimum value of the axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.UnitMajor">
      <summary>
            Gets or sets the units between major tick marks.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.UnitMinor">
      <summary>
            Gets or sets the units between minor tick marks.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.Visible">
      <summary>
            Gets or sets the axis visibility.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAxis.Title">
      <summary>
            Gets or sets the textual caption of the axis.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DAxis">
      <summary>
            Represents an axis of a 2D chart.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ShouldSerializeVerticalText">
      <summary>
            Returns false if the VerticalText property is in the default state.
            The default state is to inherit the VerticalText from the Chart2DArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ResetVerticalText">
      <summary>
            Resets the VerticalText property to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ShouldSerializeRotation">
      <summary>
            Returns false if the Rotation property is in the default state.
            The default state is to inherit the Rotation from the Chart2DArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ResetRotation">
      <summary>
            Resets the Rotation property to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ShouldSerializeForeColor">
      <summary>
            Returns false if the ForeColor property is in the default state.
            The default state is to inherit the ForeColor from the Chart2DArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ResetForeColor">
      <summary>
            Resets the ForeColor property to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ShouldSerializeFont">
      <summary>
            Returns false if the Font property is in the default state.
            The default state is to inherit the Font from the Chart2DArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DAxis.ResetFont">
      <summary>
            Resets the Font property to default state.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Compass">
      <summary>
            Gets or sets the general positioning of the axis.
            X may be set to North/South, Y and Y2 may be set to East/West.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.AutoOrigin">
      <summary>
            Gets or sets whether the axis origin is caculated automatically.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Origin">
      <summary>
            Gets or sets the axis origin, the value on axis where the perpendicular axis is rendered.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:C1.Win.FlexReport.Chart.Chart2DAxis.AnnoVerticalText" -->
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.AnnoMethod">
      <summary>
            Gets or sets the method of annotation.
            </summary>
      <remarks>
            Chart2DAnnotationMethodEnum has three possible values, Auto, ValueLabels or Values.
            Values annotation can be used with any chart type in any instance.
            ValueLablels annotation cannot be used on the X-axis and the Y-axis for Pie charts.
            Auto annotation will use Values annotation (numeric chart) or ValueLabels (category chart) annotation automatically for different chart types.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.AnnoRotation">
      <summary>
            Gets or sets the clockwise angle of rotation for the axis annotations, in degrees.
            </summary>
      <remarks>
            Rotations between +/- 30 to +/- 60 degrees
            are ideal for X-axis annotation when a large number of labels are desired. 
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.IsLogarithmic">
      <summary>
            Gets or sets a value indicating whether the axis is scaled logarithmically.
            </summary>
      <remarks>
            Logarithmic scaling does not make mathematical sense when values are less than or equal to zero.
            Therefore, negative and zero values are not plotted against axes that have the IsLogarithmic property set to true.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.GridMajor">
      <summary>
            Gets the major grid lines object.
            Major grids are placed coincident with major tick marks at <see cref="P:C1.Win.FlexReport.Chart.ChartAxis.UnitMajor" /> intervals.
            The GridMajor property is used to set the grid line appearance. 
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.GridMinor">
      <summary>
            Gets the minor grid lines object.
            Minor grids are placed coincident with minor tick marks at <see cref="P:C1.Win.FlexReport.Chart.ChartAxis.UnitMinor" /> intervals.
            The GridMinor property is used to set the grid line appearance. 
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.LogarithmicBase">
      <summary>
            Gets or sets the base of the logarithmic scale used.
            Less than or equal to 1 specifies natural logs.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.NoAnnoOverlap">
      <summary>
            Gets or sets a value indicating whether axis annotations are permitted to overlap.
            </summary>
      <remarks>
            Setting NoAnnoOverlap suppresses the drawing of any axis annotation that would
            overlap a previously drawn annotation regardless of the reason for the overlap.
            This property does not change scaling or generation of major and minor tick marks.
            The property is not normally required for applications with AutoMajor set to true.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.OnTop">
      <summary>
            Gets or sets a value indicating whether axis and gridlines appear on top of the chart image.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Reversed">
      <summary>
            Gets or sets a value indicating whether the axis is normal or reversed (ascending or descending).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Thickness">
      <summary>
            Gets or sets the line thickness of the axis in twips.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.TickFactorMajor">
      <summary>
            Gets or sets an integral factor for major tick mark length.
            </summary>
      <remarks>
            Tick marks are sized based on the thickness of the axis line as well as
            the tick factor. Doubling the tick factor doubles the length of the axis
            tick mark.  Values are limited to integers from 1 to 20.  Values outside
            of this range are ignored.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.TickFactorMinor">
      <summary>
            Gets or sets an integral factor for minor tick mark length.
            </summary>
      <remarks>
            Tick marks are sized based on the thickness of the axis line as well as
            the tick factor. Doubling the tick factor doubles the length of the axis
            tick mark.  Values are limited to integers from 1 to 20.  Values outside
            of this range are ignored.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.TickGauge">
      <summary>
            Gets or sets the approximate number of intervals delineated by gauge marks between major tick marks.
            </summary>
      <remarks>
            Gauge marks are oversized minor tick marks used to subdivide minor ticks
            for easy reading.  Use 0 for none (default), 1 for automatic and &gt; 1
            for approximate number of sections of minor tick marks delimited by gauge marks
            between each set of major tick marks.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.TickLabels">
      <summary>
            Gets or sets the placement of the annotation labels relative to the axis.
            Axis annotations can be placed on the chart in several positions or not at all.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.TickMajor">
      <summary>
            Gets or sets the type of major tick mark.
            </summary>
      <remarks>
            Tick marks can be place on either side or both sides of the axis line.
            Note that if the TickMajor property is set to <see cref="F:C1.Win.FlexReport.Chart.Chart2DTickMarks.None" />
            then major tick marks are not drawn.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.TickMinor">
      <summary>
            Gets or sets the type of minor tick mark.
            </summary>
      <remarks>
            Tick marks can be placed on either side or both sides of the axis line.
            Note that if the TickMinor property is set to <see cref="F:C1.Win.FlexReport.Chart.Chart2DTickMarks.None" />,
            then minor tick marks are not drawn.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.ValueLabels">
      <summary>
            Gets the Chart2DValueLabels collection for this axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.VerticalText">
      <summary>
            Gets or sets a value indicating whether the label text is displayed vertically.
            </summary>
      <remarks>
            Inherits from the chart area.
            VerticalText allows some double byte characters to be rendered from top to bottom instead of left to right. 
            For single byte characters VerticalText appears as rotated text, 90 degrees in the clockwise direction.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Rotation">
      <summary>
            Gets or sets the rotational orientation of the textual caption of the axis.
            Inherits from the chart area.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.ForeColor">
      <summary>
            Gets or sets the foreground color.
            Inherits from the chart area.
            The ForeColor is used to set the color of the axis line and annotations.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Font">
      <summary>
            Gets or sets the FontHolder object.
            Inherits from the chart area.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DAxis.Alignment">
      <summary>
            Gets or sets the text alignment within the axis display.
            Inherits from chart area.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DGridStyle">
      <summary>
            Represents the appearance of gridlines in a chart.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLineStyle">
      <summary>
            Represents the style of chart lines.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLineStyle.Color">
      <summary>
            Gets or sets the line color.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLineStyle.Pattern">
      <summary>
            Gets or sets the line pattern.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLineStyle.Thickness">
      <summary>
            Gets or sets the line thickness, in twips.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLineStyle.LineJoin">
      <summary>
            Gets or sets the line join style.
            </summary>
      <remarks>
            The default value is appropriate for most situations.  
            Lower MiterLimit values or LineJoin.Round might be appropriate for thick lines.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLineStyle.MiterLimit">
      <summary>
            Gets or sets the miter limit of line joins.
            </summary>
      <remarks>
            The default value is appropriate for most situations.  
            Lower values might be appropriate for thick lines.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGridStyle.AutoSpacing">
      <summary>
            Gets or sets a value indicating whether gridline spacing is calculated automatically.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGridStyle.Spacing">
      <summary>
            Gets or sets gridline spacing in data coordinate units.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGridStyle.Visible">
      <summary>
            Gets or sets the grid line visibility.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DValueLabelsCollection">
      <summary>
            Represents a collection of Chart2DValueLabel objects 
            used to define the appearance of the value labels for the X, Y, and Y2 axes of the chart area.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartObjectCollection`1">
      <summary>
            Represents a collection of <see cref="T:C1.Win.FlexReport.Chart.ChartObject" /> objects.
            </summary>
      <typeparam name="T">The type of elements in the collection.</typeparam>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartObjectCollection`1.AssignFrom(C1.Win.FlexReport.Chart.ChartObjectCollection{`0})">
      <summary>
            Assigns (copies) items from another ChartObjectCollection to the current collection.
            </summary>
      <param name="source">The source collection to copy items from.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartObjectCollection`1.Contains(`0)">
      <summary>
            Determines whether the collection contains a specific item.
            </summary>
      <param name="item">The item to check.</param>
      <returns>True if the collection contains specified item; false otherwise.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartObjectCollection`1.IndexOf(`0)">
      <summary>
            Gets the index of the element.
            </summary>
      <param name="item">The element.</param>
      <returns>The zero-based index of element or -1 if element does not exist in the collection.</returns>
    </member>
    <member name="E:C1.Win.FlexReport.Chart.ChartObjectCollection`1.CollectionChanged">
      <summary>
            Occurs when the collection or its item has changed.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartObjectCollection`1.Item(System.Int32)">
      <summary>
            Gets the element at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to get.</param>
      <returns>The element at specified index.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartObjectCollection`1.Count">
      <summary>
            Gets the number of elements in the collection.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DValueLabelsCollection.Add(C1.Win.FlexReport.Chart.Chart2DValueLabel)">
      <summary>
            Add an existing value label into the collection.
            </summary>
      <param name="label">The value label to add.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DValueLabelsCollection.AddNewLabel">
      <summary>
            Add a new value label into the collection.
            </summary>
      <returns>The new added value label.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DValueLabelsCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the value label at the specific index.
            </summary>
      <param name="index">The index of the value label to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DValueLabelsCollection.Remove(C1.Win.FlexReport.Chart.Chart2DValueLabel)">
      <summary>
            Remove an existing value label from the collection.
            </summary>
      <param name="label">The value label to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart2DValueLabelsCollection.Clear">
      <summary>
            Remove all items from the collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartValueLabel">
      <summary>
            Represents a chart axis annotation used for displaying text defined at a specific axis coordinate.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartValueLabel.Value">
      <summary>
            Gets or sets the axis value to be replaced by the ChartValueLabel by specifying a value that can be implicitly converted to double.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartValueLabel.Text">
      <summary>
            Gets or sets the displayed text value for the ChartValueLabel.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DValueLabel">
      <summary>
            Represents a 2D chart axis annotation used for displaying text defined at a specific axis coordinate.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DValueLabel.Appearance">
      <summary>
            Gets or sets the appearance of Chart2DValueLabel.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DValueLabel.BackColor">
      <summary>
            Get or sets the background color of Chart2DValueLabel.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DValueLabel.Color">
      <summary>
            Get or sets the color of Chart2DValueLabel.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DValueLabel.GridLine">
      <summary>
            Gets or sets a value indicating whether a grid line is drawn at the Chart2DValueLabel.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DValueLabel.MarkerSize">
      <summary>
            Gets or sets the marker size of Chart2DValueLabel, in twips.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAlarmZonesCollection">
      <summary>
            Represents a collection which stores bands or shapes for plotting.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZonesCollection.Add(C1.Win.FlexReport.Chart.ChartAlarmZone)">
      <summary>
            Add an existing alarm zone into the collection.
            </summary>
      <param name="alarmZone">The data value to add.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZonesCollection.AddNewAlarmZone">
      <summary>
            Add a new alarm zone into the collection.
            </summary>
      <returns>The new added data value.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZonesCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the alarm zone at the specific index.
            </summary>
      <param name="index">The index of the alarm zone to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZonesCollection.Remove(C1.Win.FlexReport.Chart.ChartAlarmZone)">
      <summary>
            Remove an existing alarm zone from the collection.
            </summary>
      <param name="alarmZone">The alarm zone to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZonesCollection.Clear">
      <summary>
            Remove all items from the collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAlarmZone">
      <summary>
            Represents a series of bands or shapes that can be placed behind the plotted area, but in front of the chart background.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZone.ShouldSerializeBackColor">
      <summary>
            Returns false if the BackColor property is in the default state.
            The default state is to inherit the BackColor from the Chart2DPlotArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZone.ResetBackColor">
      <summary>
            Resets the BackColor property to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZone.ShouldSerializeForeColor">
      <summary>
            Returns false if the ForeColor property is in the default state.
            The default state is to inherit the ForeColor from the Chart2DPlotArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartAlarmZone.ResetForeColor">
      <summary>
            Resets the ForeColor property to default state.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.BackColor">
      <summary>
            Gets or sets the background color of the ChartAlarmZone.
            <para>
            Inherits from plot area. A ChartAlarmZone always displays the BackColor when showing the zone.
            If a Pattern is used, the ForeColor is also used to draw the pattern lines.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.ForeColor">
      <summary>
            Gets or sets the foreground color of the ChartAlarmZone.
            <para>
            Inherits from plot area. A ChartAlarmZone always displays the BackColor when showing the zone.
            If a Pattern is used, the ForeColor is also used to draw the pattern lines.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.FarExtent">
      <summary>
            Gets or sets the far extent of the ChartAlarmZone in X-axis data coordinates.
            <para>
            Typically, the FarExtent is the larger X value in data coordinates
            that the ChartAlarmZone extends. If the FarExtent and NearExtent are both zero,
            then both are assumed to be the Max and Min values of the X-axis, respectively.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.NearExtent">
      <summary>
            Gets or sets the near extent of the ChartAlarmZone in X-axis data coordinates.
            <para>
            Typically, the NearExtent is the smaller X value in data coordinates
            that the ChartAlarmZone extends. If the FarExtent and NearExtent are both zero,
            then both are assumed to be the Max and Min values of the X-axis, respectively.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.UpperExtent">
      <summary>
            Gets or sets the upper extent of the ChartAlarmZone in Y-axis data coordinates.
            <para>
            Typically, the UpperExtent is the larger Y value in data coordinates
            that the ChartAlarmZone extends. If the UpperExtent and LowerExtent are both zero,
            then both are assumed to be the Max and Min values of the Y-axis, respectively.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.LowerExtent">
      <summary>
            Gets or sets the lower extent of the ChartAlarmZone in Y-axis data coordinates.
            <para>
            Typically, the LowerExtent is the smaller Y value in data coordinates
            that the ChartAlarmZone extends. If the UpperExtent and LowerExtent are both zero,
            then both are assumed to be the Max and Min values of the Y-axis, respectively.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.GroupIndex">
      <summary>
            Gets or sets the index of the data group of the ChartAlarmZone.
            <para>
            The group index indicates the Chart2DGroup for which the ChartAlarmZone extents
            specify the data coordinates of the ChartAlarmZone.  If the group index specifies
            a non-existent Chart2DGroup, the ChartAlarmZone is not drawn.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.MinHeight">
      <summary>
            Gets or sets the ChartAlarmZone minimum height, in twips.
            <para>
            If the height of the ChartAlarmZone is less than the specified value
            in twips, the ChartAlarmZone is drawn with the specified height.
            Applicable only for Cartesian charts and rectangular or elliptical
            shaped alarm zones.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.MinWidth">
      <summary>
            Gets or sets the ChartAlarmZone minimum width, in twips.
            <para>
            If the width of the ChartAlarmZone is less than the specified value
            in twips, the ChartAlarmZone is drawn with the specified width.
            Applicable only for Cartesian charts and rectangular or elliptical
            shaped alarm zones.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.Name">
      <summary>
            Gets or sets the name of the ChartAlarmZone.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.PatternStyle">
      <summary>
            Gets or sets the pattern style to be used if PatternVisible is true.
            The PatternStyle is penned in the ChartAlarmZone ForeColor.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.PatternVisible">
      <summary>
            Gets or sets a value indicating whether the specified PatternStyle should be used to brush the background of the ChartAlarmZone.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.Shape">
      <summary>
            Gets or sets the shape of the ChartAlarmZone.
            <para>
            A ChartAlarmZone of rectangle shape is specified by the rectangle bounded by
            the data coordinates specified by the extents of the ChartAlarmZone.
            </para><para>
            A ChartAlarmZone of elliptical shape is specified by the rectangle bounded by
            the data coordinates specified by the extents of the ChartAlarmZone.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAlarmZone.Visible">
      <summary>
            Gets or sets the visibility of the ChartAlarmZone.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DGroups">
      <summary>
            Represents information related to data values and appearance of the 2D chart groups.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroups.ReversedDraw">
      <summary>
            Gets or sets a value indicating whether the order in which the Chart2DGroups are normally drawn is reversed.
            <para>
            The normal order is Group1, then Group0.
            If this property is true the order is Group0, then Group1.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroups.Group0">
      <summary>
            Gets the foreground Chart2DGroup.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroups.Group1">
      <summary>
            Gets the background Chart2DGroup.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DGroup">
      <summary>
            Represents a 2D chart group which contains chart data and classes that control chart appearance.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.ChartType">
      <summary>
            Gets or sets the type of chart to display.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.AxisXType">
      <summary>
            Gets or sets the data type for AxisX.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Is100Percent">
      <summary>
            Gets or sets a value indicating whether the stacked chart is 100% chart. Applies only to line, bar and area charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.LegendReversed">
      <summary>
            Gets or sets a value indicating whether the order in which the series entries of each Chart2DGroup appear in the legend is reversed.
            <para>
            The series of each Chart2DGroup normally appear in index order in the legend.
            If this property is true, the series entries appear in reversed order.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Stacked">
      <summary>
            Gets or sets a value indicating whether the chart should stack the data (for appropriate chart types).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Use3D">
      <summary>
            Gets or sets a value indicating whether 3D effects are used for charting the data in the Chart2DGroup.
            </summary>
      <remarks>
            If Chart2DView3D data contains non-zero values for Depth, Rotation and Elevation,
            3D effects are added to various charts, including Area, Bar, Pie and XYPlot charts.
            However, the Use3D property for a Chart2DGroup can override the use of 3D effects,
            allowing one group to be presented with 3D effects and the other group to be charted without 3D effects.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Visible">
      <summary>
            Gets or sets a value indicating whether the Chart2DGroup is visible.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.ShowOutline">
      <summary>
            Gets or sets a value indicating whether figures drawn should be outlined in the Chart2DPlotArea ForeColor.
            Such figures include Bars, Pies, Areas, etc.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.OutlineColor">
      <summary>
            Gets or sets the color used to draw figure outlines.
            Such figures include Bars, Pies, Areas, etc.
            <para>
            By default, outlines are drawn in the PlotArea ForeColor.
            Set this to Transparent color to use the default Chart2DPlotArea ForeColor.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.ChartData">
      <summary>
            Gets the Chart2DData object containing the numerical series to be charted and display information for each series.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Pie">
      <summary>
            Gets the ChartPie object containing properties specific to Pie charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Bar">
      <summary>
            Gets the ChartBar object containing properties specific to Bar charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Polar">
      <summary>
            Gets the ChartPolar object containing properties specific to Polar charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Radar">
      <summary>
            Gets the ChartRadar object containing properties specific to Radar charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Bubble">
      <summary>
            Gets the ChartBubble object containing properties specific to Bubble charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Hilo">
      <summary>
            Gets the ChartHiLo object containing properties specific to Hi-Lo chart types, including Hi-Lo, Hi-Lo-Open-Close and Candle charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Gantt">
      <summary>
            Gets the ChartGantt object containing properties specific to Gantt charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DGroup.Histogram">
      <summary>
            Gets the ChartHistogram object containing properties specific to Histogram charts.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartPie">
      <summary>
            Represents properties specific to Pie charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPie.Clockwise">
      <summary>
            Gets or sets a value indicating whether each series is drawn in clockwise or counter-clockwise direction.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPie.InnerRadius">
      <summary>
            Gets or sets the inner radius used for doughnut charts.
            A value greater than zero specifies the percentage of the full pie radius used for the doughnut hole.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPie.OtherOffset">
      <summary>
            Gets or sets the offset value used to vary diameter of the pie within the charting area.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPie.Start">
      <summary>
            Gets or sets the starting angle of the first Pie slice, in degrees.
            The angle represents the arc between the most clockwise edge of the first slice 
            and the right horizontal radius of the pie, as measured in the counter-clockwise direction.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPie.LegendLayout">
      <summary>
            Gets or sets the append content of each legend item.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPie.SliceDetachment">
      <summary>
            Gets or sets a value indicating which slice would be detached from the single pie chart.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartBar">
      <summary>
            Represents properties specific to Bar charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.Appearance">
      <summary>
            Gets or sets the appearance of a bar chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.BarLineColor">
      <summary>
            Gets or sets the color used to render BarLines indicated by the BarLines property
            (only applies to stacked bar and column charts).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.BarLines">
      <summary>
            Gets or sets a value indicating whether 2D stacked bar and column charts render lines from common series rectangles from one point to the next.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.BarLineThickness">
      <summary>
            Gets or sets the thickness of bar lines indicated by the BarLines property, in twips.
            Only applies to stacked bar and column charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.ClusterOverlap">
      <summary>
            Gets or sets the percentage by which bar elements in the same cluster overlap.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.ClusterWidth">
      <summary>
            Gets or sets the percentage that each bar cluster occupies.
            The percentage applies to the closest clusters.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.MixedStacking">
      <summary>
            Gets or sets a value indicating whether bar charts with mixed positive and negative values display both stacks at each point. Always True for 3D bars.
            <para>If True, postive values are stacked above the origin and negative values are stacked below the origin.</para><para>If False, values are stacked by simple addition of values in series order.</para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBar.MultiRow">
      <summary>
            Gets or sets a value indicating whether the 3D bar chart is plotted using multiple rows.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartPolar">
      <summary>
            Represents properties specific to Polar charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPolar.Degrees">
      <summary>
            Gets or sets a value indicating whether the Start value is specified in degrees or radians.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPolar.Start">
      <summary>
            Gets or sets the starting angle, measured counter-clockwise from the 12 o'clock position.
            <para>The angle is measured in degrees if the Degrees property is true, radians otherwise.</para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartPolar.PiRatioAnnotation">
      <summary>
            Gets or sets a value indicating whether polar charts measured in radians should be annotated with Pi ratios.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartRadar">
      <summary>
            Represents properties specific to Radar charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRadar.Degrees">
      <summary>
            Gets or sets a value indicating whether the Start value is specified in degrees or radians.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRadar.Start">
      <summary>
            Gets or sets the starting angle, measured counter-clockwise from the 12 o'clock position.
            <para>The angle is measured in degrees if the Degrees property is true, radians otherwise.</para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRadar.Filled">
      <summary>
            Gets or sets a value indicating whether Radar charts should be filled.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRadar.FlatGridLines">
      <summary>
            Gets or sets a value indicating whether Radar charts should use flat Y coordinate gridlines. 
            By default, Y coordinate gridlines are circular.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartBubble">
      <summary>
            Represents properties specific to Bubble charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBubble.EncodingMethod">
      <summary>
            Gets or sets the method used for calculating bubble size in a bubble chart.
            </summary>
      <remarks>
        <para>
            The maximum and minimum bubble sizes represent the percentage of the diameter
            or area of the plot area, depending upon the value of the EncodingMethod property.
            </para>
        <para>
            At this time the Bubble Method is always based on the diameter.
            </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBubble.MaximumSize">
      <summary>
            Gets or sets the maximum bubble size in a bubble chart, as percentage of the diameter (or area) of the plot area.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBubble.MinimumSize">
      <summary>
            Gets or sets the minimum bubble size in a bubble chart, as percentage of the diameter (or area) of the plot area.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartHilo">
      <summary>
            Represents properties specific to HiLo, HiLoOpenClose and Candle charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHilo.FillFalling">
      <summary>
            Gets or sets a value indicating whether filled candles represent falling values (true) or rising values (false).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHilo.FillTransparent">
      <summary>
            Gets or sets a value indicating whether open candles are transparent (true) or filled with the series symbol color (false).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHilo.FullWidth">
      <summary>
            Gets or sets a value indicating whether the opening and closing values of a Hi-Lo-Open-Close chart are represented by a horizontal line on both sides of the Hi-Lo bar.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHilo.ShowClose">
      <summary>
            Gets or sets a value indicating whether the closing value is shown in a Hi-Lo-Open-Close chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHilo.ShowOpen">
      <summary>
            Gets or sets a value indicating whether the opening value is shown in a Hi-Lo-Open-Close chart.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartGantt">
      <summary>
            Represents properties specific to Gantt charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartGantt.AxisLabelsSource">
      <summary>
            Gets or sets the source of x-axis labels for a Gantt chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartGantt.ShowSymbols">
      <summary>
            Gets or sets a value indicating whether symbols are shown in a Gantt chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartGantt.Width">
      <summary>
            Gets or sets the percentage that each bar occupies.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartHistogram">
      <summary>
            Represents properties specific to Histogram charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHistogram.NormalDisplay">
      <summary>
            Gets an object describing a Gaussian normal curve display.
            </summary>
      <remarks>
            Histograms and frequency graphs are used to show the distribution of
            data values.  Very often, the data distributions are compared to normal
            distributions.  The properties of the ChartNormalCurve object control the
            appearance of a built in display of a Normal (Gaussian) curve for
            comparison.  The normal curve is unrelated to the data.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHistogram.NormalizationInterval">
      <summary>
            Gets or sets the normalization interval width.
            </summary>
      <remarks>
            When histograms with non-uniform intervals are generated, each interval
            is typically normalized such that each interval height represents the
            same frequency per unit width.  This preserves the most appropriate
            histogram shape.  The normalization interval width is the width to which
            all other intervals are normalized.  Intervals with the same width as the
            normalization width, will have a height which directly indicates its value.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartHistogram.Normalized">
      <summary>
            Gets or sets a value indicating whether each histogram series interval is normalized.
            </summary>
      <remarks>
            When histograms with non-uniform intervals are generated, each interval
            is typically normalized such that each interval height represents the
            same frequency per unit width.  This preserves the most appropriate
            histogram shape.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartNormalCurve">
      <summary>
            Represents properties that help define the appearance of the normal curve for the Histogram chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartNormalCurve.ForegroundDisplay">
      <summary>
            Gets or sets a value indicating whether the Normal (Gaussian) curve is displayed on top of the chart data display.
            <para>
            By default, the Normal (Gaussian) curve is displayed behind all charted data.  
            Setting this to true specifies that the Normal curve should be drawn on top of the charted data.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartNormalCurve.Visible">
      <summary>
            Gets or sets a value indicating whether the Normal curve is drawn.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartNormalCurve.UseAntiAlias">
      <summary>
            Gets or sets a value indicating whether the Normal curve is drawn using anti-aliasing.
            <para>
            By default, the normal curve is drawn using anti-aliasing methods.  
            Setting this to false overrides this behavior.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartNormalCurve.FillStyle">
      <summary>
            Gets the object controlling the appearance of the area under the Normal curve.
            </summary>
      <seealso cref="P:C1.Win.FlexReport.Chart.ChartNormalCurve.LineStyle" />
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartNormalCurve.LineStyle">
      <summary>
            Gets the object controlling the appearance of the line representing the Normal curve.
            </summary>
      <seealso cref="P:C1.Win.FlexReport.Chart.ChartNormalCurve.FillStyle" />
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DArea">
      <summary>
            Represents the chart area of a 3D chart. This area includes plot cube, all axes and the charted data.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DArea.Style">
      <summary>
            Gets the chart area style. Inherits from <see cref="P:C1.Win.FlexReport.ChartField.DefaultStyle" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DArea.AxisX">
      <summary>
            Gets the X-axis object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DArea.AxisY">
      <summary>
            Gets the Y-axis object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DArea.AxisZ">
      <summary>
            Gets the Z-axis object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DArea.View">
      <summary>
            Gets the object controlling the appearance of plot cube in 3D-space.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DAxis">
      <summary>
            Represents an axis of a 3D chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DAxis.AnnoMethod">
      <summary>
            Gets or sets the annotation method of the axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DAxis.AnnoPosition">
      <summary>
            Gets or sets the position of the axis annotation and text.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DAxis.AnnoRotated">
      <summary>
            Gets or sets a value indicating whether annotation is rotated.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DAxis.MajorGrid">
      <summary>
            Gets the major grid lines object.
            Major grids are placed coincident with major tickmarks at UnitMajor intervals.
            This property is used to set the grid line appearance.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DAxis.ValueLabels">
      <summary>
            Gets the labels collection for this axis.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartValueLabelsCollection">
      <summary>
            Represents a collection of axis value labels.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartValueLabelsCollection.Add(C1.Win.FlexReport.Chart.ChartValueLabel)">
      <summary>
            Adds an existing value label into the collection.
            </summary>
      <param name="label">The value label to add.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartValueLabelsCollection.AddNewLabel">
      <summary>
            Adds a new value label into the collection.
            </summary>
      <returns>The new added value label.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartValueLabelsCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the value label at the specific index.
            </summary>
      <param name="index">The index of the value label to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartValueLabelsCollection.Remove(C1.Win.FlexReport.Chart.ChartValueLabel)">
      <summary>
            Removes an existing value label from the collection.
            </summary>
      <param name="label">The value label to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartValueLabelsCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DView">
      <summary>
            Represents three-dimensional features of a 3D chart.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DView.ShouldSerializeBackColor">
      <summary>
            Returns false if the BackColor property is in the default state.
            The default state is to inherit the BackColor from the Chart3DArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DView.ResetBackColor">
      <summary>
            Resets the BackColor property to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DView.ShouldSerializeForeColor">
      <summary>
            Returns false if the ForeColor property is in the default state.
            The default state is to inherit the ForeColor from the Chart3DArea object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DView.ResetForeColor">
      <summary>
            Resets the ForeColor property to default state.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.AutoFit">
      <summary>
            Gets or sets a value indicating whether the x/y ratio for 2D projection is calculated automatically.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.AxisFont">
      <summary>
            Gets or sets the axis annotation font, measured in hundredths of the unit cube size. All axes have the same axis font.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.AxisTitleFont">
      <summary>
            Gets or sets the axis title font, measured in hundredths of the unit cube size. All axes have the same axis title font.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.BackColor">
      <summary>
            Gets or sets the background color of plot cube.
            Inherits from Chart3DArea.Style.BackColor.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.ForeColor">
      <summary>
            Gets or sets the foreground color of plot cube.
            Inherits from Chart3DArea.Style.ForeColor.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.Boxed">
      <summary>
            Gets or sets a value indicating whether all plotting cube edges are rendered.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.Ceiling">
      <summary>
            Gets the Chart3DProject object for ceiling.
            The projection of contours and zones onto the z=zmax plane. This property is used only in surface charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.Floor">
      <summary>
            Gets the Chart3DProject object for floor.
            The projection of contours and zones onto the z=zmin plane. This property is used only in surface charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.Perspective">
      <summary>
            Gets or sets the perspective of 3-D view.
            Must be a value greater than 1. Higher values reduce the perspective effect and approach a parallel projection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.RotationX">
      <summary>
            Gets or sets the rotation of the plot cube about the X-axis, in degrees.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.RotationY">
      <summary>
            Gets or sets the rotation of the plot cube about the Y-axis, in degrees.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.RotationZ">
      <summary>
            Gets or sets the rotation of the plot cube about the Z-axis, in degrees.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.TextRotation">
      <summary>
            Gets or sets text rotation for axis titles and axis annotations.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.ViewportHorizontalShift">
      <summary>
            Gets or sets horizontal shift of chart viewport.
            </summary>
      <remarks>
            Specifies the degree of horizontal view translation from a full view (a maximal, non-clipped view).
            Translation is relative to a normalized box with origin in the bottom left corner.
            Translation of more than a full unit (more than 1.0 or -1.0) causes the view to translate
            "out of view" when ViewPortScale=1.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.ViewportScale">
      <summary>
            Gets or sets the degree of scaling (zooming) of chart viewport up or down from a full (maximal, non-clipped) view.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.ViewportVerticalShift">
      <summary>
            Gets or sets the vertical shift of chart viewport.
            </summary>
      <remarks>
            Specifies the degree of vertical view translation from a full view. Translation is relative to a normalized
            box with origin in the bottom left corner. Translation of more than a full unit (more than 1.0 or -1.0)
            causes the view to translate “out of view” when ViewPortScale=1.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.XScale">
      <summary>
            Gets or sets the amount of scaling in the X-axis direction, measured as relation to the height (Z-axis) of the cube.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.YScale">
      <summary>
            Gets or sets the amount of scaling in the Y-axis direction, measured as relation to the height (Z-axis) of the cube.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DView.View3D">
      <summary>
            Gets or sets the predefined view.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DProjection">
      <summary>
            Represents projection (floor or ceiling) for contour and zones charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DProjection.IsContoured">
      <summary>
            Gets or sets a value indicating whether projected contours are to be drawn.
            If True, projected contours are drawn regardless of the value of the IsContoured property of the Chart3DContour object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DProjection.IsZoned">
      <summary>
            Gets or sets a value indicating whether the projected zones are to be drawn.
            If True, projected contours are drawn regardless of the value of the IsZoned property of the Chart3DContour object.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DGridLines">
      <summary>
            Represetns properties used to control the appearance of grid.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridLines.IsOnXYPlane">
      <summary>
            Gets or sets a value indicating whether grid lines are to appear on the XY-plane.
            In 2D projections, grid lines are drawn perpendicular to the axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridLines.IsOnXZPlane">
      <summary>
            Gets or sets a value indicating whether grid lines are to appear on the XZ-plane.
            In 2D projections, grid lines are drawn perpendicular to the axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridLines.IsOnYZPlane">
      <summary>
            Gets or sets a value indicating whether grid lines are to appear on the YZ-plane.
            In 2D projections, grid lines are drawn perpendicular to the axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridLines.Style">
      <summary>
            Gets the line style used to draw the grid.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DData">
      <summary>
            Represents chart data definition for a 3D chart group.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartData">
      <summary>
            Represents the chart data definition of one chart group.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartData.Hole">
      <summary>
            Gets or sets the data hole value.
            Data holes are used as placeholders for data points that indicate data is normally present
            but not in this case. 
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartData.IsForEachRecord">
      <summary>
            Gets or sets a value indicating whether the data is selected by each record.
            By default, the data is grouped by CategoryGroups. 
            If this is true, the data is not grouped and the first category group provides labels in X-Axis.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartData.ColorMode">
      <summary>
            Gets or sets the mode for setting the color of each category and series.
            <para>
            Available for 2D Bar, Pie, Candle, Gantt, HiLo, HiLoOpenClose, Line, Radar, and Step chart types 
            and 3D Bar chart type.
            </para></summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartData.CategoryGroups">
      <summary>
            Gets the collection of category groups which provide labels for X-Axis.
            Empty collection means group all records in one group.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartData.SeriesGroups">
      <summary>
            Gets the collection of optional series group for extra levels of data.
            </summary>
      <remarks>
            Optional, provides extra levels of data (for example, Orders by Country can be broken down by years as well).
            Labels for the series are displayed in the legend.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartData.SeriesValues">
      <summary>
            Gets the collection of series values which define the template of each series.
            </summary>
      <remarks>
            At least one series value exists.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DData.Layout">
      <summary>
            Gets or sets the chart data layout type.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DData.GridData">
      <summary>
            Gets the settings for regular grid data layout.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DData.IrGridData">
      <summary>
            Gets the settings for irregular grid data layout.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DData.UnboundData">
      <summary>
            Gets the unbound data set.
            </summary>
      <remarks>
            The chart only shows the unbound points if this property is set.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DGridData">
      <summary>
            Represents settings for a regular grid data layout.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridData.RowOrigin">
      <summary>
            Gets or sets the Y-coordinate of the grid origin.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridData.ColumnOrigin">
      <summary>
            Gets or sets the X-coordinate of the grid origin.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridData.RowDelta">
      <summary>
            Gets or sets the amount of space between a data value and its neighboring row in grid dataset.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGridData.ColumnDelta">
      <summary>
            Gets or sets the amount of space between a data value and its neighboring column in grid dataset.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DIrGridData">
      <summary>
            Represents settings for irregular grid data layout.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DIrGridData.RowOrigin">
      <summary>
            Gets or sets the Y-coordinate of the grid origin.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DIrGridData.ColumnOrigin">
      <summary>
            Gets or sets the X-coordinate of the grid origin.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DIrGridData.RowDeltaArray">
      <summary>
            Gets or sets the array which indicates the amounts of space between a data value and its neighboring row in grid dataset.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DIrGridData.ColumnDeltaArray">
      <summary>
            Gets or sets the array which indicates the amounts of space between a data value and its neighboring column in grid dataset.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DUnboundData">
      <summary>
            Represents unbound data for 3D chart.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DUnboundData.#ctor(C1.Win.FlexReport.Chart.Chart3DData)">
      <summary>
            Creates a new instance of Chart3DUnboundData object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DUnboundData.GridSet">
      <summary>
            Gets the dataset for GridData or IrGridData layout.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DUnboundData.PointSet">
      <summary>
            Gets the dataset for PointData layout.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DDataSetGrid">
      <summary>
            Represents data for grid or irregular grid data layout.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.#ctor(C1.Win.FlexReport.Chart.Chart3DUnboundData)">
      <summary>
            Initialize new instance of Chart3DDataSetGrid object.
            </summary>
      <param name="parent">The parent of this object.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.GetChartGroup">
      <summary>
            For internal used only. Gets the chart group which contains this data set.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.SetValue(System.Int32,System.Int32,System.Double)">
      <summary>
            Sets z-value of data by specified row and column.
            </summary>
      <param name="column">The column index.</param>
      <param name="row">The row index.</param>
      <param name="value">The z-value at specified row and column.</param>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.GridData">
      <summary>
            Gets or sets two-dimensional array of Z-values.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.RowCount">
      <summary>
            Gets or sets the number of rows in grid dataset.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.ColumnCount">
      <summary>
            Gets or sets the number of columns in grid dataset.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataSetGrid.Item(System.Int32,System.Int32)">
      <summary>
            Gets or sets z-value of data by specified row and column.
            </summary>
      <param name="column">The column index.</param>
      <param name="row">The row index.</param>
      <returns>The z-value at the specified row and column.</returns>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DDataSetPoint">
      <summary>
            Represents data for point data layout.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataSetPoint.#ctor">
      <summary>
            Initializes a new instance of Chart3DDataSetPoint object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataSetPoint.SeriesCollection">
      <summary>
            Gets the collection of point series.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DPointSeriesCollection">
      <summary>
            Represents the collection of chart 3D point series.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeriesCollection.Add(C1.Win.FlexReport.Chart.Chart3DPointSeries)">
      <summary>
            Adds an existing point series into the collection.
            </summary>
      <param name="series">The point series to add.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeriesCollection.AddNewSeries">
      <summary>
            Adds a new point series into the collection.
            </summary>
      <returns>The new added point series.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeriesCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the point series at the specific index.
            </summary>
      <param name="index">The index ofo the point series to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeriesCollection.Remove(C1.Win.FlexReport.Chart.Chart3DPointSeries)">
      <summary>
            Removes an existing point series from the collection.
            </summary>
      <param name="series">The point series to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeriesCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DPointSeries">
      <summary>
            Represents one series of data for point data layout.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeries.#ctor">
      <summary>
            Initializes a new instance of Chart3DPointSeries object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointSeries.ToString">
      <summary>
            Gets the string represents the point series.
            </summary>
      <returns>The label of the point series if it's not empty, or the class name.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPointSeries.Visible">
      <summary>
            Gets or sets the visibility of the point series. 
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPointSeries.Label">
      <summary>
            Gets or sets the label of the point series. 
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPointSeries.Connected">
      <summary>
            Gets or sets a value indicating whether the 3D series points are connected with lines.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPointSeries.LineStyle">
      <summary>
            Gets or sets the line style of the series, including color, thickness and pattern.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPointSeries.SymbolStyle">
      <summary>
            Gets the symbol style of the series, including color, size and shape.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPointSeries.Points">
      <summary>
            Gets the collection of points for the point series.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DPointsCollection">
      <summary>
            Represents the collection of chart 3D points.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointsCollection.Add(C1.Win.FlexReport.Chart.Chart3DPoint)">
      <summary>
            Adds an existing data point into the collection.
            </summary>
      <param name="point">The data point to add.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointsCollection.AddNewPoint">
      <summary>
            Adds a new data point into the collection.
            </summary>
      <returns>The new added data point.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointsCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the data point at the specific index.
            </summary>
      <param name="index">The index ofo the data point to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointsCollection.Remove(C1.Win.FlexReport.Chart.Chart3DPoint)">
      <summary>
            Removes an existing data point from the collection.
            </summary>
      <param name="point">The data point to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPointsCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DPoint">
      <summary>
            Represents the point in 3D space.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DPoint.ToString">
      <summary>
            Gets the string represents the point.
            </summary>
      <returns>A string with values of X, Y annd Z.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPoint.X">
      <summary>
            Gets or sets X-coordinate of the point.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPoint.Y">
      <summary>
            Gets or sets Y-coordinate of the point.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DPoint.Z">
      <summary>
            Gets or sets Z-coordinate of the point.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DGroups">
      <summary>
            Represents 3D chart groups, data labels, chart and contour styles.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroups.RowLabels">
      <summary>
            Gets the collection of labels for rows (Y-axis) in the chart, used when the Y-axis has its AnnoMethod property set to DataLabels.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroups.ColumnLabels">
      <summary>
             Gets the collection of labels for columns (X-axis) in the chart, used when the X-axis has its AnnoMethod property set to DataLabels.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroups.Group0">
      <summary>
            Gets the first chart group.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroups.ContourStyles">
      <summary>
            Gets the contour styles collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DGroup">
      <summary>
            Represents the chart data and classes that control the chart appearance.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroup.ChartType">
      <summary>
            Gets or sets the type of chart to be displayed.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroup.ChartData">
      <summary>
            Gets the data for the chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroup.Bar">
      <summary>
            Gets the object that controls the appearance of a bar chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroup.Contour">
      <summary>
            Get the type of contouring to be used.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroup.Elevation">
      <summary>
            Get the object that controls the three-dimensional appearance of the chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DGroup.Surface">
      <summary>
            Gets the object that controls the appearance of a surface format chart.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DContourStyles">
      <summary>
            Represents settings for generating contour styles.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContourStyles.ColorSet">
      <summary>
            Gets or sets predefined color collections for contour styles.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContourStyles.Colors">
      <summary>
            Gets the collection of colors which is used when <see cref="P:C1.Win.FlexReport.Chart.Chart3DContourStyles.ColorSet" /> property is set to <see cref="F:C1.Win.FlexReport.Chart.ChartColorSet.Custom" /></summary>
      <remarks>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DColorsCollection">
      <summary>
            Represents a collection of colors.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DColorsCollection.Add(System.Drawing.Color)">
      <summary>
            Adds a new Color to the collection.
            </summary>
      <param name="color">The Color to add.</param>
      <returns>
            The index in the collection at which the Color was added.
            </returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DColorsCollection.Contains(System.Drawing.Color)">
      <summary>
            Determines if the specified Color is in the collection.
            </summary>
      <param name="color">The Color to locate.</param>
      <returns>
            True if the Color is in the collection, false otherwise.
            </returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DColorsCollection.CopyTo(System.Drawing.Color[],System.Int32)">
      <summary>
            Copies the collection Color elements beginning with the specified index to an array of Color.
            </summary>
      <param name="array">Output array.</param>
      <param name="index">Starting index.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DColorsCollection.IndexOf(System.Drawing.Color)">
      <summary>
            Gets the index of the specified Color in the collection.
            </summary>
      <param name="color">The Color to locate.</param>
      <returns>
            The index of the specified color in the collection.
            </returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DColorsCollection.Remove(System.Drawing.Color)">
      <summary>
            Removes the specified Color from the collection.
            </summary>
      <param name="color">The Color to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DColorsCollection.Insert(System.Int32,System.Drawing.Color)">
      <summary>
            Inserts the specified Color at the specified index in the collection.
            </summary>
      <param name="index">The index to insert at.</param>
      <param name="color">The Color to insert.</param>
    </member>
    <member name="E:C1.Win.FlexReport.Chart.Chart3DColorsCollection.ColorsChanged">
      <summary>
            Occurs when the collection is changed.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DColorsCollection.Item(System.Int32)">
      <summary>
            Gets or sets the specified Color by numeric index.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DDataLabelsCollection">
      <summary>
            Represents a collection of Chart3DDataLabel objects.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataLabelsCollection.Add(C1.Win.FlexReport.Chart.Chart3DDataLabel)">
      <summary>
            Adds an existing data label to the collection.
            </summary>
      <param name="label">The data value to add.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataLabelsCollection.AddNewLabel">
      <summary>
            Adds a new data label into the collection.
            </summary>
      <returns>The new added data label.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataLabelsCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the data label at the specific index.
            </summary>
      <param name="index">The index of the data label to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataLabelsCollection.Remove(C1.Win.FlexReport.Chart.Chart3DDataLabel)">
      <summary>
            Removes an existing data label from the collection.
            </summary>
      <param name="label">The data label to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DDataLabelsCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DDataLabel">
      <summary>
            Represents an independent text annotation that can be attached to the chart data.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataLabel.Index">
      <summary>
            Gets or sets the label index.
            Represents the row (RowLabels) or column (ColumnLabels) number.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DDataLabel.Text">
      <summary>
            Gets or sets the label text.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DBar">
      <summary>
            Represents properties specific to Bar charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBar.Colors">
      <summary>
            Gets the collection of Chart3DBarColor objects.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBar.ColumnFormat">
      <summary>
            Gets or sets the column format.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBar.ColumnWidth">
      <summary>
            Gets or sets the column width, measured as a percentage of the total amount of space available.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBar.Origin">
      <summary>
            Gets or sets the origin of Z-axis for the bar chart.
            Defines the Z-value from which bars are filled.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBar.RowFormat">
      <summary>
            Gets or sets the row format.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBar.RowWidth">
      <summary>
            Gets or sets the row width, measured as a percentage of the total amount of space available.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DContour">
      <summary>
            Represents properties specific to contour and zone charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContour.ContourMethod">
      <summary>
             Gets or sets the contour calculation method.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContour.IsContoured">
      <summary>
            Gets or sets a value indicating whether the chart is contoured.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContour.IsZoned">
      <summary>
            Gets or sets a value indicating whether the chart is zoned.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContour.NumLevels">
      <summary>
            Gets or sets the number of contour levels.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DContour.ZoneMethod">
      <summary>
            Gets or sets the zone method.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DElevation">
      <summary>
            Represents properties controlling the appearance of different chart types.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.DepthCur">
      <summary>
            Gets or sets a value indicating whether a scatter chart's point sizes are dependant upon their distance from the eye.
            </summary>
      <remarks>
            Relevant only for scatter charts.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.DropLines">
      <summary>
             Gets or sets a value indicating whether a scatter chart's points should have drop lines. 
            </summary>
      <remarks>
            Relevant only for scatter charts.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.IsMeshed">
      <summary>
            Gets or sets a value indicating whether surface charts are meshed, or whether bars in bar charts are outlined.
            </summary>
      <remarks>
            Relevant only for bar and surface charts. 
            Set this property to true to display a surface as a mesh, or to display bars in outline format. 
            The IsColumnMeshShowing and IsRowMeshShowing properties of the Chart3DSurface object
            control allow mesh lines in either the X or the Y direction to be turned off.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.IsShaded">
      <summary>
            Gets or sets a value indicating whether surface or bar charts use shading. 
            </summary>
      <remarks>
            Relevant only for bar and surface charts. 
            Set this property to true to display surfaces and bars as a flat shade of color.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.MeshBottomColor">
      <summary>
            Gets or sets the bottom color of a mesh.
            </summary>
      <remarks>
            For bar charts, this color is used for bars with a value less than that specified by the Chart3DBar Origin property.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.MeshTopColor">
      <summary>
            Gets or sets the top color of the mesh.
            </summary>
      <remarks>
            For bar charts, this color is used for bars with a value greater than that specified by the Chart3DBar Origin property.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.ShadedBottomColor">
      <summary>
            Gets or sets the bottom color of the shaded surface.
            </summary>
      <remarks>
            For bar charts, this color is used for bars with a value less than that specified by the Chart3DBar Origin property.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.ShadedTopColor">
      <summary>
            Gets or sets the top color of a shaded surface.
            </summary>
      <remarks>
            For bar charts, this color is used for bars with a value greater than that specified by the Chart3DBar Origin property.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DElevation.Transparency">
      <summary>
            Gets or sets the transparency of chart data, from 0 (transparent) to 255 (opaque).
            Used only for non-contoured and non-zoned charts.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DSurface">
      <summary>
            Represents properties specific to suface charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DSurface.ColumnMeshFilter">
      <summary>
            Gets or sets the frequency with which column mesh lines are drawn.
            </summary>
      <remarks>
            When this property has the value n, every nth mesh line is drawn.
            This mesh filter applies to both regular and irregular grids.
            When this property is set to 0, the chart automatically chooses a mesh filter.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DSurface.IsColumnMeshShowing">
      <summary>
            Gets or sets a value indicating whether the column mesh lines should appear.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DSurface.IsRowMeshShowing">
      <summary>
            Gets or sets a value indicating whether the row mesh lines should appear.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DSurface.RowMeshFilter">
      <summary>
            Gets or sets the frequency with which row mesh lines are drawn.
            </summary>
      <remarks>
            When this property has the value n, every nth mesh line is drawn.
            This mesh filter applies to both regular and irregular grids.
            When this property is set to 0, the chart automatically chooses a mesh filter.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DBarColorsCollection">
      <summary>
            Represents a collection of Chart3DBarColor objects.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DBarColorsCollection.Add(C1.Win.FlexReport.Chart.Chart3DBarColor)">
      <summary>
            Adds an existing bar color to the collection.
            </summary>
      <param name="color">The bar color to add.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DBarColorsCollection.AddNewColor">
      <summary>
            Adds a new bar color to the collection.
            </summary>
      <returns>The new added bar color.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DBarColorsCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the bar color at the specific index.
            </summary>
      <param name="index">The index of the bar color to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DBarColorsCollection.Remove(C1.Win.FlexReport.Chart.Chart3DBarColor)">
      <summary>
            Removes an existing bar color from the collection.
            </summary>
      <param name="color">The bar color to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.Chart3DBarColorsCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DBarColor">
      <summary>
            Represents properties used to set individual bar color.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBarColor.Color">
      <summary>
            Gets or sets the bar color.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBarColor.Row">
      <summary>
            Gets or sets the bar row. -1 applies color to all rows.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart3DBarColor.Column">
      <summary>
            Gets or sets the bar column. -1 applies color to all columns.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DData">
      <summary>
            Represents a chart data definition of one 2D chart group.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DData.SeriesWidth">
      <summary>
            Get or sets the percentage of the full width to be drawn of each series of 3D effect charts. Valid values are from 10 to 100.
            </summary>
      <remarks>
            Applies to 3D Area and 3D Line or Ribbon charts. 
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.Chart2DData.UnboundSeriesList">
      <summary>
            Gets the collection of unbound series.
            </summary>
      <remarks>
            The chart only shows the unbound series if this property is not empty.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataGroupsCollection">
      <summary>
            Represents a collection of chart data groups.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroupsCollection.Add(C1.Win.FlexReport.Chart.ChartDataGroup)">
      <summary>
            Adds an existing data group into the collection.
            </summary>
      <param name="group">
      </param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroupsCollection.AddNewGroup(System.String)">
      <summary>
            Adds a new data group into the colleciton.
            </summary>
      <param name="groupExpression">The group expression for the new group.</param>
      <returns>
            The new added data group.
            </returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroupsCollection.AddNewGroup">
      <summary>
            Adds a new data group into the colleciton.
            </summary>
      <returns>
            The new added data group.
            </returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroupsCollection.RemoveAt(System.Int32)">
      <summary>
            Removes one data group at the specific index.
            </summary>
      <param name="index">The index of the data group to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroupsCollection.Remove(C1.Win.FlexReport.Chart.ChartDataGroup)">
      <summary>
            Removes an existing data group from the colleciton.
            </summary>
      <param name="group">The data group to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroupsCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataGroup">
      <summary>
            Represents a chart data group definition.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataGroup.ToString">
      <summary>
            Gets a string that represents this data group.
            </summary>
      <returns>The name of this data group if it's not empty, or the class name.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.SortType">
      <summary>
            Gets or sets the sort type of the data group.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.Name">
      <summary>
            Gets or set the name of the data group. The name should be unique within the data groups collection.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.GroupExpression">
      <summary>
            Gets or sets the expression for grouping.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.LabelExpression">
      <summary>
            Gets or sets the expression for label. If empty, the label is specfied by GroupExpression.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.FilterExpression">
      <summary>
            Gets or sets the expresion for filtering.
            After grouping by GroupExpression, data is filtered by FilterExpression.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.SortExpression">
      <summary>
            Gets or sets the sorting expression. Applied after filtering.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataGroup.FilterOutName">
      <summary>
            Gets or sets the name of a new group which combines all filtered out data.
            If empty, filtered out data is discarded.
            </summary>
      <remarks>
             Empty means discard others.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataSeriesCollection">
      <summary>
            Represents the collection of chart data series definitions.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeriesCollection.Add(C1.Win.FlexReport.Chart.ChartDataSeries)">
      <summary>
            Adds an existing data series into the collection.
            </summary>
      <param name="series">The data series to add.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeriesCollection.AddNewSeries">
      <summary>
            Adds a new data series into the collection.
            </summary>
      <returns>The new added data series.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeriesCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the data series at the specific index.
            </summary>
      <param name="index">The index ofo the data series to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeriesCollection.Remove(C1.Win.FlexReport.Chart.ChartDataSeries)">
      <summary>
            Removes an existing data series from the collection.
            </summary>
      <param name="series">The data series to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeriesCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataSeries">
      <summary>
            Represents a chart data series definition.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeries.#ctor">
      <summary>
            Initializes a new instance of ChartDataSeries object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataSeries.ToString">
      <summary>
            Gets the string represents the data series.
            </summary>
      <returns>The label of the data series if it's not empty, or the class name.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.Label">
      <summary>
            Gets or sets the label of the data series. 
            Represents the title of the legend item.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.Connected">
      <summary>
            Gets or sets a value indicating whether the 3D series points are connected with lines.
            Relevant only for 3D Scatter chart with PointData layout.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.DataValues">
      <summary>
            Gets the collection of data values for the data series.
            </summary>
      <remarks>
            Different chart type needs different length of data values.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.DataLabel">
      <summary>
            Gets or sets the data label object (for 2D charts only).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.Display">
      <summary>
            Gets or sets the display of the series (for 2D charts only).
            </summary>
      <remarks>
            This property is used to show, hide or exclude charting of a data series.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.FillStyle">
      <summary>
            Gets or sets the fill style of the data series (for 2D charts only).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.FitType">
      <summary>
            Gets or sets the curve fit type (for 2D charts only).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.LegendEntry">
      <summary>
            Gets or sets a value indicating whether the series label appears in the legend (for 2D charts only).
            </summary>
      <remarks>
            Occasionally, it is useful to chart a data series without including the series in the legend.
            Setting the LegendEntry property to false hides the series entry in the legend.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.LineStyle">
      <summary>
            Gets or sets the line style of the series, including color, thickness and pattern
            (for 2D charts or 3D Scatter charts with PointData layout).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.SymbolStyle">
      <summary>
            Gets or sets the symbol style of the series, including color, size and shape (for 2D charts or 3D Scatter charts with PointData layout).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.Offset">
      <summary>
            Gets or sets the series offset for appropriate charts (for 2D charts only).
            </summary>
      <remarks>
            The meaning, if any, of the series offset can change from chart type to chart type. 
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.Histogram">
      <summary>
            Gets the histogram settings for histogram chart (for 2D histogram charts only).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.PlotFilter">
      <summary>
            Gets or sets the plot filter value which optimizes plotting large data arrays (for 2D XY-plot only).
            </summary>
      <remarks>
            The plot filter value represents the minimal distance from the previous data point
            in pixels. If distance is less than PlotFilter the point is not plotted.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataSeries.PlotFilterMethod">
      <summary>
            Gets or sets the plot filter method (for 2D XY-plot only).
            </summary>
      <remarks>
            This property specifies method of optimization when plotting large data arrays. 
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartUnboundDataSeriesCollection">
      <summary>
            Represents the collection of unbound chart data series definitions.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartUnboundDataSeriesCollection.Add(C1.Win.FlexReport.Chart.ChartUnboundDataSeries)">
      <summary>
            Adds an existing data series into the collection.
            </summary>
      <param name="series">The data series to add.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartUnboundDataSeriesCollection.AddNewSeries">
      <summary>
            Adds a new data series into the collection.
            </summary>
      <returns>The new added data series.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartUnboundDataSeriesCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the data series at the specific index.
            </summary>
      <param name="index">The index ofo the data series to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartUnboundDataSeriesCollection.Remove(C1.Win.FlexReport.Chart.ChartUnboundDataSeries)">
      <summary>
            Removes an existing data series from the collection.
            </summary>
      <param name="series">The data series to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartUnboundDataSeriesCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartUnboundDataSeries">
      <summary>
            Represents a chart unbound data series definition.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.GetChartGroup">
      <summary>
            For internal used only. Gets the chart group which contains this data series.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.X">
      <summary>
            Gets or sets the array that manages X data.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.Y">
      <summary>
            Gets or sets the array that manages Y data.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.Y1">
      <summary>
            Gets or sets the array that manages Y1 data.
            </summary>
      <remarks>
            Y1 data is used for Hi-Lo, Hi-Lo-Open-Close, Candle and Bubble charts.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.Y2">
      <summary>
            Gets or sets the array that manages Y2 data.
            </summary>
      <remarks>
            Y2 data is used for Hi-Lo-Open-Close and Candle charts.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.Y3">
      <summary>
            Gets or sets the array that manages Y3 data.
            </summary>
      <remarks>
            Y3 data is used for Hi-Lo-Open-Close and Candle charts.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartUnboundDataSeries.SeriesData">
      <summary>
            Gets the current ChartUnboundDataSeries object.  This property is only intended for use in the property browsers.  It is not useful in code.
            </summary>
      <remarks>
        <para>
            As a convenience, all relevant ChartUnboundDataSeries data arrays can be edited at
            the same time in a property browser by editing the SeriesData property.
            Data arrays are considered relevant only if the array is used to display the current ChartType.
            </para>
        <para>
            For example, editing SeriesData for an XYPlot would invoke the data editor
            containing the X and Y data arrays.  Editing SeriesData for a Candle chart
            would invoke the data editor containing the X, Y, Y1, Y2 and Y3 data arrays.
            </para>
        <para>
            The SeriesData property is intended to be used only within property browsers,
            as it is merely a placeholder to allow invocation of the editor.
            The value returned is the object of which it is a part.
            </para>
      </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataValuesCollection">
      <summary>
            Represents a collection of data vlalues.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataValuesCollection.Add(C1.Win.FlexReport.Chart.ChartDataValue)">
      <summary>
            Adds an existing data value to the collection.
            </summary>
      <param name="dataValue">The data value to add.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataValuesCollection.AddNewValue(System.String)">
      <summary>
            Adds a new data value to the collection.
            </summary>
      <param name="valueExpression">The value expression for the new data value.</param>
      <returns>The new added data value.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataValuesCollection.AddNewValue">
      <summary>
            Adds a new data value to the collection.
            </summary>
      <returns>The new added data value.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataValuesCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the data value at the specific index.
            </summary>
      <param name="index">The index of the data value to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataValuesCollection.Remove(C1.Win.FlexReport.Chart.ChartDataValue)">
      <summary>
            Removes an existing data value from the collection.
            </summary>
      <param name="dataValue">The data value to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataValuesCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataValue">
      <summary>
            Represents a chart data value in a data series.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataValue.Name">
      <summary>
            Gets or sets the name of the data value.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataValue.ValueExpression">
      <summary>
            Gets or sets the expressoin of the data value.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartSeriesHistogram">
      <summary>
            Represents properties specific to histogram charts.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSeriesHistogram.DisplayType">
      <summary>
            Gets or sets the method used to display the frequency data.
            </summary>
      <remarks>
            Frequency data can be displayed in a different manner on a per series basis, 
            making it possible to mix display types in a single chart group.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSeriesHistogram.IntervalCreationMethod">
      <summary>
            Gets or sets the method used to specify the histogram intervals.
            </summary>
      <remarks>
            Interval boundaries can be established in a variety of ways.
            <para>
            When the Automatic method is used, the chart calculates the upper and lower limits 
            of the intervals using the maximum and minimum data values, and restricting the 
            intervals to lie within 3 standard deviations of the data mean.  
            The number of intervals is optional.  Interval boundaries are calculated uniformly.
            </para><para>
            When the SemiAutomatic method is used, the upper and lower limits of the intervals 
            are specified together with the number of intervals. Interval boundaries are calculated 
            uniformly.
            </para><para>
            When the XDataBoundaries method is used, the X values of the data data series are 
            used to explicitly set each interval boundary.  The X values are sorted and duplicate 
            values are eliminated.  Each ascending value of the result is used determine the next 
            interval boundary.  Thus, the first and second resulting X values define the first 
            interval and each successive X value specifies the end of the next interval.  
            Note that specification of N intervals requires N+1 unique X values.
            </para></remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSeriesHistogram.IntervalNumber">
      <summary>
            Gets or sets the number of intervals in the histogram.
            </summary>
      <remarks>
            The IntervalNumber property applies only to histograms created with
            Automatic and SemiAutomatic methods.  When the XDataBoundaries method
            is used, the number of intervals is defined as 1 less than the number
            of unique X values specified.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSeriesHistogram.IntervalStart">
      <summary>
            Gets or sets the numeric value of the beginning of the first interval.
            </summary>
      <remarks>
            Applies only to the SemiAutomatic creation method.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSeriesHistogram.IntervalWidth">
      <summary>
            Gets or sets the numeric value of the width of each interval.
            </summary>
      <remarks>
            Applies only to the SemiAutomatic creation method.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartDataLabel">
      <summary>
            Represents a text label for data values.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartDataLabel.#ctor">
      <summary>
            Initializes a new instance of ChartDataLabel object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Compass">
      <summary>
            Gets or sets the position of the label relative to its specified location.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Connected">
      <summary>
            Gets or sets a value indicating whether a connecting line is drawn to the associated data point.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Filter">
      <summary>
            Gets or sets the filter value of the data label.
            If 1 then every data point is labeled, if 2 then every other data point is labeled.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Offset">
      <summary>
            Gets or sets the offset distance in pixels from the associated data point.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Text">
      <summary>
            Gets or sets the text of the label.
            </summary>
      <remarks>
            Text supports a number of keywords (#TEXT, #XVAL, #YVAL, #YVAL1, #YVAL2, #YVAL3, %YVAL) 
            which refer to the series label or data value.
            For example, "{#YVAL:0.00}" shows the Y value with format of two decimal points. 
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Visible">
      <summary>
            Gets or sets the label visibility.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartDataLabel.Style">
      <summary>
            Gets the ChartStyle object of the label.
            </summary>
      <remarks>
            Inherits from the ChartLabels.DefaultLabelStyle property.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartSortType">
      <summary>
            Specifies the sort type of the <seealso cref="T:C1.Win.FlexReport.Chart.ChartDataGroup" />.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSortType.Ascending">
      <summary>
            Keep the same values together, and then sort the group in ascending order.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSortType.Descending">
      <summary>
            Keep the same values together, and then sort the group in descending order.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSortType.Original">
      <summary>
            Keep the same values together, and keep the group in original order (the order in first appearing).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSortType.Original2">
      <summary>
            Only the same values located nearby are grouped, and a new group begins whenever the value changes in the group field.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAxisType">
      <summary>
            Specifies the type of the chart axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisType.Auto">
      <summary>
            Auto select the axis type according to the data values.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisType.Category">
      <summary>
            The axis is used to place categories.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisType.Numeric">
      <summary>
            A numerical axis is used.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartPieLegendLayout">
      <summary>
            Specifies the layout text of the legend item. It defines the additional legend text for single Pie chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieLegendLayout.None">
      <summary>
            No layout text.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieLegendLayout.Percentage">
      <summary>
            Show group value as percentage.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieLegendLayout.Amount">
      <summary>
            Show group value as amount.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieLegendLayout.Both">
      <summary>
            Show group value as both amount and percentage.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartPieSliceDetachment">
      <summary>
            Specifies which slice would be detached. It works for single Pie chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieSliceDetachment.NoDetachment">
      <summary>
            No slice is detached.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieSliceDetachment.SmallestSlice">
      <summary>
            The slice with smallest value is detached.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPieSliceDetachment.LargestSlice">
      <summary>
            The slice with largest value is detached.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualizationType">
      <summary>
            Specifies the visualization type (2D or 3D) of the chart. 
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartVisualizationType.Chart2D">
      <summary>
            Specifies a 2D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartVisualizationType.Chart3D">
      <summary>
            Specifies a 3D chart.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartColorGeneration">
      <summary>
            Specifies the color themes used to generate colors for data series.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.CustomByDataColor">
      <summary>
            Uses custom color from DataColor property.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.CustomByPalette">
      <summary>
            Uses custom colors from Palette property.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Standard">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Office">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.GrayScale">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Apex">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Aspect">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Civic">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Concourse">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Equity">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Flow">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Foundry">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Median">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Metro">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Module">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Opulent">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Oriel">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Origin">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Paper">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Solstice">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Technic">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Trek">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Urban">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.Verve">
      <summary>
            Uses colors similar to the Office 2007 theme of the same name.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.CrystalReports10">
      <summary>
            Uses colors similar to the palette for Chart object in Crystal Reports version 10.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorGeneration.CrystalReports14">
      <summary>
            Uses colors similar to the palette for Chart object in Crystal Reports version 14.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DType">
      <summary>
            Specifies the type of a 2D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.XYPlot">
      <summary>
            Plot chart type. 
            Needs two data values which specifies the X and Y value.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Pie">
      <summary>
            Pie chart type. 
            Needs one data value which specifies the Y value.  X value from category groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Bar">
      <summary>
            Bar chart type. 
            Needs one data value which specifies the Y value. X value from category groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Area">
      <summary>
            Area chart type. 
            Needs one data value which specifies the Y value. X value from category groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Polar">
      <summary>
            Polar chart type. 
            Needs two data values which specifies the X(Angle) and Y(Radius) value.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Radar">
      <summary>
            Radar chart type. 
            Needs one data value which specifies Y(Radius) value. X value from category groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Bubble">
      <summary>
            Bubble chart type. 
            Needs three data values which specifies the X, Y and Y2(Size) value.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.HiLo">
      <summary>
            Hilo chart type. 
            Needs two data values which specifies the Y(High) and Y2(Low) value. X value from category groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.HiLoOpenClose">
      <summary>
            HiloOpenClose chart type. 
            Needs four data values which specifies the Y(High), Y2(Low), Y3(Open) and Y4(Close) value. X value from category groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Candle">
      <summary>
            Candle chart type. 
            Needs four data values which specifies the Y(High), Y2(Low), Y3(Open) and Y4(Close) value. X value from category groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Gantt">
      <summary>
            Gantt chart type. 
            Needs two data values which specifies the Y(Start) and Y2(End) value. X value from category groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Step">
      <summary>
            Step chart type. 
            Needs one data value which specifies the Y value. X value from category groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DType.Histogram">
      <summary>
            Histogram chart type. 
            Needs one data value which specifies the Y value. X value from category groups.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartBorderStyle">
      <summary>
            Specifies the style of the border.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.NotSet">
      <summary>
            Border style is not set and is inherited from the Chart field.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.None">
      <summary>
            No border.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Empty">
      <summary>
            Empty Border.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Solid">
      <summary>
            Solid line border.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Raised">
      <summary>
            Raised 3D border, drawn using system colors.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Inset">
      <summary>
            Inset 3D border, drawn using system colors.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.RaisedBevel">
      <summary>
            Raised 3D border with bevel.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.InsetBevel">
      <summary>
            Inset 3D border with bevel.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Groove">
      <summary>
            Compound border (inset+raised).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Fillet">
      <summary>
            Compound border (raised+inset).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Double">
      <summary>
            Double solid line border.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Dashed">
      <summary>
            Dashed line border.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBorderStyle.Opaque">
      <summary>
            Solid line border rendered without antialiasing.  Opaque borders ignore rounding
            and are most useful for antialiased charts to be rendered as transparent images.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartGradientStyle">
      <summary>
            Specifies the style of gradient background.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.None">
      <summary>
            No gradient filling.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.Horizontal">
      <summary>
            From left (BackColor) to right (BackColor2).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.HorizontalCenter">
      <summary>
            From center (BackColor) to left and right (BackColor2).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.Vertical">
      <summary>
            From top (BackColor) to bottom (BackColor2).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.VerticalCenter">
      <summary>
            From center (BackColor) to top and bottom (BackColor2).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.Diagonal">
      <summary>
            From left-bottom (BackColor) to right-top (BackColor2).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.DiagonalCenter">
      <summary>
            From center (BackColor) to  left-bottom and right-top (BackColor2).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.DiagonalBack">
      <summary>
            From left-top (BackColor) to right-bottom (BackColor2).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.DiagonalBackCenter">
      <summary>
            From center (BackColor) to left-top and right-bottom (BackColor2).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.Radial">
      <summary>
            From center (BackColor) to corners (BackColor2) in radial direction.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartGradientStyle.FromCenter">
      <summary>
            From center (BackColor) to corners (BackColor2).
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartHatchStyle">
      <summary>
            Specifies the style of hatch background.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.None">
      <summary>
            No pattern.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Horizontal">
      <summary>
            A pattern of horizontal lines.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Vertical">
      <summary>
            A pattern of vertical lines.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.ForwardDiagonal">
      <summary>
            A pattern of lines diagonal from upper left to lower right.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.BackwardDiagonal">
      <summary>
            A pattern of lines diagonal from upper right to lower left.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Cross">
      <summary>
            Specifies horizontal and vertical lines that cross.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DiagonalCross">
      <summary>
            Specifies forward diagonal and backward diagonal lines that cross. The lines are antialiased.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent05">
      <summary>
            Specifies a 5-percent hatch. The ratio of foreground color to background color is 5:100.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent10">
      <summary>
            Specifies a 10-percent hatch. The ratio of foreground color to background color is 10:100.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent20">
      <summary>
            Specifies a 20-percent hatch. The ratio of foreground color to background color is 20:100.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent25">
      <summary>
            Specifies a 25-percent hatch. The ratio of foreground color to background color is 25:100.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent30">
      <summary>
            Specifies a 30-percent hatch. The ratio of foreground color to background color is 30:100.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent40">
      <summary>
            Specifies a 40-percent hatch. The ratio of foreground color to background color is 40:100.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent50">
      <summary>
            Specifies a 50-percent hatch. The ratio of foreground color to background color is 50:100.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent60">
      <summary>
            Specifies a 60-percent hatch. The ratio of foreground color to background color is 60:100.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent70">
      <summary>
            Specifies a 70-percent hatch. The ratio of foreground color to background color is 70:100.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent75">
      <summary>
            Specifies a 75-percent hatch. The ratio of foreground color to background color is 75:100.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent80">
      <summary>
            Specifies a 80-percent hatch. The ratio of foreground color to background color is 80:100.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Percent90">
      <summary>
            Specifies a 90-percent hatch. The ratio of foreground color to background color is 90:100.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.LightDownwardDiagonal">
      <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points and
            are spaced 50 percent closer together than ForwardDiagonal, but they are not antialiased.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.LightUpwardDiagonal">
      <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points and
            are spaced 50 percent closer together than BackwardDiagonal, but they are not antialiased.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DarkDownwardDiagonal">
      <summary>
            Specifies diagonal lines that slant to the right from top points to bottom points,
            are spaced 50 percent closer together than, and are twice the width of ForwardDiagonal.
            This hatch pattern is not antialiased.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DarkUpwardDiagonal">
      <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points,
            are spaced 50 percent closer together than BackwardDiagonal, and are twice its width,
            but the lines are not antialiased.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.WideDownwardDiagonal">
      <summary>
            Specifies diagonal lines that slant to the right from top points to bottom points,
            have the same spacing as hatch style ForwardDiagonal, and are triple its width, but are not antialiased.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.WideUpwardDiagonal">
      <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points,
            have the same spacing as hatch style BackwardDiagonal, and are triple its width, but are not antialiased.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.LightVertical">
      <summary>
            Specifies vertical lines that are spaced 50 percent closer together than Vertical.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.LightHorizontal">
      <summary>
            Specifies horizontal lines that are spaced 50 percent closer together than Horizontal.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.NarrowVertical">
      <summary>
            Specifies vertical lines that are spaced 75 percent closer together
            than hatch style Vertical (or 25 percent closer together than LightVertical).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.NarrowHorizontal">
      <summary>
            Specifies horizontal lines that are spaced 75 percent closer together
            than hatch style Horizontal (or 25 percent closer together than LightHorizontal).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DarkVertical">
      <summary>
            Specifies vertical lines that are spaced 50 percent closer together than Vertical and are twice its width.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DarkHorizontal">
      <summary>
            Specifies horizontal lines that are spaced 50 percent closer together than Horizontal and are twice its width.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DashedDownwardDiagonal">
      <summary>
            Specifies dashed diagonal lines that slant to the right from top points to bottom points.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DashedUpwardDiagonal">
      <summary>
            Specifies dashed diagonal lines that slant to the left from top points to bottom points.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DashedHorizontal">
      <summary>
            Specifies dashed horizontal lines.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DashedVertical">
      <summary>
            Specifies dashed vertical lines.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.SmallConfetti">
      <summary>
            Specifies a hatch that has the appearance of confetti.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.LargeConfetti">
      <summary>
            Specifies a hatch that has the appearance of confetti,
            and is composed of larger pieces than SmallConfetti.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.ZigZag">
      <summary>
            Specifies horizontal lines that are composed of zigzags.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Wave">
      <summary>
            Specifies horizontal lines that are composed of tildes.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DiagonalBrick">
      <summary>
            Specifies a hatch that has the appearance of layered bricks that
            slant to the left from top points to bottom points.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.HorizontalBrick">
      <summary>
            Specifies a hatch that has the appearance of horizontally layered bricks.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Weave">
      <summary>
            Specifies a hatch that has the appearance of a woven material.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Plaid">
      <summary>
            Specifies a hatch that has the appearance of a plaid material.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Divot">
      <summary>
            Specifies a hatch that has the appearance of divots.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DottedGrid">
      <summary>
            Specifies horizontal and vertical lines, each of which is composed of dots that cross.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.DottedDiamond">
      <summary>
            Specifies forward diagonal and backward diagonal lines, each of which is composed of dots, that cross.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Shingle">
      <summary>
            Specifies a hatch that has the appearance of diagonally-layered shingles that slant
            to the right from top points to bottom points.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Trellis">
      <summary>
            Specifies a hatch that has the appearance of a trellis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.Sphere">
      <summary>
            Specifies a hatch that has the appearance of spheres laid adjacent to one another.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.SmallGrid">
      <summary>
            Specifies horizontal and vertical lines that cross and are spaced 50 percent
            closer together than hatch style Cross.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.SmallCheckerBoard">
      <summary>
            Specifies a hatch that has the appearance of a checkerboard.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.LargeCheckerBoard">
      <summary>
            Specifies a hatch that has the appearance of a checkerboard with
            squares that are twice the size of SmallCheckerBoard.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.OutlinedDiamond">
      <summary>
            Specifies forward diagonal and backward diagonal lines that cross but are not antialiased.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHatchStyle.SolidDiamond">
      <summary>
            Specifies a hatch that has the appearance of a checkerboard placed diagonally.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAlignHorz">
      <summary>
            Specifies the horizontal alignment of a chart element.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignHorz.General">
      <summary>
            Sets text to be left-aligned and numbers to be right-aligned.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignHorz.Near">
      <summary>
            Aligns text to the near side (left side in left-to-right mode).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignHorz.Center">
      <summary>
            Aligns text to the center.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignHorz.Far">
      <summary>
            Aligns cell text to the far side (right side in left-to-right mode).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignHorz.Justify">
      <summary>
            Spreads text throughout.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAlignImage">
      <summary>
            Specifies the alignment of the image in a chart element.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Hide">
      <summary>
            Image is hidden.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Left">
      <summary>
            Image is aligned to the left.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Right">
      <summary>
            Image is aligned to the right.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Top">
      <summary>
            Image is aligned to the Top.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Bottom">
      <summary>
            Image is aligned to the bottom.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Center">
      <summary>
            Image is center-aligned.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Scale">
      <summary>
            Image is scaled to fit the image area.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Stretch">
      <summary>
            Image is stretched to fit image area.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignImage.Tile">
      <summary>
            Image is tiled throughout the image area.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartRotation">
      <summary>
            Specifies the rotation of a chart element.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartRotation.Rotate0">
      <summary>
            No rotation.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartRotation.Rotate90">
      <summary>
            Object is rotated 90 degrees.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartRotation.Rotate180">
      <summary>
            Object is rotated 180 degrees, or inverted.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartRotation.Rotate270">
      <summary>
            Object is rotated 270 degrees.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAlignVert">
      <summary>
            Specifies the vertical alignment of a chart element.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignVert.Top">
      <summary>
            Aligns text to the top.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignVert.Center">
      <summary>
            Aligns text to the center.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlignVert.Bottom">
      <summary>
            Aligns text to the bottom.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartCompass">
      <summary>
            Specifies the compass position of a chart element.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartCompass.North">
      <summary>
            Object is positioned north or above.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartCompass.South">
      <summary>
            Object is positioned south or below.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartCompass.East">
      <summary>
            Object is positioned east or to the right side.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartCompass.West">
      <summary>
            Object is positioned west or to the left side.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartFitType">
      <summary>
            Specifies the curve fit type of the data eries.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFitType.Line">
      <summary>
            Straight lines connect data points.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFitType.Spline">
      <summary>
            Line passes smoothly through each data point; there are no 
            sharp corners and no abrupt changes in the tightness of the curve.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFitType.Beziers">
      <summary>
            Line does not pass through all data points, but the points act as magnets,
            pulling the curve in certain directions and influencing the way the curve bends.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartSeriesDisplay">
      <summary>
            Specifies the display of the data series.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSeriesDisplay.Show">
      <summary>
            Displays series.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSeriesDisplay.Hide">
      <summary>
            Includes series in the data set, but is not drawn.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSeriesDisplay.Exclude">
      <summary>
            Excludes series from the data set.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSeriesDisplay.ExcludeHoles">
      <summary>
            Displays series, but disregards data holes.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartPlotFilterMethod">
      <summary>
            Specifies the plot filter method of the data series.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPlotFilterMethod.None">
      <summary>
            Data values are not filtered.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPlotFilterMethod.Default">
      <summary>
            Default data filtering algorithm optimizes plotting of large data arrays.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartPlotFilterMethod.Alternative">
      <summary>
            Alternative data filtering algorithm optimizes plotting of large data arrays which
            are ordered along one direction(x or y).
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAttachMethod">
      <summary>
            Specifies the attachment method of the label.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAttachMethod.Coordinate">
      <summary>
            Label can be attached to anywhere on the chart. The number of twips between
            the top-left corner of the chart to the ChartLabel can be specified.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAttachMethod.DataCoordinate">
      <summary>
            Label is attached to anywhere inside the PlotArea. The data coordinates can be specified.
            This method is not allowed on pie charts.
            If any part of the ChartLabel falls outside of the ChartArea, it is clipped.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAttachMethod.DataIndex">
      <summary>
            Label is attached to a specific data point on the chart.
            The series and point indices and the chart group can be specified.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAttachMethod.DataIndexY">
      <summary>
            Label is attached to a distance above or below a specific data point.
            The series and point indices, the ChartGroup, and the Y-coordinate can be specified. 
            This is most useful for bar and stacking bar charts.
            For 2D chart only.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLabelCompass">
      <summary>
            Specifies the position of the label relative it's spefified location.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.North">
      <summary>
            Places label to the north or above the data point.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.NorthEast">
      <summary>
            Places label to the NorthEast or above and right of the data point.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.East">
      <summary>
            Places label to the East or to the right of the data point.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.SouthEast">
      <summary>
            Places label to the SouthEast or below and right of the data point.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.South">
      <summary>
            Places label to the South or below the data point.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.SouthWest">
      <summary>
            Places label to the SouthWest or below and left of the data point.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.West">
      <summary>
            Places label to the West or left of the data point.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.NorthWest">
      <summary>
            Places label to the NorthWest or above and left of the data point.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.Radial">
      <summary>
            In a pie chart, places label directly away from the center of the chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.Orthogonal">
      <summary>
            Places label perpendicularly away from the plot line.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.Auto">
      <summary>
            Places label automatically. The parameters of auto-arrangement are specified in
            AutoArrangment property of ChartLabels class. 
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelCompass.RadialText">
      <summary>
            Places label perpendicularly away from the plot line and orients the text along that line.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementMethod">
      <summary>
            Specifies the method of label auto arrangement.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementMethod.Decimation">
      <summary>
            The method removes labels which cannot be placed without overlapping.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementMethod.FindingOptimum">
      <summary>
            This method tries to position labels avoiding its overlapping.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions">
      <summary>
            Specifies positioning options for label auto arrangement.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.Default">
      <summary>
            Allows any label position.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.Top">
      <summary>
            Allows top label position.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.Left">
      <summary>
            Allows left label position.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.Bottom">
      <summary>
            Allows bottom label position.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.Right">
      <summary>
            Allows right label position.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.TopRight">
      <summary>
            Allows top right label position.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.BottomRight">
      <summary>
            Allows bottom right label position.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.BottomLeft">
      <summary>
            Allows bottom left label position.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.TopLeft">
      <summary>
            Allows top left label position.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAutoLabelArrangementOptions.UseDataPoints">
      <summary>
            Labels should not cover data points.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLinePattern">
      <summary>
            Specifies the pattern of the line.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLinePattern.Solid">
      <summary>
            A solid line.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLinePattern.Dash">
      <summary>
            A dashed line.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLinePattern.Dot">
      <summary>
            A dotted line.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLinePattern.DashDot">
      <summary>
            A line with alternating dashes and dots.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLinePattern.DashDotDot">
      <summary>
            A line with series consisting of a dash followed by two dots.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLinePattern.None">
      <summary>
            No line is drawn.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLineJoin">
      <summary>
            Specifies how to join consecutive line or curve segments in a figure (subpath).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLineJoin.Miter">
      <summary>
            Specifies a mitered join. This produces a sharp corner or a clipped corner,
            depending on whether the length of the miter exceeds the miter limit.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLineJoin.Bevel">
      <summary>
            Specifies a beveled join. This produces a diagonal corner.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLineJoin.Round">
      <summary>
            Specifies a circular join. This produces a smooth, circular arc between the lines.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLineJoin.MiterClipped">
      <summary>
            Specifies a mitered join. This produces a sharp corner or a beveled corner,
            depending on whether the length of the miter exceeds the miter limit.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartFillType">
      <summary>
            Specifies how data shapes are filled.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFillType.SolidColor">
      <summary>
            Solid color is used for filling using Color1.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFillType.Gradient">
      <summary>
            A two color gradient is used to fill using Color1 and Color2 with a pattern enumerated by the <see cref="T:C1.Win.FlexReport.Chart.ChartGradientStyle" />.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFillType.Hatch">
      <summary>
            A two color hatch pattern is used to fill using Color1 and Color2 with a pattern enumerated by the <see cref="T:C1.Win.FlexReport.Chart.ChartHatchStyle" />.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFillType.Texture">
      <summary>
            A texture is created by filing the specified image of the <see cref="T:C1.Win.FlexReport.Chart.ChartFillStyle" />.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartSymbolShape">
      <summary>
            Specifies the shape of a data point symbol.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.None">
      <summary>
            No symbol represents a data point.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Box">
      <summary>
            A data point is represented by a solid square.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Dot">
      <summary>
            A data point is represented by a solid circle.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Tri">
      <summary>
            A data point is represented by a solid triangle.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Diamond">
      <summary>
            A data point is represented by a solid diamond.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.InvertedTri">
      <summary>
            A data point is represented by a solid inverted triangle.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Star">
      <summary>
            A data point is represented by a solid star.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.VerticalLine">
      <summary>
            A data point is represented by a short vertical line.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.HorizontalLine">
      <summary>
            A data point is represented by a short horizontal line.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Cross">
      <summary>
            A data point is represented by crossed horizontal and vertical lines.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.DiagCross">
      <summary>
            A data point is represented by diagonal crossed lines.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Circle">
      <summary>
            A data point is represented by the outline of a circle.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.Square">
      <summary>
            A data point is represented by the outline of a square.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.OpenTri">
      <summary>
            A data point is represented by the outline of a triangle.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.OpenDiamond">
      <summary>
            A data point is represented by the outline of a diamond.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartSymbolShape.OpenInvertedTri">
      <summary>
            A data point is represented by the outline of an inverted triangle.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartHistogramDisplayType">
      <summary>
            Specifies the method used to display the frequency data.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHistogramDisplayType.Histogram">
      <summary>
            Displays the intervals and counts as a histogram.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHistogramDisplayType.FrequencyGraph">
      <summary>
            Displays the intervals and counts as a frequency graph.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHistogramDisplayType.SteppedFrequencyGraph">
      <summary>
            Displays the intervals and counts as a stepped frequency graph.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartHistogramIntervalMethod">
      <summary>
            Specifies the method used to specify the histogram intervals.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHistogramIntervalMethod.Automatic">
      <summary>
            Interval boundaries and width are calculated based on the data statistics.
            The number of intervals is an optional input.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHistogramIntervalMethod.SemiAutomatic">
      <summary>
            Starting interval, interval width, and the number of intervals specify interval boundaries. 
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartHistogramIntervalMethod.XDataBoundaries">
      <summary>
            The X data inputs will be used for interval boundaries.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLegendOrientation">
      <summary>
            Specifies the orientation of the chart legend.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLegendOrientation.Auto">
      <summary>
            Horizontal for legends with north and south Compass values,
            and Vertical for legends with east and west Compass values.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLegendOrientation.Vertical">
      <summary>
            Legend entries are added side by side as (horizontally) as legend width permits.
            If sufficient width is not available, additional legend rows are created.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLegendOrientation.Horizontal">
      <summary>
            Legend entries are stacked vertically as legend height permits.
            If sufficient height is not available, additional legend columns are created.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLegendOrientation.HorizontalVariableItemWidth">
      <summary>
            The same as Horizontal, but entries can have different widths according to its content.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLegendOrientation.VerticalVariableItemHeight">
      <summary>
            The same as Vertical, but entries can have different heights according to its content.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLabelView3D">
      <summary>
            Specifies the 3D-view plane of the chart label of 3D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelView3D.None">
      <summary>
            Label is drawn in 2D plane of screen.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelView3D.XZ">
      <summary>
            Label is drawn in 3D plane parallel to XZ plane.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLabelView3D.YZ">
      <summary>
            Label is drawn in 3D plane parallel to YZ plane.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DAnnotationMethod">
      <summary>
            Specifies the method of axis annotation of 2D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DAnnotationMethod.Values">
      <summary>
            The axis will be annotated with values.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DAnnotationMethod.ValueLabels">
      <summary>
            The axis will be annotated with value labels specified in the Chart2DValueLabelsCollection.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DAnnotationMethod.Mixed">
      <summary>
            Both values and value labels will be visible.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAxisId">
      <summary>
            Specifies the ID (type) of the axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisId.X">
      <summary>
            Refers to the X axis of 2D or 3D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisId.Y">
      <summary>
            Refers to the Y axis of 2D or 3D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisId.Y2">
      <summary>
            Refers to the Y2 axis of 2D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisId.Z">
      <summary>
            Refers to the Z axis of 3D chart.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DTickMarks">
      <summary>
            Specifies the type of tick mark of 2D chart axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickMarks.None">
      <summary>
            No tick marks along axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickMarks.Inside">
      <summary>
            Tick marks located inside chart area on axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickMarks.Outside">
      <summary>
            Tick marks located outside chart area on axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickMarks.Cross">
      <summary>
            Tick marks cross over axis.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart2DTickLabels">
      <summary>
            Specifies the placement of the annotation labels relative to the 2D chart aixs.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickLabels.None">
      <summary>
            No annotations along the axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickLabels.High">
      <summary>
            Annotations are drawn near the maximum value of the perpendicular axis, and inside the
            plot area.  For X axis annotations, if data is not available for Group0 and is available
            for Group1, the Y2 axis determines the location, otherwise the Y axis is used.
            Annotations which overlap the crossing axis are eliminated.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickLabels.Low">
      <summary>
            Annotations are drawn near the minimum value of the perpendicular axis, and inside the
            plot area.  For X axis annotations, if data is not available for Group0 and is available
            for Group1, the Y2 axis determines the location, otherwise the Y axis is used.
            Annotations which overlap the crossing axis are eliminated.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart2DTickLabels.NextToAxis">
      <summary>
            Annotations are drawn next to the axis.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartFormat">
      <summary>
            Specifies the annotion format of the 2D chart axis.
            </summary>
      <remarks>
            See .Net date and time format strings and standard numeric format strings for more information.
            </remarks>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericManual">
      <summary>
            Used in conjunction with the ChartAxis AnnoFormatString property
            to specify a .Net custom numeric format.
            (See custom numeric format strings in the .Net documentation).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericCurrency">
      <summary>
            A currency amount format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericGeneral">
      <summary>
            A general number format. Formatted into the most compact decimal
            form using fixed or scientific notation.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericExponential">
      <summary>
            A scientific or exponential format in the form "-d.ddd…E+ddd" or "-d.ddd…e+ddd".		 
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericPercentage">
      <summary>
            A percentage amount format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericRoundtrip">
      <summary>
            A format which guarantees that a numeric value after being
            converted will be returned as the same numeric value.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.NumericHexadecimal">
      <summary>
            A hexadecimal format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateManual">
      <summary>
            Used in conjunction with the ChartAxis AnnoFormatString property
            to specify a .Net custom date/datetime format.
            (See custom date and time format strings in the .Net documentation).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateShort">
      <summary>
            A short date format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateLong">
      <summary>
            A long date format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateFullShortTime">
      <summary>
            A long date and short time format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateFull">
      <summary>
            A full date format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateGeneralShortTime">
      <summary>
            A general date format with short time format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateGeneral">
      <summary>
            A general date format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateMonth">
      <summary>
            A month format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateRFC1123">
      <summary>
            A date format based on the IETF RFC 1123 specification.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateSortable">
      <summary>
            A sortable date format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateShortTime">
      <summary>
            A short time format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateLongTime">
      <summary>
            A long time format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateUniversalSortable">
      <summary>
            A universally sortable date format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateUniversal">
      <summary>
            A universal date format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartFormat.DateYear">
      <summary>
            A year format.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAxisAlignment">
      <summary>
            Specifies the alignment of a text string relative to its layout rectangle.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisAlignment.Near">
      <summary>
            Specifies the text be aligned near the layout. 
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisAlignment.Center">
      <summary>
            Specifies that text is aligned in the center of the layout rectangle.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisAlignment.Far">
      <summary>
            Specifies that text is aligned far from the origin position of the layout rectangle.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartValueLabelAppearance">
      <summary>
            Specifies the appearance of the value label of 2D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartValueLabelAppearance.Label">
      <summary>
            Only text label.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartValueLabelAppearance.TriangleMarker">
      <summary>
            Label with triangle marker.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartValueLabelAppearance.ArrowMarker">
      <summary>
            Label with arrow marker.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartShading">
      <summary>
            Specifies the type of shading used for color of 3D areas of 2D chart, when chart with 3D-effects is rendered.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartShading.None">
      <summary>
            No special 3D color is applied.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartShading.ColorLight">
      <summary>
            3D color is lighter than front color.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartShading.ColorDark">
      <summary>
            3D color is darker than front color.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartBarAppearance">
      <summary>
            Specifies appearance of bar chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBarAppearance.Default">
      <summary>
            Specifies default(rectangular) appearance.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBarAppearance.Cylinder">
      <summary>
            Specifies cylindrical appearance. 
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBarAppearance.Cone">
      <summary>
            Specifies conical appearance. 
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBarAppearance.Pyramid">
      <summary>
            Specifies pyramidal appearance. 
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartBubbleMethod">
      <summary>
            Specifies the method used for calculating bubble size in a bubble chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBubbleMethod.Diameter">
      <summary>
            Sizes symbols according to diameter.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartBubbleMethod.Area">
      <summary>
            Sizes symbols according to area.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAxisLabelsSource">
      <summary>
            Specifies the source of x-axis for a Gantt chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisLabelsSource.SeriesLabels">
      <summary>
            Series labels are used as axis labels.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisLabelsSource.XValues">
      <summary>
            X data values are used for axis annotation.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAxisLabelsSource.None">
      <summary>
            No axis labels.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DAnnotationMethod">
      <summary>
            Specifies the method of axis annotation of 3D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnotationMethod.Auto">
      <summary>
            The axis will be annotated automatically by the chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnotationMethod.DataLabels">
      <summary>
            Annotate using data labels in chart group.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnotationMethod.ValueLabels">
      <summary>
            Annotate using ValueLabels property.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnotationMethod.Values">
      <summary>
            Annotate using chart's values.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DAnnoPosition">
      <summary>
            Specifies which axes edges of the plot cube will have annotations.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnoPosition.Both">
      <summary>
            The axis on both sides of the plot cube will be annotated.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnoPosition.Near">
      <summary>
            The axis on the near side of the plot cube will be annotated.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnoPosition.Far">
      <summary>
            The axis on the far side of the plot cube will be annotated.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DAnnoPosition.None">
      <summary>
            The axis is not annotated.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DType">
      <summary>
            Specifies the type of the 3D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DType.Scatter">
      <summary>
            Scatter chart type. 
            For GridData and IrGridData, needs one data value which specifies the Z value, 
            X value from category groups, Y value from series groups.
            For PointData, needs three data values which specifies the X, Y and Z value.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DType.Bar">
      <summary>
            Bar chart type. 
            Needs one data value which specifies the Z value.X value from category groups, Y value from series groups.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DType.Surface">
      <summary>
            Surface chart type. 
            Needs one data value which specifies the Z value.X value from category groups, Y value from series groups.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DTextRotation">
      <summary>
            Specifies the text rotation in 3D cube.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DTextRotation.RotNo">
      <summary>
            No rotation.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DTextRotation.Rot2D">
      <summary>
            Rotate in the plane of screen.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DTextRotation.Rot3D">
      <summary>
            Rotate in 3D space.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DView3D">
      <summary>
            Specifies the predefined view of the 3D cube.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.Default">
      <summary>
            Default view.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.XY_2D_Pos">
      <summary>
            View XY-plane from positive edge of Z-axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.XY_2D_Neg">
      <summary>
            View XY-plane from negative edge of Z-axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.XZ_2D_Pos">
      <summary>
            View XZ-plane from positive edge of Y-axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.XZ_2D_Neg">
      <summary>
            View XZ-plane from negative edge of Y-axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.YZ_2D_Pos">
      <summary>
            View YZ-plane from positive edge of X-axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.YZ_2D_Neg">
      <summary>
            View YZ-plane from negative edge of X-axis.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DView3D.Custom">
      <summary>
            Custom view.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DBarFormat">
      <summary>
            Specifies the format of the 3D bar.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DBarFormat.Fixed">
      <summary>
            Fixed format (bars are fixed width and centered about their X or Y values).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DBarFormat.Histogram">
      <summary>
            Histogram format (each bar fills the space up to its adjoining bar).
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DContourMethod">
      <summary>
            Specifies the contour calculation method of 3D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DContourMethod.Default">
      <summary>
            Default method of contour calculation.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DContourMethod.Classic">
      <summary>
            Previous default method of contour calculation prior before recent improvements.
            This ContourMethod is provided for compatibility with previous results.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DContourMethod.MarchingSquares">
      <summary>
            Method of marching squares that provides an alternate contour calculation.
            This method requires an increased number of calculations, but tends to
            improve contour symmetry. 
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DZoneMethod">
      <summary>
            Specifies the zone calculation method of 3D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DZoneMethod.Contours">
      <summary>
            Contour zoning, a cell can have different colors, according to corresponding contour level.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DZoneMethod.Cells">
      <summary>
            Cell zoning, a cell can have only one color.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartColorSet">
      <summary>
            Specifies the predefined colors for contour styles of 3D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.Custom">
      <summary>
            Custom color set
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.Rainbow">
      <summary>
            Rainbow colors
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.RevRainbow">
      <summary>
            Rainbow colors in the reverse order
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.BlackWhite">
      <summary>
            Grayscale colors
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.WhiteBlack">
      <summary>
            Grayscale colors in the reverse order
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.GreenBlue">
      <summary>
            Colors from green to blue
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.RedWhite">
      <summary>
            Colors from red to white
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.BluePink">
      <summary>
            Colors from blue to pink
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.BlueWhiteRed">
      <summary>
            Colors blue -&gt; white -&gt;red
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.BlackRedYellow">
      <summary>
            Colors black -&gt; red -&gt; yellow
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorSet.GreenPurpleYellow">
      <summary>
            Colors green -&gt; purple -&gt; yellow
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DDataLayout">
      <summary>
            Specifies the data layout of 3D chart data.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DDataLayout.PointData">
      <summary>
            Point data.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DDataLayout.GridData">
      <summary>
            Regular grid data.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DDataLayout.IrGridData">
      <summary>
            Irregular grid data.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLightGradient">
      <summary>
            Specifies the type of light gradient of the visual effects style.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLightGradient.Simple">
      <summary>
            Light gradient effects are linear through the object based on shape.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLightGradient.Triangle">
      <summary>
            Light gradient effects progress from color, to light, to color.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLightGradient.SigmeBell">
      <summary>
            Light gradient effects progress from color, to light, to color with a
            weighted light distribution.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLightShape">
      <summary>
            Specifies the shape of light of visual effects style.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLightShape.Rectangle">
      <summary>
            Light gradient effects progress from one edge of the object to the
            opposite edge.  The Scale property of the LightStyle can be used to
            adjust the length of the gradient cycle within the object.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLightShape.Ellipse">
      <summary>
            Light gradient effects progress the center of the object to
            the outer edges.  The Shift and Size properties of the LightStyle can
            be used to adjust the center and size of the ellipse.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartLightShape.Edge">
      <summary>
            Light effects are skewed near the edge of the object.
            The LightGradient is always elliptical with this shape.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAlarmZoneShape">
      <summary>
            Specifies the shape of the <see cref="T:C1.Win.FlexReport.Chart.ChartAlarmZone" />.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlarmZoneShape.Rectangle">
      <summary>
            A rectangle specified by the data coordinates of the ChartAlarmZone extents.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartAlarmZoneShape.Ellipse">
      <summary>
            An ellipse bounded by the a rectangle specified by the data coordinates of the ChartAlarmZone extents.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DLegendSeparator">
      <summary>
            Specifies the separator between ragne value of a stepped legend.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DLegendSeparator.Ellipsis">
      <summary>
            Specifies an ellipsis (..) between values of a stepped legend range.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DLegendSeparator.Dash">
      <summary>
            Specifies a dash (-) between values of a stepped legend range.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.Chart3DLegendType">
      <summary>
            Specifies the legend type of zoned 3D chart.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DLegendType.Stepped">
      <summary>
            Range printed for each zone.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.Chart3DLegendType.Continuous">
      <summary>
            Level printed at the division between two adjacent zones.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartColorMode">
      <summary>
            Sepecifies the color mode of each category and series.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorMode.Default">
      <summary>
            For 2D chart, set different color for each series. 
            For 3D chart, set same color for each point.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorMode.ColorBySeries">
      <summary>
            Set different color for each series.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorMode.ColorByCategory">
      <summary>
            Set different color for each category.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartColorMode.Auto">
      <summary>
            Set the color of each category and series automatically.
            <para>Set different color for each category if there is only one series.</para><para>Set different color for each series if there are more than one series.</para></summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartImageType">
      <summary>
            Specifies the type of image to generate.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartImageType.Emf">
      <summary>
            Enhanced Windows metafile image format (EMF).
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartImageType.Png">
      <summary>
            W3C Portable Network Graphics (PNG) image format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartImageType.Gif">
      <summary>
            Graphics Interchange Format (GIF) image format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartImageType.Jpeg">
      <summary>
            Joint Photographic Experts Group (JPEG) image format.
            </summary>
    </member>
    <member name="F:C1.Win.FlexReport.Chart.ChartImageType.Bmp">
      <summary>
            Bitmap image format (BMP).
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLabels">
      <summary>
            Represents a container for all chart labels.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabels.DefaultLabelStyle">
      <summary>
            Gets the default style of a chart label.
            </summary>
      <remarks>
            All labels inherit from this style.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabels.LabelsCollection">
      <summary>
            Gets the collection of all chart labels.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabels.AutoArrangement">
      <summary>
            Gets the ChartAutoLabelArrangement object which controls auto arrangement of 2D chart labels.
            </summary>
      <remarks>
            Auto arrangement applies only to labels with LabelCompass = Auto.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLabelsCollection">
      <summary>
            Contains all chart labels defined for a particular chart.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartLabelsCollection.Add(C1.Win.FlexReport.Chart.ChartLabel)">
      <summary>
            Adds an existing chart label to the collection.
            </summary>
      <param name="label">The chart label to add.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartLabelsCollection.AddNewLabel">
      <summary>
            Adds a new chart label to the collection.
            </summary>
      <returns>The newly added chart label.</returns>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartLabelsCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the chart label at the specific index.
            </summary>
      <param name="index">The index of the chart label to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartLabelsCollection.Remove(C1.Win.FlexReport.Chart.ChartLabel)">
      <summary>
            Removes an existing chart label from the collection.
            </summary>
      <param name="label">The chart label to remove.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartLabelsCollection.Clear">
      <summary>
            Remove all items from the collection.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLabel">
      <summary>
            Represents an independent text annotation that can be attached to a chart.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartLabel.#ctor">
      <summary>
            Initializes a new instance of ChartLabel object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Connected">
      <summary>
            Gets or sets a value indicating whether a connecting line is drawn to the associated data point.
            </summary>
      <remarks>
            If drawn, this connecting line is one pixel wide, and is drawn using the foregorund color.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Name">
      <summary>
            Gets or sets the label name.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Offset">
      <summary>
            Gets or sets the offset distance from the associated data point in twips.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Text">
      <summary>
            Gets or sets the label text.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.AttachMethod">
      <summary>
            Gets or sets the label attachment method.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.AttachMethodData">
      <summary>
            Gets the attachment data for the label.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Compass">
      <summary>
            Gets or sets the position of the label relative to its specified location.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.RotationOverride">
      <summary>
            Gets or sets the rotation angle of the label, in degrees. Overrides the Rotation value set in the style.
            </summary>
      <remarks>
            2D Chart only. Applies only to label with Compass values other than Radial and RadialText. 
            Only nonzero values are applied.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.View3D">
      <summary>
            Gets or set the 3D-View plane of a label of a 3D chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Style">
      <summary>
            Gets the ChartStyle object of the label.
            Inherits from the ChartLabels.DefaultLabelStyle property.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLabel.Image">
      <summary>
            Gets or sets the label's image.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAttachMethodData">
      <summary>
            Specifies how a <see cref="T:C1.Win.FlexReport.Chart.ChartLabel" /> is placed or attached to a chart.
            </summary>
      <remarks>
            Each of the ChartAttachMethodData object properties is meaningful only in the context of a <see cref="P:C1.Win.FlexReport.Chart.ChartLabel.AttachMethod" /> value.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAttachMethodData.GroupIndex">
      <summary>
            Gets or sets the group index of the data point to attach a label when the label AttachMethod property specifies DataIndex attachment.
            For 2D charts only (for 3D charts, there is only one chart group).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAttachMethodData.SeriesIndex">
      <summary>
            Gets or sets the series index of the data point to attach a label to when the label AttachmentMethod property specifies DataIndex attachment.
            </summary>
      <remarks>
            For 3D chart, it means the series index of the data point if the data layout specified is point layout, 
            and the column of the data point if the data layout sepcified is regular or irregular grid.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAttachMethodData.PointIndex">
      <summary>
            Gets or sets the point index of the data point to attach a label to when the label AttachMethod property specifies DataIndex attachment.
            </summary>
      <remarks>
            For 3D chart, it means the point index of the data point if the data layout specified is point layout,
            and means the row of the data point if the data layout specified is regular or irregular grid.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAttachMethodData.X">
      <summary>
            Gets or sets the X coordinate (client or data) when label AttachMethod property specifies Coordinate or DataCoordinate attachment.
            </summary>
      <remarks>
            The units is twips for client coordinate.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAttachMethodData.Y">
      <summary>
            Gets or sets the Y coordinate (client or data) when label AttachMethod property specifies Coordinate, DataCoordinate or DataIndexY attachment.
            </summary>
      <remarks>
            The units is twips for client coordinate.
            It means the Y data coordinate for DataIndexY (2D chart Only) attachment.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAttachMethodData.Z">
      <summary>
            Gets or sets the Z data coordinate when label AttachMethod property specifies DataCoordinate attachment.
            </summary>
      <remarks>
            3D chart only.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartAutoLabelArrangement">
      <summary>
            Represents settings of label auto-arrangement
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAutoLabelArrangement.Method">
      <summary>
            Gets or sets the options of label arrangement.
            </summary>
      <remarks>
            The options is a bitwise combination of ChartAutoLabelArrangementOptionsEnum elements. 
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAutoLabelArrangement.Options">
      <summary>
            Gets or sets the method of label arrangement.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAutoLabelArrangement.MaxIterations">
      <summary>
            Gets or sets the maximum number of iterations (relevant only for ChartAutoLabelArrangementMethodEnum.FindingOptimum).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartAutoLabelArrangement.Offset">
      <summary>
            Gets or sets the maximum offset distance from the associated point, in twips.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartPropertyBagObject">
      <summary>
            The abstract base class for chart objects which manages property values in property bag.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartPropertyBagObject.SetProperty(System.String,System.Object)">
      <summary>
            Modify the property value. Force to set if equals default value.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartPropertyBagObject.SetProperty(System.String,System.Object,System.Object)">
      <summary>
            Modify one property value.Reset to default state if it equals default value.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartPropertyBagObject.GetProperty(System.String,System.Object)">
      <summary>
            Gets one property value.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartPropertyBagObject.RemoveProperty(System.String)">
      <summary>
            Reset one property to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartPropertyBagObject.HasProperty(System.String)">
      <summary>
            Indicates whether one property is modified.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartFillStyle">
      <summary>
            Represents the fill style of various elements of the chart,
            including the chart itself, the chart area, legend, header, footer and labels.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.FillType">
      <summary>
            Gets or sets the fill type.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.Color1">
      <summary>
            Gets or sets the fill color.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.Color2">
      <summary>
            Gets or sets the second fill color.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.OutlineColor">
      <summary>
            Gets or sets the color of filled region outlines.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.GradientStyle">
      <summary>
            Gets or sets the fill gradient style.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.HatchStyle">
      <summary>
            Gets or sets the fill hatch style.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.Alpha">
      <summary>
            Gets or sets the fill alpha value (transparency).
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.OutlineThickness">
      <summary>
            Gets or sets the thickness of filled region outlines.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartFillStyle.Image">
      <summary>
            Gets or sets the fill image.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartSymbolStyle">
      <summary>
            Represents the style of chart symbols.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSymbolStyle.Color">
      <summary>
            Gets or sets the color of the data point symbol.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSymbolStyle.OutlineColor">
      <summary>
            Gets or sets the outline color of the data point symbol.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSymbolStyle.OutlineWidth">
      <summary>
            Gets or sets the outline width of the data piont symbol, in twips.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSymbolStyle.Shape">
      <summary>
            Gets or sets the shape of the data point symbol.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartSymbolStyle.Size">
      <summary>
            Gets or sets the size of the data point symbol, in twips.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartStyle">
      <summary>
            Represents the appearance of various elements of a chart,
            including the chart itself, the chart area, legend, header, footer and labels.
            Typically, an object's style and/or one or more of its properties are inherited
            from the object's parent style or its default style.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.#ctor">
      <summary>
            Initializes a new instance of ChartStyle object.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeAutowrap">
      <summary>
            Returns false if Autowrap is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetAutowrap">
      <summary>
            Resets the Autowrap to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeBackColor">
      <summary>
            Returns false if BackColor is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetBackColor">
      <summary>
            Resets the BackColor to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeBackColor2">
      <summary>
            Returns false if BackColor2 is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetBackColor2">
      <summary>
            Resets the BackColor2 to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeBorder">
      <summary>
            Returns false if Border is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetBorder">
      <summary>
            Resets the Border to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeFont">
      <summary>
            Returns false if Font is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetFont">
      <summary>
            Resets the Font to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeForeColor">
      <summary>
            Returns false if ForeColor is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetForeColor">
      <summary>
            Resets the ForeColor to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeGradientStyle">
      <summary>
            Returns false if GradientStyle is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetGradientStyle">
      <summary>
            Resets the GradientStyle to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeHatchStyle">
      <summary>
            Returns false if HatchStyle is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetHatchStyle">
      <summary>
            Resets the HatchStyle to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeHorizontalAlignment">
      <summary>
            Returns false if HorizontalAlignment is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetHorizontalAlignment">
      <summary>
            Resets the HorizontalAlignment to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeImageAlignment">
      <summary>
            Returns false if ImageAlignment is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetImageAlignment">
      <summary>
            Resets the ImageAlignment to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeOpaque">
      <summary>
            Returns false if Opaque is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetOpaque">
      <summary>
            Resets the Opaque to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeRotation">
      <summary>
            Returns false if Rotation is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetRotation">
      <summary>
            Resets the Rotation to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeVerticalAlignment">
      <summary>
            Returns false if VerticalAlignment is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetVerticalAlignment">
      <summary>
            Resets the VerticalAlignment to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ShouldSerializeVerticalText">
      <summary>
            Returns false if VerticalText is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartStyle.ResetVerticalText">
      <summary>
            Resets the VerticalText to default state.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.Autowrap">
      <summary>
            Gets or sets a value indicating whether text automatically wraps.
            </summary>
      <remarks>
            Most text containing objects within Chart can automatically wrap text within them,
            including header, footer, axes titles, labels and the legend (title only, not series names).
            However, all of these objects can be sized automatically.  Automatic sizing is always based
            upon a single line of text whenever possible.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.BackColor">
      <summary>
            Gets or sets the background color.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.BackColor2">
      <summary>
            Gets or sets the second background color for gradient or hatch background.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.Border">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.Chart.ChartBorder" /> object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.Font">
      <summary>
            Gets or sets the <see cref="T:C1.Win.FlexReport.FontHolder" /> object.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.ForeColor">
      <summary>
            Gets or sets the foreground color.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.GradientStyle">
      <summary>
            Gets or sets the style of gradient background filling.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.HatchStyle">
      <summary>
            Gets or sets the style of hatch background filling.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.HorizontalAlignment">
      <summary>
            Gets or sets the text horizontal alignment.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.ImageAlignment">
      <summary>
            Gets or sets the image alignment.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.Opaque">
      <summary>
            Gets or sets a value indicating whether the background is opaque.
            </summary>
      <remarks>
            If an object's Opaque property is true, then the object's background is brushed
            in the backcolor before the foreground is drawn.  If an object's Opaque property is false,
            the background is not brushed and only the object's foreground is drawn. 
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.Rotation">
      <summary>
            Gets or sets the text rotation.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.VerticalAlignment">
      <summary>
            Gets or sets the text vertical alignment.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartStyle.VerticalText">
      <summary>
            Gets or sets a value indicating whether text is displayed vertically.
            </summary>
      <remarks>
            VerticalText allows some double byte characters to be
            rendered from top to bottom instead of left to right. For single byte
            characters VerticalText appears as rotated text, 90 degrees in the
            clockwise direction.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartBorder">
      <summary>
            Represents the appearance of borders around various elements of a chart, 
            including the chart itself, the chart area, legend, header, footer and labels.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.#ctor">
      <summary>
            Initializes a new instance of ChartBorder class.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ShouldSerializeBorderStyle">
      <summary>
            Returns false if BorderStyle is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ResetBorderStyle">
      <summary>
            Resets the BorderStyle to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ShouldSerializeColor">
      <summary>
            Returns false if Color is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ResetColor">
      <summary>
            Resets the Color to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ShouldSerializeRounding">
      <summary>
            Returns false if Rounding is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ResetRounding">
      <summary>
            Resets the Rounding to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ShouldSerializeThickness">
      <summary>
            Returns false if Thickness is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartBorder.ResetThickness">
      <summary>
            Resets the Thickness to default state.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBorder.BorderStyle">
      <summary>
            Gets or sets the border style.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBorder.Color">
      <summary>
            Gets or sets the border color.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBorder.Rounding">
      <summary>
            Gets the <see cref="T:C1.Win.FlexReport.Chart.ChartRounding" /> object that controls the rounding of corners.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartBorder.Thickness">
      <summary>
            Gets to sets the thickness of the border, in twips.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartRounding">
      <summary>
            Represents the rounding of border corners.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ShouldSerializeAll">
      <summary>
            Returns false if All is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ResetAll">
      <summary>
            Resets the All to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ShouldSerializeLeftTop">
      <summary>
            Returns false if LeftTop is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ResetLeftTop">
      <summary>
            Resets the LeftTop to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ShouldSerializeLeftBottom">
      <summary>
            Returns false if LeftBottom is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ResetLeftBottom">
      <summary>
            Resets the LeftBottom to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ShouldSerializeRightTop">
      <summary>
            Returns false if RightTop is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ResetRightTop">
      <summary>
            Resets the RightTop to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ShouldSerializeRightBottom">
      <summary>
            Returns false if RightBottom is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartRounding.ResetRightBottom">
      <summary>
            Resets the RightBottom to default state.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRounding.All">
      <summary>
            Gets or sets the rounding radius for all corners of the border, in twips.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRounding.LeftTop">
      <summary>
            Gets or sets the rounding radius for the left top corner of the border, in twips.
            </summary>
      <remarks>
            Setting this property will override the <see cref="P:C1.Win.FlexReport.Chart.ChartRounding.All" />
            property value for the LeftTop region of the border.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRounding.LeftBottom">
      <summary>
            Gets or sets the rounding radius for the left bottom corner of the border, in twips.
            </summary>
      <remarks>
            Setting this property will override the <see cref="P:C1.Win.FlexReport.Chart.ChartRounding.All" />
            property value for the LeftBottom region of the border.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRounding.RightTop">
      <summary>
            Gets or sets the rounding radius for the right top corner of the border, in twips.
            </summary>
      <remarks>
            Setting this property will override the <see cref="P:C1.Win.FlexReport.Chart.ChartRounding.All" />
            property value for the RightTop region of the border.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartRounding.RightBottom">
      <summary>
            Gets or sets the rounding radius for the right bottom corner of the border, in twips.
            </summary>
      <remarks>
            Setting this property will override the <see cref="P:C1.Win.FlexReport.Chart.ChartRounding.All" />
            property value for the RightBottom region of the border.
            </remarks>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffects">
      <summary>
            Represents the different visual effects that can be used on the chart elements such as scaling, light, and shadow effects.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffects.Item(System.Int32)">
      <summary>
            Gets the visual effects style by the specified index.
            </summary>
      <param name="index">The index of the visual effects style.</param>
      <returns>A ChartVisualEffectsStyle object at the specified index.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffects.Item(System.String)">
      <summary>
            Gets the visual effects style by the specified name.
            </summary>
      <param name="name">The name of the visual effects style.</param>
      <returns>A ChartVisualEffectsStyle object with the specified name.</returns>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffects.Styles">
      <summary>
            Gets the collection of the VisualEffectsStyle.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStylesCollection">
      <summary>
            Represents the collection of ChartVisualEffectsStyle objects.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStylesCollection.Item(System.String)">
      <summary>
            Gets the visual effects style by the specified name.
            </summary>
      <param name="name">The name of the visual effects style.</param>
      <returns>A ChartVisualEffectsStyle object with the specified name.</returns>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle">
      <summary>
            Represents a visual effects style.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeAngle">
      <summary>
            Returns false if Angle is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetAngle">
      <summary>
            Resets the Angle to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeEnabled">
      <summary>
            Returns false if Enabled is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetEnabled">
      <summary>
            Resets the Enabled to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeGroupElements">
      <summary>
            Returns false if GroupElements is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetGroupElements">
      <summary>
            Resets the GroupElements to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeScalable">
      <summary>
            Returns false if Scalable is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetScalable">
      <summary>
            Resets the Scalable to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeScaleEffect">
      <summary>
            Returns false if ScaleEffect is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetScaleEffect">
      <summary>
            Resets the ScaleEffect to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeColors">
      <summary>
            Returns false if Colors is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetColors">
      <summary>
            Resets the Colors to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeEdge">
      <summary>
            Returns false if Edge is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetEdge">
      <summary>
            Resets the Edge to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeLight">
      <summary>
            Returns false if Light is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetLight">
      <summary>
            Resets the Light to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShouldSerializeShadow">
      <summary>
            Returns false if Shadow is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ResetShadow">
      <summary>
            Resets the Shadow to default state.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Name">
      <summary>
            Gets the style name.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Angle">
      <summary>
            Gets or sets the angle which is used during rendering.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Enabled">
      <summary>
            Gets or sets a value indicating whether effects are enabled.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.GroupElements">
      <summary>
            Gets or sets a value indicating whether the graphic elements can be grouped when rendering.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Scalable">
      <summary>
            Gets or sets a value indicating whether the size of elements depends on field size.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ScaleEffect">
      <summary>
            Gets or sets the scale factor which is used to scale elements when Scalable property is true.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Colors">
      <summary>
            Gets the color options for the style.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Edge">
      <summary>
            Gets the edge settings for the style.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Light">
      <summary>
            Gets the light settings for the style.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.Shadow">
      <summary>
            Gets the shadow settings for the style.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle">
      <summary>
            Represents the edge parameters.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.#ctor(C1.Win.FlexReport.Chart.ChartVisualEffectsStyle)">
      <summary>
            Initializes a new instance of <see cref="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle" /> object.
            </summary>
      <param name="parent">The parent style.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.ShouldSerializeRounding">
      <summary>
            Returns false if Rounding is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.ResetRounding">
      <summary>
            Resets the Rounding to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.ShouldSerializeWidth">
      <summary>
            Returns false if Width is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.ResetWidth">
      <summary>
            Resets the Width to default state.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.Rounding">
      <summary>
            Gets or sets the radius rounding for rectangular elements. When Scalable property is true it is measured in relative units, otherwise - in pixels.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.EdgeStyle.Width">
      <summary>
            Gets or sets the width of element edge. When Scalable property is true it is measured in relative units, otherwise - in pixels.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle">
      <summary>
            Represents the light parameters.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.#ctor(C1.Win.FlexReport.Chart.ChartVisualEffectsStyle)">
      <summary>
            Initializes a new instance of <see cref="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle" /> object.
            </summary>
      <param name="parent">The parent style.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeFocus">
      <summary>
            Returns false if Focus is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetFocus">
      <summary>
            Resets the Focus to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeGradient">
      <summary>
            Returns false if Gradient is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetGradient">
      <summary>
            Resets the Gradient to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeIntensity">
      <summary>
            Returns false if Intensity is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetIntensity">
      <summary>
            Resets the Intensity to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeScale">
      <summary>
            Returns false if Scale is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetScale">
      <summary>
            Resets the Scale to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeShape">
      <summary>
            Returns false if Shape is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetShape">
      <summary>
            Resets the Shape to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeShift">
      <summary>
            Returns false if Shift is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetShift">
      <summary>
            Resets the Shift to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ShouldSerializeSize">
      <summary>
            Returns false if Size is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.ResetSize">
      <summary>
            Resets the Size to default state.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Focus">
      <summary>
            Gets or sets the position of light focus.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Gradient">
      <summary>
            Gets or sets the type of light gradient.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Intensity">
      <summary>
            Gets or sets the light intensity.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Scale">
      <summary>
            Gets or sets the light scale. When scale is less than 1 the light pattern is
            repeated through the element.  Used only with LightShapeEnum.Rectangle.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Shape">
      <summary>
            Gets or sets the light shape.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Shift">
      <summary>
            Gets or sets the light shift.  Used only with <see cref="F:C1.Win.FlexReport.Chart.ChartLightShape.Ellipse" />.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.LightStyle.Size">
      <summary>
            Gets or sets the size of light spot.  Used only with <see cref="F:C1.Win.FlexReport.Chart.ChartLightShape.Ellipse" />.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle">
      <summary>
            Represents shadow parameters.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.#ctor(C1.Win.FlexReport.Chart.ChartVisualEffectsStyle)">
      <summary>
            Initializes a new instance of <see cref="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle" /> object.
            </summary>
      <param name="parent">The parent style.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.ShouldSerializeOffset">
      <summary>
            Returns false if Offset is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.ResetOffset">
      <summary>
            Resets the Offset to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.ShouldSerializeSoft">
      <summary>
            Returns false if Soft is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.ResetSoft">
      <summary>
            Resets the Soft to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.ShouldSerializeTransparency">
      <summary>
            Returns false if Transparency is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.ResetTransparency">
      <summary>
            Resets the Transparency to default state.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.Offset">
      <summary>
            Gets or sets the shadow offset.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.Soft">
      <summary>
            Gets or sets a value indicating whether the shadow has soft shape.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ShadowStyle.Transparency">
      <summary>
            Gets or sets the shadow transparency.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions">
      <summary>
            Represents color options.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.#ctor(C1.Win.FlexReport.Chart.ChartVisualEffectsStyle)">
      <summary>
            Initializes a new instance of <see cref="T:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions" /> object.
            </summary>
      <param name="parent">The parent style.</param>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.ShouldSerializeBrightness">
      <summary>
            Returns false if Brightness is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.ResetBrightness">
      <summary>
            Resets the Brightness to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.ShouldSerializeHueShift">
      <summary>
            Returns false if HueShift is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.ResetHueShift">
      <summary>
            Resets the HueShift to default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.ShouldSerializeSaturation">
      <summary>
            Returns false if Saturation is in default state.
            </summary>
    </member>
    <member name="M:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.ResetSaturation">
      <summary>
            Resets the Saturation to default state.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.Brightness">
      <summary>
            Gets or sets the brightness adjustment from -100 to 100.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.HueShift">
      <summary>
            Gets or sets the color hue shift from 0 to 359.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartVisualEffectsStyle.ColorOptions.Saturation">
      <summary>
            Gets or sets the saturation adjustment from -100 to 100.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartTitle">
      <summary>
            Represents the title of the chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartTitle.Compass">
      <summary>
            Gets or sets the general positioning of the title.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartTitle.Style">
      <summary>
            Gets the style of the title.
            Inherits from the ChartField default style.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartTitle.Text">
      <summary>
            Gets or sets the title text.
            (The Rtf property is used if it's not empty, otherwise, this property is used.)
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartTitle.Rtf">
      <summary>
            Gets or sets an RTF title string.
            (This property is used if it is not empty, otherwise the Text property is used.)
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartTitle.Image">
      <summary>
            Gets or sets the title image.
            </summary>
    </member>
    <member name="T:C1.Win.FlexReport.Chart.ChartLegend">
      <summary>
            Represents the legend of a chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Compass">
      <summary>
            Gets or sets the general positioning of the legend.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Style">
      <summary>
            Gets the legend style.
            Inherits from the ChartField default style.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Text">
      <summary>
            Gets or sets the legend text.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Orientation">
      <summary>
            Gets or sets the orientation of the legend entries.
            </summary>
      <remarks>
        <para>
            The legend entries can be oriented in a vertical or horizontal fashion.
            </para>
        <para>
            Vertical orientation indicates that legend entries will stack vertically
            as the legend height permits.  If the legend height cannot contain all of
            the entries and the legend is allowed to size itself, then additional columns
            of stacked entries will be added to the legend.
            </para>
        <para>
            Horizontal orientation indicates that legend entries will be created side by side
            as legend width permits.  If the legend width cannot contain all of the entries and
            the legend is allowed to size itself, then additional rows of entries will be added to the legend.
            </para>
        <para>
            Auto orientation automatically selects an appropriate orientation based upon
            the legend Compass property.  For east and west Compass values, Vertical orientation is used.
             For north and south Compass values, Horizontal orientation is used.
            </para>
      </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Legend2DReversed">
      <summary>
            Gets or sets the order of the ChartGroups2D in the legend of a 2D chart.
            </summary>
      <remarks>
            Use LegendReversed property of <see cref="T:C1.Win.FlexReport.Chart.Chart2DGroup" /> to reverse series order.
            </remarks>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Legend3DSeparator">
      <summary>
            Gets or sets the separator between range values of a stepped legend of a 3D chart.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Legend3DType">
      <summary>
            Gets or sets the type of a 3D chart legend.
            </summary>
    </member>
    <member name="P:C1.Win.FlexReport.Chart.ChartLegend.Legend3DFormatString">
      <summary>
            Gets or sets the 3D chart legend format string for numerical values.
            </summary>
    </member>
  </members>
</doc>